/*

*/
/*


#include <iostream>
using namespace std;
struct edge{
	int x,y;
}edges[110];
int n;
int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
	cin>>edges[i].x>>edges[i].y;

	int ans=0;
	for(int i=0;i<n;i++)
	{
		int max_y=0,max_x=0;
		for(int j=0;j<n;j++)
		{
			if(edges[i].x==edges[j].x) max_y=max(max_y,edges[j].y);
			if(edges[i].y==edges[j].y) max_x=max(max_x,edges[j].x);
		}
		ans=max(ans,(max_x-edges[i].x)*(max_y-edges[i].y));
	}
	 cout<<ans;
	return 0;
}






#include <iostream>
#include <stdio.h>
using namespace std;
int score[10001],ax=0,in=110,sum=0;
int main()
{
	int n;
	cin>>n;
	for(int i=0;i<n;i++)
	{
		cin>>score[i];
		ax=max(ax,score[i]);
		in=min(in,score[i]);
		sum+=score[i];
	}
	double ans=sum/(1.0*n);
	cout<<ax<<endl<<in<<endl;
	printf("%.2lf",ans);
	return 0;
}








403


#include <iostream>
using namespace std;


int main()
{
	itt n;
	cin>>n;
	while(n)
	{
		cout<<n<<' ';
		n/=2;
	}
	return 0;
}


#include <iostream>
using namespace std;

int main()
{
	string s;
	cin>>s;
	for(int i=0;i<s.size();i++)
	{
		if(((s[i]>='a'&&s[i]<='z')||(s[i]>='A'&&s[i]<='Z'))&&(s[i+1]>'1'&&s[i+1]<='9'))
		{
			int n=s[i+1]-'0';
			for(int j=0;j<n;j++) cout<<s[i];
			i++;
		}
		else if(((s[i]>='a'&&s[i]<='z')||(s[i]>='A'&&s[i]<='Z'))) cout<<s[i];
	}
	return 0;
}




class Solution {
public:
    int search(vector<int>& nums, int target) {
        int n=nums.size();
        int l=0,r=n-1;
        while(l<=r)
        {
            int mid=l+(r-l)/2;
            if(nums[0]<target)
            {
            	if(nums[0]<target&&target<nums[mid])
				r=mid-1;
				else l=mid+1;
            }
            else
            {
            	if(nums[mid]>target&&taregt<=nums[n-1])
            		l=mid+1;
            	else r=mid-1;
            }
        }
        return -1;
    }
};



#include <iostream>
#include <bits/stdc++.h>
using namespace std;
int month[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};
	int n;
int reverse(int x)
{
	int ans=0;
	while(x)
	{
		ans=ans*10+x%10;
		x/=10;
	}
	return ans;
}

bool check(int x)
{
	if(x<=n) return false;
	int d=x%100;
	x/=100;
	int m=x%100;
	return m>0&&m<13&&d<=month[m];
}

int main()
{

	cin>>n;
	for(int i=n/10000;i<=9999;i++)
	{
		int x=i*10000+reverse(i);
		if(check(x))
		{
			cout<<x<<endl;
			break;
		}
	}
	for(int i=n/1000000;i<=9999;i++)
	{
		int x=i*1000000+i*10000+reverse(i)*100+reverse(i);
		if(check(x))
		{
			cout<<x<<endl;
			break;
		}
	}
	return 0;
}
*
#include <bits/stdc++.h>
using namespace std;

int n;
int m[4]={0};
int a,b,g;
// 123 213 231 132
int p[4]={0,1,2,3};
int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
	{
		cin>>a>>b>>g;
		swap(p[a],p[b]);
		m[p[g]]++;
	}
	int max_n=0;
	int max_index=0;
	for(int i=1;i<4;i++)
	{
		if(m[i]>max_n)
		{
			max_n=m[i];
			max_index=i;
		}
	}
	cout<<max_index<<endl;
	return 0;
}






#include <string.h>
#include <stdio.h>
int main()
{
    char s[110];
    gets(s);
    int ans=0;
    for(int i=0;i<strlen(s);i++)
    {
        if((int)s[i]>=48 && (int)s[i]<=57) ans++;
    }
    printf("%d",ans);
    return 0;
}


#include <bits/stdc++.h>
using namespace std;

map<int,int> m;
int a[500001],n;
int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
	{
		cin>>a[i];
		m[a[i]]++;
	}
	if(m.count(0)) puts("NO");
	else if(m.size()==2)
	{
		int cnt=0;
		for(auto i:m)
		{
			a[++cnt]=i.first;
		}
		if(a[1]+a[2]==0) puts("NO");
		else puts("YES");
	}
	else puts("YES");
	return 0;
}

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
unordered_map<string,vector<int>> p;
int n,k;
ll ans;
string s;
int main()
{
	cin>>n>>k;
	for(int i=1;i<=n;i++)
	{
		cin>>s;
		auto &v=p[s];
		ans+=v.end()-lower_bound(v.begin(),v.end(),i-k-1);
		v.push_back(i);
	}
	cout<<ans<<endl;
	return 0;
}

#include <bits/stdc++.h>
using namespace std;

string s;
int x=0,y=0;
unordered_set<string> h;
string m[8]={"ULD","URD","LDR","LUR","DLU","DRU","RUL","RDL"};
int main()
{
    cin>>s;
    int len=s.size();
    for(int i=0;i<len;i++)
    {
        if((s[i]=='L'&&s[i+1]=='R')||(s[i]=='R'&&s[i+1]=='L'))
        {
            puts("NO");
            return 0;
        }
        if((s[i]=='U'&&s[i+1]=='D')||(s[i]=='D'&&s[i+1]=='U'))
        {
            puts("NO");
            return 0;
        }
        if(s[i]=='U') y++;
        else if(s[i]=='R') x++;
        else if(s[i]=='D') y--;
        else x--;
    }
    for(int i=0;i<len-2;i++)
    {
        string ans="";
        ans=s[i]+s[i+1]+s[i+2];
        h.insert(ans);
    }
    for(int i=0;i<8;i++)
    {
        if(h.count(m[i]))
        {
            puts("NO");
            return 0;
        }
    }
    if(x==0&&y==0) cout<<"NO"<<endl;
    else cout<<"YES"<<endl;
    return 0;
}


// # ����DP  ����������

#include <bits/stdc++.h>
using namespace std;
const int N = 510,INF=1e9;

int f[N][N];
int a[N][N];
int n;

int main()
{
    cin>>n;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=i;j++)
	    	cin>>a[i][j];
	for(int i=1;i<=n;i++)
		for(int j=1;j<=i;j++)
	    	f[i][j]=-INF;
	f[1][1]=a[1][1];
	for(int i=2;i<=n;i++)
	{
		for(int j=1;j<=i;j++)
		{
			f[i][j]=max(f[i-1][j-1]+a[i][j],f[i-1][j]+a[i][j]);
		}
	}
	int ans=-INF;
	for(int i=1;i<=n;i++) ans=max(ans,f[n][i]);
	cout<<ans<<endl;
    return 0;
}



���ű�ʮһ��

#include <bits/stdc++.h>
using namespace std;

const int N = 510,INF=1e9;

int f[N][N];
int m[N][N];

int n;

int main()
{
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=i;j++)
			cin>>f[i][j];
	}
	for(int i=2;i<=n;i++)
	{
		for(int j=1;j<=i;j++)
		{
			//f[i][j]=max(f[i-1][j-1],f[i-1][j])+a[i][j];
		    if(f[i-1][j-1]>f[i-1][j])
		    {
		    	f[i][j]+=f[i-1][j-1];
		    	m[i][j]=m[i-1][j-1]+1;
		    }
		    else
		    {
		    	f[i][j]+=f[i-1][j];
		    	m[i][j]=m[i-1][j]-1;
		    }
		}
	}
	int ans=-INF;
	for(int i=1;i<=n;i++)
	{
		if(abs(m[n][i])<=1&&f[n][i]>ans) ans=f[n][i];
	}
	cout<<ans<<endl;
}


*/
******************************************


#include <bits/stdc++.h>
using namespace std;
const int N = 1e5+10;

int a[N],b[N];
int n,m;

int main()
{
	cin>>n>>m;
	for(int i=0;i<n;i++) cin>>a[i];
	for(int i=0;i<m;i++) cin>>b[i];
	int l=0,r=0,ans=0;
	while(l<n&&r<m)
	{
		if(a[l]==b[r])
		{
			l++;
			r++;
			ans++;
		}
		else if(a[l]>b[r])
		{
			r++;
			b[r]+=b[r-1];
		}
		else
		{
			l++;
			a[l]+=a[l-1];
		}
	}
	cout<<ans<<endl;
	return 0;
}



#include <bits/stdc++.h>
using namespace std;
int t;
int n;
string s;
int main()
{
	cin>>t;
	while(t--)
	{
		cin>>n;
		cin>>s;
		int ans=0;
		int i=0;
		while(i<s.size()-1)
		{
			if(s[i]=='0')
			{
				if(s[i+1]=='0') ans+=2;
				else if(s[i+1]=='1'&&s[i+2]=='0') ans+=1;
			}
			i++;
		}
		cout<<ans<<endl;
	}
	return 0;
}



#include <bits/stdc++.h>
using namespace std;

int b[26];
char a[100001];
int ans=0;

int q(int x,int y)
{
	int n=0;
	memset(b,0,sizeof b);

	for(int i=x;i<=y;i++)
	{
		b[a[i]-'a']++;
	}
	for(int i=0;i<26;i++)
	{
		if(b[i]==1) n++;
	}
	return n;
}


int main()
{
	scanf("%s",a);
	int len=strlen(a);
	for(int i=0;i<len;i++)
	{
		for(int j=i;j<len;j++)
		{
			ans+=q(i,j);
		}
	}
	cout<<ans<<endl;
	return 0;
}




#include <bits/stdc++.h>
using namespace std;

int a[10];


int main()
{
	for(int i=0;i<10;i++) a[i]=2021;
	int k;
	int ans=-1;
	for(int i=1;i<=100000;i++)
	{
		int x=i;
		while(x)
		{
			int k=x%10;
			a[k]--;
			x/=10;
			if(a[k]==-1)
			{
				ans=i;
				break;
			}
		}
		if(ans!=-1)
		{
			break;
		}
	}
	cout<<ans-1<<endl;
	return 0;
}




#include <bits/stdc++.h>
using namespace std;
const int N = 0x3f3f3f3f;
typedef long long ll;
ll mp[2031][2031];


int main()
{
	int i,j,k;
	for(i=1;i<=2021;i++)
		for(j=1;j<=2021;j++)
			mp[i][j]=mp[j][i]=N;
	for(i=1;i<=2021;i++)
		for(j=1;j<=2021;j++)
			if(abs(i-j)<=21)
				mp[i][j]=mp[j][i]=(i*j)/(__gcd(i,j));
	for(k=1;k<=2021;k++)
	{
		for(i=1;i<=2021;i++)
		{
			for(j=1;j<=2021;j++)
			{
				if(mp[i][j]>mp[i][k]+mp[k][j]) mp[i][j]=mp[j][i]=mp[i][k]+mp[k][j];
			}
		}
	}
	cout<<mp[1][2021]<<endl;
	return 0;
}

*




#include <iostream>
#include <string>
using namespace std;
int main()
{
	int n;
	cin>>n;
	while(n--)
	{
		string s,sf;
		cin>>s;
		sf=s.substr(0,6);
		string home;
		int t=(s[0]-'0')*10+(s[1]-'0');
		if(t==33) home="zhejiang,";
		else if(t==11) home="beijing,";
		else if(t==71) home="Taiwan,";
		else if(t==81) home="Hong Kong,";
		else if(t==82) home="Macao,";
		else if(t==54) home="Tibet,";
		else if(t==21) home="Liaoning,";
		else if(t==31) home="shanghai,";

		cout<<"He/She is from "<<home;
		cout<<"and his/her birthday is on "
		<<s[10]<<s[11]<<","<<s[12]<<s[13]<<","<<s[6]<<s[7]<<s[8]<<s[9]
		<<" based on the table."<<endl;
	}
	return 0;
}

#include <iostream>
#include <string>
using namespace std;
int main()
{
    int n,t;
    string home,a;
    cin>>n;
    for(int k = 0 ; k < n ; k++)
    {
        cin>>a;
        t = (a[0]-'0')*10+a[1]-'0';
        switch(t)
        {
            case 11:home = "Beijing";break;
            case 31:home = "Shanghai";break;
            case 21:home = "Liaoning";break;
            case 33:home = "Zhejiang";break;
            case 54:home = "Tibet";break;
            case 71:home = "Taiwan";break;
            case 81:home = "Hong Kong";break;
            case 82:home = "Macao";break;
            default :break;
        }
        cout<<"He/She is from "<<home<<",and his/her birthday is on "
        <<a[10]<<a[11]<<","<<a[12]<<a[13]<<","<<a[6]<<a[7]<<a[8]<<a[9]
        <<" based on the table."<<endl;
    }
    return 0;
}








``````````````````````
#include <iostream>
#include <stdio.h>
using namespace std;

int main()
{
	int n;
	while(scanf("%d",&n)!=EOF)
	{
		int x=n;
		if(n==1) cout<<1<<endl;
		else if(n==2) cout<<4<<endl;
		else{
		while(n--)
		{
			if(n==2)
			{
				x*=2;
				break;
			}
			else
			{
				x=(x+1)*2+1;
			}
		}
		cout<<x<<endl;
	}
	}
	return 0;
}```````````````




20312088





#include <iostream>
using namespace std;
const int N = 1010;

int t,n;
int w[N],v[N];
int f[N][N];
int main()
{
	cin>>t>>n;
	for(int i=1;i<=n;i++)
	{
		cin>>v[i]>>w[i];
	}
	for(int i=1;i<=n;i++)
	{
		for(int j=0;j<=t;j++)
		{
			f[i][j]=f[i-1][j];
			if(j>=v[i]) f[i][j]=max(f[i][j],f[i-1][j-v[i]]+w[i]);
		}
	}
	cout<<f[n][t];
	return 0;
}
*
#include <iostream>
using namespace std;
const int N = 20010;
int m,n;
int f[N];
int main()
{
	//���������m   ��Ʒ����Ϊn
	cin>>m>>n;
	int x;
	for(int i=1;i<=n;i++)
	{
		cin>>x;
		for(int j=m;j>=x;j--)
		{
		    f[j]=max(f[j-x]+x,f[j]);
		}
	}
	cout<<m-f[m];
	return 0;
}*

#include <iostream>
#include <cstring>
#include <stdio.h>
using namespace std;

int n;

int main()
{
	cin>>n;
	getchar();
	while(n--)
	{

		char s[10000];
		gets(s);
		int ans=0;
		for(int i=0;i<strlen(s);i++)
		{
			if(s[i]<0) ans++;
		}
		cout<<ans/2<<endl;
	}
	return 0;
}


#include <iostream>
#include <string>
using namespace std;

int n;
int solve(string s)
{
	int n=s.size();
	for(int i=0;i<n/2;i++)
	{
		if(s[i]!=s[n-i-1]) return 0;
	}
	return 1;
}
int main()
{
	cin>>n;
	while(n--)
	{
		string s;
		cin>>s;
		if(solve(s)) cout<<"yes"<<endl;
		else cout<<"no"<<endl;
	}
	return 0;
}
*
#include <iostream>
#include <stdio.h>
using namespace std;
#define lcm(a,b) a/gcd(a,b)*b
int n;
long gcd(long m,long n)
{
	while(n)
	{
		long temp=m%n;
		m=n;
		n=temp;
	}
	return m;
}

int main()
{
	int a[100001];
	while(scanf("%d",&n)!=EOF)
	{
		int a,x;
		cin>>a;
		while(--n)
		{
			cin>>x;
			a=lcm(a,x);
		}
		cout<<a<<endl;
	}
	return 0;
}
*

#include <iostream>
#include <stdio.h>
#include <cstring>
using namespace std;

int n;

int main()
{
	cin>>n;
	getchar();
	while(n--)
	{
		int a=0,e=0,i=0,o=0,u=0;
		char s[101];
		gets(s);
		for(int j=0;j<strlen(s);j++)
		{
			if(s[j]=='a'||s[j]=='A') a++;
			if(s[j]=='e'||s[j]=='E') e++;
			if(s[j]=='i'||s[j]=='I') i++;
			if(s[j]=='o'||s[j]=='O') o++;
			if(s[j]=='u'||s[j]=='U') u++;
		}
		cout<<"a:"<<a<<endl;
		cout<<"e:"<<e<<endl;
		cout<<"i:"<<i<<endl;
		cout<<"o:"<<o<<endl;
		cout<<"u:"<<u<<endl;
		if(n) cout<<endl;

	}

	return 0;
}
*

#include <iostream>
#include <stdio.h>
#include <cstring>
using namespace std;

char s[105];

int main()
{
	while(gets(s))
	{
		int len=strlen(s);
		s[0]-='a'-'A';
		for(int i=1;i<len;i++)
		{
			if(s[i]==' ') s[i+1]-='a'-'A';
		}
		cout<<s<<endl;
	}
	return 0;
}


#include <iostream>
#include <stdio.h>
#include <cstring>
using namespace std;

int main()
{
	char s[10011];
	while(scanf("%s",&s)!=EOF)
	{
		int maxchar=s[0];
		for(int i=0;i<strlen(s);i++)
		{
			if(s[i]>maxchar) maxchar=s[i];
		}
		for(int i=0;i<strlen(s);i++)
		{
			cout<<s[i];
			if(s[i]==maxchar)
			{
				cout<<"(max)";
			}
		}
		cout<<endl;
	}
	return 0;
}



#include <iostream>
#include <stdio.h>
#include <cstring>
using namespace std;

int n;
char s[100001];

int main()
{
	cin>>n;
	getchar();
	while(n--)
	{
		gets(s);
		int c=0;
		int l=strlen(s);
		if(s[0]>='a'&&s[0]<='z'||s[0]>='A'&&s[0]<='Z'||s[0]=='_')
		{
			for(int i=1;i<l;i++)
			{
				if((s[i]>='a'&&s[i]<='z')||(s[i]>='A'&&s[i]<='Z')||s[i]=='_'||(s[i]>='0'&&s[i]<='9'))
				c++;
				else
				{
					cout<<"no"<<endl;
					break;
				}
				if(c+1==l)
				{
					cout<<"yes"<<endl;
				}
			}
		}
		else cout<<"no"<<endl;
	}
	return 0;
}

#include <iostream>
#include <stdio.h>
#include <stdio.h>
using namespace std;

int n;

int main()
{
	while(scanf("%d",&n)!=EOF&&n!=0)
	{
		int a[10001];
		int mp,mn=1000000;
		for(int i=0;i<n;i++)
		{
			cin>>a[i]
			if(a[i]<mn)
			{
				mn=a[i];
				mp=i;
			}
		}
		if(mp!=0){
			a[mp]=a[0];
			a[0]=mp;
		}
		cout<<a[0];
		for(int i=1;i<n;i++)
		{
			cout<<" "<<a[i];
		}
		cout<<endl;
	}
	return 0;
}





#include <iostream>
#include <cmath>
#include <stdio.h>
using namespace std;
int main()
{
	int n,m;
	while(scanf("%d%d",&n,&m)!=EOF)
	{
		if(n==0&&m==0) break;
		int a[1000][1000];
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				cin>>a[i][j];
			}
		}
		int ans=a[0][0],x=0,y=0;
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<m;j++)
			{
				if(abs(a[i][j])>abs(ans))
				{
					ans=a[i][j];
					x=i+1;
					y=j+1;
				}
			}
		}
		cout<<x<<" "<<y<<" "<<ans<<endl;
	}
	return 0;
}
*

#include <iostream>
#include <algorithm>
#include <unordered_map>
using namespace std;
const int N = 1e5+10;

struct edge{
	int ts,id;
	bool operator < (const edge x) const {
		return ts<x.ts;
	}
}edges[N];

int n,m,ti;
map<int,int> m;
int main()
{
	cin>>n>>m>>ti;

	for(int i=0;i<m;i++)
		cin>>edges[i].ts>>edges[i].id;
	sort(edges,edges+m);



	return 0;
}
*

*
#################   a^b


################   64λ�����˷�

*

#include <iostream>
#include <algorithm>
using namespace std;


int main()
{
	int n,m,a[100001];
	while(cin>>n>>m,(n||m))
	{
		int x;
		for(int i=0;i<n;i++)
		{
			cin>>a[i];
		}
		a[n]=m;
		sort(a,a+n+1);
		cout<<a[0];
		for(int i=1;i<=n;i++)
		{
			cout<<" "<<a[i];
		}
		cout<<endl;
	}
	return 0;
}
*
#include <iostream>

using namespace std;

int main()
{
	int n;
	string s;
	cin>>n;
	while(n--)
	{
		cin>>s;
		int ans=0;
		for(int i=0;i<s.size();i++)
		{
			if(s[i]>='0'&&s[i]<='9') ans++;
		}
		cout<<ans<<endl;
	}
	return 0;
}
*
#include <iostream>

using namespace std;
const int N = 100001;
int a[N];
int n;
void swap(int &x,int &y)
{
	int a=x;
	x=y;
	y=a;
}
int main()
{
	while(cin>>n,n)
	{
		for(int i=0;i<n;i++)
			cin>>a[i];
		int min_index=0,num=a[0];
		for(int i=1;i<n;i++)
		{
			if(a[i]<num)
			{
				num=a[i];
				min_index=i;
			}
		}
		swap(a[min_index],a[0]);
		cout<<a[0];
		for(int i=1;i<n;i++) cout<<" "<<a[i];
		cout<<endl;
	}
	return 0;
}
*

#include <iostream>
#include <vector>
using namespace std;

int n,m;
vector<int> res;
int main()
{
	while(cin>>n>>m)
	{
		int sum=0;
		for(int i=1;i<=n;i++)
		{
			sum+=i*2;
			if(i%m==0)
			{
				res.push_back(sum/m);
				sum=0;
			}
		}
		if(n%m!=0) res.push_back(sum/(n%m));
		cout<<res[0];
		for(int i=1;i<res.size();i++)
		{
			cout<<" "<<res[i];
		}
		cout<<endl;
		res.clear();
	}
	return 0;
}
*

#include <iostream>
using namespace std;

int n;
int a[33][33];

void fun()
{
	a[1][1]=1;
	a[2][1]=a[2][2]=1;
	for(int i=3;i<=30;i++)
	{
		for(int j=1;j<=i;j++)
		{
			a[i][j]=a[i-1][j]+a[i-1][j-1];
		}
	}
}

int main()
{
	fun();
	while(cin>>n)
	{
		for(int i=1;i<=n;i++)
		{
			cout<<a[i][1];
			for(int j=2;j<=i;j++)
			{
				cout<<" "<<a[i][j];
			}
			cout<<endl;
		}
		cout<<endl;
	}
	return 0;
}

*

*

#include <iostream>

using namespace std;

int t;
char op;
int y;

int main()
{
	cin>>t;
	while(t--)
	{
		cin>>op>>y;
		if(op>='a'&&op<='z') cout<<-(op-'a'+1)+y<<endl;
		else cout<<op-'A'+y+1<<endl;
	}
	return 0;
}


#include <iostream>
#include <stdio.h>
#include <cstring>
using namespace std;

char a[40000],b[40000];
void pop(char *s)
{
	int i,len=strlen(s)-1;
	for(i=len;i>=0;i--)
	{
		if(s[i]=='0') len--;
		else break;
	}
	if(s[i]=='.') len--;
	s[len+1]='\0';
}

int main()
{
	int i;
	while(scanf("%s%s",a,b)!=EOF)
	{
		for(int i=0;i<strlen(a);i++)
		{
			if(a[i]=='.') pop(a);
		}
		for(int i=0;i<strlen(b);i++)
		{
			if(b[i]=='.') pop(b);
		}
		if(strcmp(a,b))
		cout<<"NO"<<endl;
		else cout<<"YES"<<endl;
	}
	return 0;
}
*

#include <iostream>
#include <sstream>
#include <string>
#include <set>
using namespace std;

string s,w;

int main()
{
	while(getline(cin,s),s!="#")
	{
		set<string> ans;
		istringstream str(s);
		while(str>>w)
		{
			ans.insert(w);
		}
		cout<<ans.size()<<endl;
	}
	return 0;
}
*

#include <iostream>
#include <string>
using namespace std;

int n,x;
//int a[11];

int main()
{
	cin>>n;
	while(n--)
	{
		string s;
		cin>>s;
		string ans;
		ans=s.substr(6,5);
		ans="6"+ans;
		cout<<ans<<endl;
	}
	return 0;
}
*

#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <cstring>
#include <iomanip>
using namespace std;

struct Stu{
	char name[1000];
	int sn;
	int st;
}stu[1000];

int n,m;
int cmp(Stu x,Stu y)
{
	if(x.sn==y.sn)
	{
		return x.st<y.st;
	}
	return x.sn>y.sn;
}
int main()
{
	cin>>n>>m;
	int p=0;
	while(cin>>stu[p].name)
	{
		for(int i=0;i<n;i++)
		{
			char ch;
			int k,l;
			cin>>k;
			if(k<=0) continue;
			stu[p].sn++;
			stu[p].st+=k;
			if(getchar()=='(')
			{
				cin>>l;
				cin>>ch;
				stu[p].st+=l*m;
			}
		}
		p++;
	}
	sort(stu,stu+n,cmp);
	for(int i=0;i<p;i++)
	{
		cout<<left<<setw(10)<<stu[i].name<<" "<<right<<setw(2)<<stu[i].sn<<right<<" "<<setw(4)<<stu[i].st<<endl;
	}
	return 0;
}


#include <iostream>
#include <iomanip>
using namespace std;

int main()
{
	char op;
	int n,s=0;
	while(cin>>op,op!='@')
	{
		if(s) cout<<endl;
		s=1;
		cin>>n;
		getchar();

		for(int i=0;i<n;i++)
		{
			for(int j=0;j<i+n;j++)
			{
				if(j==n-1-i||j==n-1+i) cout<<op;
				else cout<<" ";
			}
			cout<<endl;
		}
	}
	return 0;
}
//������:http://acm.hdu.edu.cn/showproblem.php?pid=2091
#include <queue>
#include <functional>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <assert.h>
using namespace std;
#define N 100005
//�ӵ㣺ע����ĩ��Ҫ�пո� ע�����ͼ�μ任��
char ch;
int main()
{
   bool flag = 0;
    while(scanf("%c",&ch),ch!='@'){  //������ʹ�� scanf("%c",ch) ���� getchar()  ��Ϊ��ȡ�߻س��� ������ scanf("%s",s) ���� cin>>sting ע����ʱ��Ҫ��"@"
      if(flag) printf("\n");
      flag = 1;
      int n;
      scanf("%d",&n);
      getchar();                     //ȡ������n�� ���Ļس�
      for(int i=0;i<n;i++){          //���ǱȽϼ���д��
         for(int j=0;j<i+n;j++){
            if(j==n-1-i || j==n-1+i || i==n-1) printf("%c",ch);
            else printf(" ");
         }
         printf("\n");
      }
    }
    return 0;
}

*
#include <iostream>
#include <stdio.h>
using namespace std;

int n,r;
void solve(int n,int r)
{
	int f=1;
	if(n<0)
	{
		f=0;
		n=-n;
	}
	string ans="";
	while(n)
	{
		int a=n%r;
		if(a==10) ans+='A';
		else if(a==11) ans+='B';
		else if(a==12) ans+='C';
		else if(a==13) ans+='D';
		else if(a==14) ans+='E';
		else if(a==15) ans+='F';
		else ans+=a+'0';
		n/=r;
	}
	if(!f) cout<<"-";
	for(int i=ans.size()-1;i>=0;i--)
	{
		cout<<ans[i];
	}
	cout<<endl;
}

int main()
{
	while(scanf("%d%d",&n,&r)!=EOF)
	{
		solve(n,r);
	}
	return 0;
}
*


*





*

#include <iostream>
#include <iomanip>
using namespace std;
int main()
{
	long long a,b;
	while(cin>>hex>>a>>b)
	{
		if(a+b<0)
		{
			cout<<setiosflags(ios::uppercase)<<hex<<"-"<<-(a+b)<<endl;
		}
		else cout<<setiosflags(ios::uppercase)<<hex<<a+b<<endl;
	}
	return 0;
}
*

*
#include <iostream>

using namespace std;

int a,b;
int n[1000001];

int main()
{
	n[0]=1;
	for(int i=1;i<1000002;i++)
	{
		int m=i,f=1;
		while(m)
		{
			if(m%10==4)
			{
				f=0;
				break;
			}
			else if(m%10==2&&m%100/10==6)
			{
				f=0;
				break;
			}
			m/=10;
		}
		if(f) n[i]=n[i-1]+1;
		else n[i]=n[i-1];
	}
	while(cin>>a>>b,(a||b))
	{
		cout<<n[b]-n[a-1]<<endl;
	}
	return 0;
}

*

#include <stdlib.h>
#include <stdio.h>
using namespace std;

int main()
{
	char s[1000];
	double a,b,ans;
	while(~scanf("%s",s))
	{
		scanf("%lf%lf",&a,&b);
		ans+=a*b;
	}
	printf("%.1lf\n",ans);
	return 0;
}
*



#include <iostream>
typedef long long ll;
using namespace std;
int n,m;
int g[10][10];
int st[10][10];
int dx[4]={-1,0,1,0};
int dy[4]={0,1,0,-1};
int ans=100,sum=0;
int total;
void dfs(int x,int y,int total,int s)
{
	if(total==sum/2)
	{
		ans=min(ans,s);
		return ;
	}
	if(total>sum/2) return ;
	for(int i=0;i<4;i++)
	{
		int nx=x+dx[i],ny=y+dy[i];
		if(st[nx][ny]==0&&nx>=0&&ny>=0&&nx<n&&ny<m)
		{
			st[nx][ny]=1;
			dfs(nx,ny,total+g[nx][ny],s+1);
			st[nx][ny]=0;
		}
	}
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(0),cout.tie(0);
	cin>>m>>n;
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			cin>>g[i][j];
			sum+=g[i][j];
		}
	}
	st[0][0]=1;
	dfs(0,0,g[0][0],1);
	if(ans!=100) cout<<ans<<endl;
	return 0;
}
*
                       codeforces 231 team

*
#include <iostream>
using namespace std;
int a[55];
int n,k,m=0;
int main()
{
	cin>>n>>k;
	for(int i=1;i<=n;i++)
		cin>>a[i];
	k=a[k];
	for(int i=1;i<=n;i++)
		if(a[i]>=k&&a[i]) m++;
	cout<<m<<endl;
	return 0;
}

#include <iostream>

using namespace std;

int main()
{
	string s,t;
	int n;
	cin>>n;
	while(n--)
	{
		cin>>s>>t;
		if(s==t)
		{
			cout<<"YES"<<endl;
		}
		else
		{
			bool f=true;
			int lastindex;
			int m=t.size();
			lastindex=s.rfind(t[m-1]);
			s[lastindex]='1';
			if(lastindex==-1)
			{
				cout<<"NO"<<endl;
			}
			else
			{
				int i=m-2;
				while(i>=0)
				{
					int pos=s.rfind(t[i]);
					if(pos==-1)
					{
						cout<<"NO"<<endl;
						f=false;
						break;
					}
					else if(pos>lastindex)
					{
						cout<<"NO"<<endl;
						f=false;
						break;
					}
					else
					{
						lastindex=pos;
						s[pos]='1';
					}
					i--;
				}
				if(f) cout<<"YES"<<endl;
			}

		}
	}
	return 0;
}

*


#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
struct P {
	int x, y;
} p[3];
struct edge
{
	int a,b,c,d;
}edges[5];
int cmp(P a, P b) {
	if (a.x == b.x)
		return a.y < b.y;
	return a.x < b.x;
}

int main() {
	for (int i = 0; i < 3; i++) {
		cin >> p[i].x >> p[i].y;
	}
	sort(p, p + 3, cmp);

	return 0;
}
*


#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
struct P {
	int x, y;
} p[10];

struct PT {
	int x1, y1, x2, y2;
};

int cmp(P a, P b) {
	if (a.x == b.x)
		return a.y < b.y;
	return a.x < b.x;
}

int main() {
	PT t[10];
	PT s[10];
	for (int i = 0; i < 3; i++) {
		cin >> p[i].x >> p[i].y;
	}
	sort(p, p + 3, cmp);

	t[0] = {p[0].x, p[0].y, p[0].x, p[1].y};
	t[1] = {p[0].x, p[1].y, p[1].x, p[1].y};
	t[2] = {p[1].x, p[1].y, p[2].x, p[1].y};
	t[3] = {p[2].x, p[1].y, p[2].x, p[2].y};
	int tt = -1;
	for (int i = 0; i < 4; i++) {
		if (tt == -1)
			s[++tt] = t[i];
		else {
			auto q = s[tt];
			tt--;
			if (q.x1 == t[i].x2 || q.y1 == t[i].y2) {
				s[++tt] = {q.x1, q.y1, t[i].x2, t[i].y2};
			} else {
				s[++tt] = q;
				s[++tt] = t[i];
			}
		}
	}
	cout << tt+1 << endl;
	for (int i = 0; i <= tt; i++)
		cout << s[i].x1 << " " << s[i].y1 << " " << s[i].x2 << " " << s[i].y2 << endl;
	return 0;
}


#include <iostream>
using namespace std;
int main() {
	int n, ans = 0;
	cin >> n;
	while (n--) {
		string s;
		cin >> s;
		if (s[1] == '+')
			ans++;
		else
			ans--;
	}
	cout << ans;
	return 0;
}

*

#
*


#include <iostream>
#include <unordered_set>
#include <algorithm>
using namespace std;

int n, m, x;
int a[110];
int main() {
	while (cin >> n >> m, n + m) {
		unordered_set<int> h;
		for (int i = 0; i < n; i++)
			cin >> a[i];
		for (int i = 0; i < m; i++) {
			cin >> x;
			h.insert(x);
		}
		sort(a, a + n);
		int num = 0;
		for (int i = 0; i < n; i++) {
			if (!h.count(a[i])) {
				cout << a[i] << " ";
				num++;
			}
		}
		if (!num)
			cout << "NULL";
		cout << endl;
	}
	return 0;
}

*
#include <iostream>
#include <cstring>
#include <algorithm>
#include <queue>

using namespace std;

int n,k,x;
queue<int> q;
int main()
{
    cin>>n>>k;
    for(int i=1;i<=n;i++) q.push(i);
    while(k--)
    {
        cin>>x;
        int t=x%q.size();
        for(int i=0;i<t;i++)
        {
            q.push(q.front());
            q.pop();
        }
        cout<<q.front()<<" ";
        q.pop();
    }
    return 0;
}

*

#include <iostream>
#include <stdio.h>
#include <cstring>
using namespace std;

int main() {
	char a[110], b[110];
	scanf("%s%s", a, b);
	int n = strlen(a);
	for (int i = 0; i < n; i++) {
		if (a[i] >= 'a' && a[i] <= 'z')
			a[i] = a[i] - ('a' - 'A');
		if (b[i] >= 'a' && b[i] <= 'z')
			b[i] = b[i] - ('a' - 'A');
		if (a[i] > b[i]) {
			cout << "1";
			return 0;
		} else if (a[i] < b[i]) {
			cout << "-1";
			return 0;
		}
	}
	cout << "0";
	return 0;
}

*
#include <iostream>
using namespace std;

int main() {
	string s = "475730385258137";
	int k = 13;
	string ans = "";
	while (s.size() > k) {
		int i = 0;
		int n = s.size();
		while (i < n) {
			string str;
			if (i + k <= n)
				str = s.substr(i, k);
			else
				str = s.substr(i, n % k);
			int t;
			t = std::stoi(str);
			int m = 0;
			while (t) {
				m += t % 10;
				t /= 10;
			}
			ans += to_string(m);
			i += k;
			// cout<<i<<endl;
		}
		s = ans;
		ans = "";
	}
}

*/

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main() {
	string s;
	vector<int> ans;
	cin >> s;
	for (int i = 0; i < s.size(); i++) {
		if (s[i] >= '0' && s[i] <= '9')
			ans.push_back(s[i] - '0');
	}
	sort(ans.begin(), ans.end());
	cout << ans[0];
	for (int i = 1; i < ans.size(); i++) {
		cout << "+" << ans[i];
	}
	return 0;
}
#include<bits/stdc++.h>
#define abdo ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define ll long long int
#define tc ll t ; cin>>t; while(t--)
#define pb push_back
#define pob pop_back
#define loopj(j,a,b) for(ll j = a ; j < b-1 ; j++)
#define loopi(i,a,b) for (ll i = a; i < b; i++)
#define vl vector<ll>
#define vi vector<int>
#define lb lower_bound
#define ub upper_bound
#define sumv(v) accumalate(v.begin(),v.end(),0)
#define mii map<int,int>
#define umii unordered_map<int,int>
#define order(v) sort(v.begin(),v.end())
#define ed '\n'
#define el "\n"
#define all(v) v.begin(),v.end()
#define YES cout<<"YES"<<ed;
#define NO cout<<"NO"<<ed;
#define Yes cout<<"Yes"<<ed;
#define No cout<<"No"<<ed;
#define yEs cout<<"yEs"<<ed;
#define yeS cout<<"yeS"<<ed;
#define nO cout<<"nO"<<ed;
#define yes cout<<"yes"<<ed;
#define no cout<<"no"<<ed;
#define ans1 ll ans = 0;
#define cnt1 ll cnt = 0;
#define sum(a , b) (a + b)
#define product(a , b) (a * b)
#define squarear(a) (a * a)
#define rectanglear(a , b) (a * b)
#define squarepre(a) (a * 4)
#define rectanglpr(a , b) ((a + b)*2)
typedef unsigned long long ull;
typedef long double lld;
using namespace std;
const int N = 1e3;
ll frq[N];
vector<bool> seive(1e6 + 1, true);
const int maxn = 1e5;
bool isprime[maxn];
const int mod = 998244353;
ll fact[N];
//*-----------------------------------------------------------------------------------------------------------------------------------------*
void code()
{
    abdo;
}
int primeFactors(int n)
{
    int c=0;
    while (n % 2 == 0)
    {
        c++;
        n = n/2;
    }
    for (int i = 3; i <= sqrt(n); i = i + 2)
    {
        while (n % i == 0)
        {
            c++;
            n = n/i;
        }
    }
    if (n > 2)
    {
        c++;
    }
    return c;
}
int maxSubArraySum(int a[], int size)
{
    int max_so_far = INT_MIN, max_ending_here = 0;
 
    for (int i = 0; i < size; i++)
    {
        max_ending_here = max_ending_here + a[i];
        if (max_so_far < max_ending_here)
            max_so_far = max_ending_here;
 
        if (max_ending_here < 0)
            max_ending_here = 0;
    }
    return max_so_far;
}
ll gcd(ll a, ll b)
{
    if (b > a)
    {
        return gcd(b, a);
    }
    if (b == 0)
    {
        return a;
 
    }
    return gcd(b, a % b);
}
void extendgcd(ll a, ll b, ll*v)
{
    if (b == 0)
    {
        v[0] = 1;
        v[1] = 0;
        v[2] = a;
        return ;
    }
    extendgcd(b, a % b, v);
    ll x = v[1];
    v[1] = v[0] - v[1] * (a / b);
    v[0] = x;
    return;//pass an arry of size1 3
}
void swap(int &x, int &y)
{
    int temp = x;
    x = y;
    y = temp;
}
bool isPalindrome(string s)
 
{
 
    int n=s.length();
 
    for(int i=0; i<n/2; i++)
 
    {
 
        if(s[i] != s[n-i-1])
 
            return false;
 
    }
 
    return true;
 
}
void palindrome(int n)
{
    int rev=0,val;
    val = n;
    while(n > 0)
    {
        rev = rev * 10 + n % 10;
        n = n / 10;
    }
    if(val==rev)
        cout<<val<<" is a palindrome"<<endl;
    else
        cout<<val<<" is not a palindrome"<<endl;
}
 
bool plin(int index)
{
    ll arr[N];
    int n;
    if(index == n)
    {
        return 1;
    }
    return (arr[index] == arr[n - index -1]) && plin(index + 1);
 
}
 
bool isPrime()
{
    int n;
    if (n <= 1)
        return false;
    for (int i = 2; i <= sqrt(n); i++)
        if (n % i == 0)
            return false;
 
    return true;
}
bool isEven()
{
    int n;
    return (n % 2 == 0);
}
void check_X0r(ll a, ll b)
{
    cout<<"a = " << a <<","<< " b = " << b <<endl;
    cout << "a & b = " << (a & b) << endl;
    cout << "a | b = " << (a | b) << endl;
    cout << "a ^ b = " << (a ^ b) << endl;
    cout << "~a = " << (~a) << endl;
    cout<<"b << 1" <<" = "<< (b << 1) <<endl;
    cout<<"b >> 1 "<<"= " << (b >> 1 )<<endl;
 
}
int findSumstr(string str)
{
    string temp = "";
    int sum = 0;
    for (char ch : str)
    {
        if (isdigit(ch))
            temp += ch;
        else
        {
            sum += atoi(temp.c_str());
            temp = "";
        }
    }
    return sum + atoi(temp.c_str());
}
void sieve()
{
    for(int i=2; i<maxn; i++) isprime[i]=1;
    for(int i=2; i*i<maxn; i++) if(isprime[i])
        {
            for(int j=i*i; j<maxn; j+=i) isprime[j]=0;
        }
}
ll exp(ll a, ll b)
{
    ll res=1;
    while(b)
    {
        if(b&1) res=(res*a);
        a=(a*a);
        b>>=1;
    }
    return res;
}
ll modexp(ll a, ll b)
{
    ll res=1;
    while(b)
    {
        if(b&1) res=(res*a)%mod;
        a=(a*a)%mod;
        b>>=1;
    }
    return res;
}
ll sqt(ll x)
{
    ll start =1;
    ll end = x;
    while (end>start)
    {
        end = start+(end-start)/2;
        start = x/end;
    }
    return end;
}
ll inv(ll a)
{
    return modexp(a, mod-2);
}
ll C(ll n, ll r)
{
    ll nume = fact[n];
    ll deno = (inv(fact[n-r]) * inv(fact[r])) % mod;
    return (nume * deno) % mod;
}

void solve( int n , string red , vector<string> red_or_blue)
{
    for(ll i = 0 ; i < n ; i++)
    {
        if(red_or_blue[i] == red)
        {
            cout << "R" <<ed;
            return;
        }
    }

    cout<< "B" <<ed;
}
void testCases()
{
    //tc
    //solve();
}
int main()
{
  code();
 
  // tc
    {
       string s, m[N] ;
       cin>>s;
       int cnt=0  , cnt2=0  , cnt3=0   ;
       for(int i = 0 ; i <s.size() ; i++)
       {
        if(s[i] == '1')
        {
            cnt++;
        }
        else if(s[i] == '2')
        {
           cnt2++;
        }
        else if(s[i] == '3')
        {
           cnt3++;
        }

       }
       int i =0;
       while (cnt--)
       {
       m[i]='1';
       m[i+1]='+';
       i+=2;
     }
     while(cnt2--){
     m[i]='2';
       m[i+1]='+';
       i+=2;
     }
     while(cnt3--){
        m[i]='3';
       m[i+1]='+';
       i+=2;
     }
     for(int j = 0 ; j <s.size() ; j++)
       cout<<m[j];
     }


}
//#include<iostream>
//#include<cstring>
//#include<cstdio>
//#include<string>
//using namespace std;
//void Slove(int k,int n,string s)
//{
//
//}
//int main()
//{
//    int t,n,i;
//    scanf("%d",&t);
//    while(t--)
//    {
//        scanf("%d",&n);
//        cout <<"program sort(input,output);\nvar";
//        string s = "a";
//        for(i = 1; i < n; i++)
//        {
//            s.push_back(',');
//            s.push_back(i + 'a');
//        }
//        cout<<s<<" : integer;\nbegin\n"<<"  readln("<<s<<");";
//        string ch = "a";
//        Slove(1,n,ch);
//        cout << "end."<<endl;
//    }
//    return 0;
//}



//#include<iostream>
//#include<cstdio>
//#include<cstring>
//#include<algorithm>
//using namespace std;
//const int N = 1000005;
//char Neck[N << 1],temp[N << 1];
//int sum[N << 1],Q[N << 1];
//int vis[2][N];
//void Solve(int m,int n,int k)
//{
//    int i;
//    sum[0] = 0;
//    for(i = 1; i <= m; i++)
//    {
//        sum[i] = sum[i-1] + (Neck[i] == 'C' ? 1 : -1);
//    }
//    int head = 0,tail = 0;
//    for(i = 1; i <= m; i++)
//    {
//        while(head < tail && sum[Q[tail-1]] >= sum[i])
//            tail--;
//        Q[tail++] = i;
//        if(i >= n)
//        {
//            while(i - Q[head] >= n)
//                head++;
//            vis[k][i-n] = (sum[i-n] <= sum[Q[head]]);
//        }
//    }
//}
//int main()
//{
//    //freopen("Input.txt","r",stdin);
//    int n,i,len,Len,ncase = 1;
//    scanf("%d",&n);
//    while(n--)
//    {
//        scanf("%s",temp);
//        len = strlen(temp);
//        strcpy(Neck+1,temp);
//        strcat(Neck+1,temp);
//        Len = strlen(Neck+1);
//        memset(vis,0,sizeof(vis));
//        Solve(Len,len,0);
//        reverse(Neck+1,Neck+Len+1);
//        Solve(Len,len,1);
//        int ans = 0;
//        for(i = 1; i <= len; i++)
//        {
//            if(vis[0][i] || vis[1][len-i])
//                ans++;
//        }
//        printf("Case %d: %d\n",ncase++,ans);
//    }
//    return 0;
//}


//#include<iostream>
//#include<cstdio>
//#include<cstring>
//using namespace std;
//const int N = 100005;
//const long long inf = 1 << 31;
//int sum[N],a[N];
//int L,R,Max;
//void Solve(int n,int k)
//{
//    for(i = 0; i < )
//}
//int main()
//{
//    int t,n,k;
//    scanf("%d",&t);
//    while(t--)
//    {
//        scanf("%d%d",&n,&k);
//        sum[0] = 0;
//        for(i = 1; i <= n; i++)
//        {
//            scanf("%d",&a[i]);
//            sum[i] = sum[i-1] + a[i];
//        }
//        for(i = n+1,j = 1; i < n+1+k; i++)
//        {
//            a[i] = a[i-n];
//            sum[i] = sum[i-1] + a[i];
//        }
//        Solve(n,k);
//        printf("%d %d %d\n",Max,L,R);
//    }
//    return 0;
//}



//#include<iostream>
//#include<cstdio>
//#include<cstring>
//#include<set>
//using namespace std;
//const int N = 1000005;
//set<int> S;
//set<int> ::iterator it;
//int Kill[N];
//int main()
//{
//    //freopen("Input.txt","r",stdin);
//    int n,m,i,j,k,l,r,x;
//    while(~scanf("%d%d",&n,&m))
//    {
//        S.clear();
//        for(i = 1; i <= n; i++)
//            S.insert(i);
//        memset(Kill,0,sizeof(Kill));
//        for(i = 0; i < m; i++)
//        {
//            scanf("%d%d%d",&l,&r,&k);
//            it = S.lower_bound(l);
//            while(it != S.end() && *it <= r)
//            {
//                x = *it;
//                it++;
//                if(x != k)
//                {
//                    Kill[x] = k;
//                    S.erase(x);
//                }
//            }
//        }
//        for(i = 1; i <= n; i++)
//            printf("%d ",Kill[i]);
//            puts("");
//    }
//}

//
//#include<iostream>
//#include<cstdio>
//#include<cstring>
//#include<algorithm>
//using namespace std;
//char ch[5];
//int main()
//{
//    while(~scanf("%s",ch))
//    {
//        int k = strlen(ch);
//        next_permutation(ch,ch+k);
//        printf("%s\n",ch);
//    }
//    return 0;
//}



//template<class BidirectionalIterator>
//bool next_permutation(
//    BidirectionalIterator first,
//    BidirectionalIterator last
//)
//{
//    if(first == last)
//        return false; //������
//
//    BidirectionalIterator i = first;
//    ++i;
//    if(i == last)
//        return false;  //һ��Ԫ�أ�û����һ��������
//
//    i = last;
//    --i;
//
//    for(;;)
//    {
//        BidirectionalIterator ii = i;
//        --i;
//        if(*i < *ii)
//        {
//            BidirectionalIterator j = lase;
//            while(!(*i < *--j));
//
//            iter_swap(i, j);
//            reverse(ii, last);
//            return true;
//        }
//
//        if(i == first)
//        {
//            reverse(first, last);  //ȫ���򣬼�Ϊ��С�ֵ����У���cba��Ϊabc
//            return false;
//        }
//    }
//
//}





//#include<iostream>
//#include<cstdio>
//#include<cstring>
//using namespace std;
//
//int dp[8][2];
//
//int digit[10];
//
//int dfs(int len , int state, bool fp)
//{
//    if(!len)
//        return 1;
//    if(!fp && dp[len][state] != -1)
//        return dp[len][state];
//    int ret = 0,fpmax = fp ? digit[len] : 9;
//    for(int i = 0; i <= fpmax; i++)
//    {
//        if(i == 4 || state && i == 2)
//            continue;
//        ret += dfs(len-1,i == 6,fp && i == fpmax);
//    }
//    if(!fp)
//    {
//        dp[len][state] = ret;
//    }
//    return ret;
//}
//
//int f(int x)
//{
//    int len = 0;
//    while(x)
//    {
//        digit[++len] = x % 10;
//        x /= 10;
//    }
//    return dfs(len,0,true);
//}
//
//int main()
//{
//    //freopen("Input.txt","r",stdin);
//    int n,m;
//    memset(dp,-1,sizeof(dp));
//    while(~scanf("%d%d",&n,&m),n+m)
//    {
//        printf("%d\n",f(m)-f(n-1));
//    }
//}


//#include<iostream>
//#include<cstdio>
//#include<cstring>
//using namespace std;
//
//long long dp[100][2];
//
//int digit[100];
//
//long long dfs(int len, int state , bool fp)
//{
//    if(!len)
//        return 1;
//    if(!fp && dp[len][state] != -1)
//        return dp[len][state];
//    long long ret = 0;
//    int fmax = fp ? digit[len] : 9;
//    for(int i = 0; i <= fmax; i++)
//    {
//        if(i == 9 && state)
//            continue;
//        ret += dfs(len-1, i == 4, fp && i == fmax);
//    }
//    if(!fp)
//    {
//        dp[len][state] = ret;
//    }
//    return ret;
//}
//long long f(long long m)
//{
//    int len = 0;
//    while(m)
//    {
//        digit[++len] = m % 10;
//        m /= 10;
//    }
//    return dfs(len,0,true);
//}
//int main()
//{
//    //freopen("Input.txt","r",stdin);
//    int n,i,j,k;
//    long long m;
//    scanf("%d",&n);
//    memset(dp,-1,sizeof(dp));
//    while(n--)
//    {
//        scanf("%I64d",&m);
//       // printf("~  %d\n",f(m));
//        printf("%I64d\n",m+1-f(m));
//    }
//    return 0;
//}

//#include<iostream>
//#include<cstdio>
//#include<cstring>
//#include<map>
//#include<string>
//#include<algorithm>
//using namespace std;
//map<string,int> M;
//struct Node
//{
//    string s;
//    int num;
//}p[10000];
//bool cmp(struct Node p1, struct Node p2)
//{
//    if(p1.num != p2.num)
//        return p1.num > p2.num;
//    else
//    {
//         return p1.s > p2.s;
//    }
//}
//int main()
//{
//    freopen("Input.txt","r",stdin);
//    int t,i,j,n;
//    char a;
//    scanf("%d",&t);
//    while(t--)
//    {
//        scanf("%d",&n);
//        for(i=0; i<10000; i++)
//        {
//            p[i].num=0;
//            p[i].s="";
//        }
//        getchar();
//        int pos = 0;
//        memset(p,0,sizeof(p));
//        for(i = 0; i < n; i++)
//        {
//            string ch="";
//            while(1)
//            {
//                scanf("%c",&a);
//                printf("~%c\n",a);
//                if(a == '\n')
//                    break;
//                if(a >= 'A' && a <= 'Z')
//                    a = a + 32;
//                if(a >= 'a' && a <= 'z')
//                {
//                   // puts("hi");
//                    ch += a;
//                    cout << ch << endl;
//                }
//                if( a == ' ')
//                {
//                    //cout << ch << endl;
//                   // cout << M[ch] << endl;
//                    if(M[ch] != 0)
//                    {
//
//                        p[M[ch]].num++;
//                    }
//                    else
//                    {
//
//                        M[ch] = ++pos;
//                        //printf("~ %d\n",pos);
//                        cout << ch << endl;
//                        cout<<"I'm here"<<" "<<pos<<endl;
//                        p[pos].s=ch;
//                        puts("hi");
//                        p[pos].num++;
//                    }
//                    ch = "";
//                }
//            }
//           // puts("HI");
//        }
//        sort(p,p+n,cmp);
//        for(i = 0; i < n; i++)
//        {
//            cout << p[i].s<<" " << p[i].num<<endl;
//        }
//    }
//}



//#include<iostream>
//#include<cstdio>
//#include<cstring>
//#include<algorithm>
//
//using namespace std;
//
//pair<int,int> P[100];
//
//struct Node
//{
//    int val,num,SumTime,SubTime;
//    Node() {}
//    Node(int v, int c, int t, int k) :val(v),num(c),SumTime(t),SubTime(k){}
//    Node Solve(int c, int w)
//    {
//        return Node(val+w, num+1, SumTime + SubTime + c, SubTime + c);
//    }
//    bool better(const Node& Q)
//    {
//        if(val != Q.val)
//            return val > Q.val;
//        else
//        {
//            if(num != Q.num)
//                return num > Q.num;
//            else
//            {
//                if(SumTime != Q.SumTime)
//                    return SumTime < Q.SumTime;
//                else
//                {
//                    return SubTime < Q.SubTime;
//                }
//            }
//        }
//    }
//}dp[1005];
//int main()
//{
//    //freopen("Input.txt","r",stdin);
//    int n,m,i,j,V;
//    scanf("%d",&n);
//    while(n--)
//    {
//        memset(dp,0,sizeof(dp));
//        scanf("%d%d",&V,&m);
//        for(i = 0; i < m; i++)
//            scanf("%d",&P[i].first);
//        for(i = 0; i < m; i++)
//            scanf("%d",&P[i].second);
//        sort(P,P+m);
//        for(i = 0; i < m; i++)
//            for(j = V; j >= P[i].first; j--)
//            {
//                Node temp = dp[j - P[i].first].Solve(P[i].first,P[i].second);
//                if(temp.SubTime <= V && temp.better(dp[j]))
//                    dp[j] = temp;
//            }
//        printf("%d %d %d\n",dp[V].val,dp[V].num,dp[V].SumTime);
//    }
//    return 0;
//}


//#include<iostream>
//#include<cstdio>
//#include<cstring>
//#include<algorithm>
//using namespace std;
//int dp[20][20];
//void Solve()
//{
//    int i,j;
//    dp[0][0] = 1;
//    for(i = 1; i <= 10; i++)
//        for(j = 0; j <= 10; j++)
//        {
//            if(i > j)
//                dp[i][j] = dp[i-1][j];
//            else
//                dp[i][j] = dp[i][j-1] + dp[i-1][j];
//        }
//}
//int main()
//{
//    //freopen("Input.txt","r",stdin);
//    int t,n,m,i,j,V;
//    Solve();
//    scanf("%d",&t);
//    while(t--)
//    {
//        scanf("%d%d",&n,&m);
//        printf("%d\n",dp[m][n]);
//    }
//    return 0;
//}


#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int N = 10000;
char a[N];
char num[N];
int main()
{
    int n,m,i,j,ans;
    while(~scanf("%s",a))
    {
        memset(num,0,sizeof(num));
        int len = strlen(a);
        int pos = 0;
        for(i = 0; i < len; i++)
        {
            if(a[i] >= '0' && a[i] <= '3')
            {
                num[pos++] = a[i];
            }
        }
        sort(num,num+pos);
        printf("%c",num[0]);
        for(i = 1; i < pos;i++)
        {
            printf("+%c",num[i]);
        }
        puts("");
    }
    return 0;
}
 
/*
#include<bits/stdc++.h>
using namespace std;
int n,m,w;
bool done[100009];
vector<int>v[100009];
void dfs(int node)
{
    done[node]=1;
    for(int i=0;i<v[node].size();i++)
    {
        int u=v[node][i];
        if(!done[u])
        {
            dfs(u);
        }
    }
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        int a,b;
        cin>>a>>b;
        a--;b--;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    for(int i=0;i<n;i++)
    {
        if(!done[i])
        {
            w++;
            dfs(i);
        }
    }
    cout<<w;
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int n,m,w;
int done[100009];
vector<int>v[100009];
void dfs(int node)
{
    done[node]=w;
    for(int i=0;i<v[node].size();i++)
    {
        int u=v[node][i];
        if(!done[u])
        {
            dfs(u);
        }
    }
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        int a,b;
        cin>>a>>b;
        a--,b--;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    int q;
    cin>>q;
    for(int i=0;i<n;i++)
    {
        if(!done[i])
        {
            w++;
             dfs(i);
        }
    }

    for(int i=0;i<q;i++)
    {
        int a,b;
        cin>>a>>b;
        a--;b--;
        if(done[a]==done[b])
        {
            cout<<"YES"<<endl;
        }
        else cout<<"NO"<<endl;
    }
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int n,m,sum;
bool done[100009];
vector<int>v[100009];
void dfs(int node)
{
    done[node]=1;
    sum+=v[node].size();
    for(int i=0;i<v[node].size();i++)
    {
        int u=v[node][i];
        if(!done[u])
        {
            dfs(u);
        }
    }
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        int a,b;
        cin>>a>>b;
        a--,b--;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    for(int i=0;i<n;i++)
    {
        if(!done[i])
        {
            dfs(i);
            cout<<sum/2<<endl;
            sum=0;

        }
    }
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int x,n,m,ww,w;
bool done[100009];
vector<int>v[100009];
void dfs(int node)
{
    if(!done[node])w++;
    done[node]=1;
    for(int i=0;i<v[node].size();i++)
    {
        int u=v[node][i];
        if(!done[u])
        {
            dfs(u);
        }
    }
}
int main()
{
    cin>>n>>m>>x;
    for(int i=0;i<m;i++)
    {
        int a,b;
        cin>>a>>b;
        a--;b--;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    for(int i=0;i<n;i++)
    {
        if(!done[i])
        {
            dfs(i);
            if(w>=x)
            {
                ww++;
            }
            w=0;
        }
    }
    cout<<ww;
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int sum,n,m,mx,arr[100009];
bool done[100009];
vector<int>v[1000009];
void dfs(int node)
{
    if(!done[node])
    {
        mx=max(arr[node],mx);
    }
    done[node]=1;
    for(int i=0;i<v[node].size();i++)
    {
        int u=v[node][i];
        if(!done[u])
        {
            dfs(u);
        }
    }
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        int a,b;
        cin>>a>>b;
        a--;b--;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    for(int i=0;i<n;i++)
    {
        if(!done[i])
        {
            dfs(i);
            sum+=mx;
            mx=0;
        }
    }
    cout<<sum;
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int n,m,ans;
string s[100009];
int X[]={-1,0,0,1},Y[]={0,-1,1,0};
bool done[1009][1009];
void dfs(int x,int y)
{
    done[x][y]=1;
    for(int i=0;i<4;i++)
    {
        int nx=x+X[i];
        int ny=y+Y[i];
        if(nx>=0&&ny>=0&&nx<n&&ny<m&&s[nx][ny]!='*'&&!done[nx][ny])dfs(nx,ny);
    }
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
        cin>>s[i];
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(s[i][j]=='.'&&!done[i][j])
            {
                dfs(i,j);
                ans++;
            }
        }
    }
    cout<<ans<<endl;
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
set<pair<int,int> >s;
int n,b,a;
int main()
{
    cin>>n>>a>>b;
    for(int i=0;i<n;i++)
    {
      int l,r;
      cin>>l>>r;
      for(int j=l;j<=r;j++)
      {
          int X=(j+(j/b))%a;
          int Y=j%b;
          s.insert({X,Y});
      }
    }
    cout<<s.size();
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int q,n,m,w;
vector<pair<int,pair<int,int> > >v[1009];
bool done[1000];
pair<int,int>pr[1009];
void dfs(int node,int wi)
{
    if(done[node])return;
    done[node]=1;
    w++;
    for(int i=0; i<v[node].size(); i++)
    {
        int u=v[node][i].first;
       // cout<<node<<" "<<u<<" "<<we[node][u]<<endl;
        if(v[pr[node].first][i].second.first>=wi)
        {
            dfs(u,wi);
        }
    }
}

int main()
{
    cin>>n>>m;
    for(int i=0; i<m; i++)
    {
        int a,b,c;
        cin>>a>>b>>c;
        a--;
        b--;
        pr[i]= {a,b};
        v[a].push_back({b,{c,i}});
        v[b].push_back({a,{c,i}});
    }
    cin>>q;
    for(int i=0; i<q; i++)
    {
        int t,x;
        cin>>t;
        if(t==1)
        {
            int b,r;
            cin>>b>>r;
            b--;
            for(int j=0;j<v[pr[b].first].size();j++)
            {

                if(v[pr[b].first][j].second.second==b)
                {
                    v[pr[b].first][j].second.first=r;
                }
            }
        }
        else
        {
            int y;
            cin>>x>>y;
            x--;
            dfs(x,y);
            cout<<w<<endl;
            w=0;
            memset(done,0,sizeof(done));
        }
    }
}
*/
/*#include<bits/stdc++.h>
using namespace std;
int n,zz,m;
string s;
vector<int>z;
int main()
{
    cin>>n>>m;
    cin>>s;
    for(int i=0;i<n;i++)
    {
        if(s[i]=='0')
        {
            z.push_back(i);
        }
    }
    int w=0,ww=0;
    for(int i=0;i<m;i++)
    {
        string qu;
        cin>>qu;
        if(qu=="query")
        {
            int l,r;
            cin>>l>>r;
            if(w==0)
            {
                for(int j=0;j<z.size();j++)
                {
                    if((l>z[j]&&r>z[j])||(l<z[j]&&r<z[j]))
                    {
                        zz++;
                    }
                    if(zz==z.size())
                    {
                        ww++;
                        zz=0;
                        cout<<ww<<endl;
                    }
                    else cout<<0<<endl;
                }
            }
            else
            {
                ww=0;
                w=0;
            }
        }
        else
        {
            w++;
            int x;
            cin>>x;
            z[x] = 1;
            s[x-1] = 1 - (s[x-1]-'0');
            z.clear();
            for(int i=0;i<n;i++)
            {
                if(s[i]=='0')
                {
                    z.push_back(i);
                }
            }
        }
    }
}*/
/*
#include <bits/stdc++.h>
using namespace std;
int n,m;
string s[1009];
string t[1009];
int main(){
    cin>>n>>m;
    cin>>s[0];
    for(int i=0;i<m;i++){
        cin>>t[i];
        if(i != 0)
            s[i] = s[i-1];
        if(t[i] == "query"){
            int l,r;
            cin>>l>>r;
            l--;r--;
            int ans=0;
            for(int j=i;j>=0;j--){
                if(t[j] == "toggle")continue;
                int num = 0;
                for(int k=l;k<r;k++){
                    num += s[j][k]-'0';
                }
                if(num == r-l)ans++;
            }
            cout<<ans<<endl;
        }
        else{
            int x;
            cin>>x;
            x--;
            s[i][x] = '1'- s[i][x] + '0';
        }
    }
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int main()
{
    for(int i=0;i<1000009;i++)
    {
        for(int i=0;i<3;i++)
        {
            int a,b,c;
            cin>>a>>b>>c;
            if(a==b&&a==c)
            {
                cout<<'*'<<endl;
                break;
            }
            else if(a==b)
            {
                cout<<'C'<<endl;
                break;
            }
            else if (a==c)
            {
                cout<<'B'<<endl;
                break;
            }
            else cout<<'A'<<endl;;
        }
    }
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int n,a,x,b,y;
vector<int>v1,v2;
int main()
{
    cin>>n>>a>>x>>b>>y;
        if(x>a)
        {
            for(int j=a;j<=x;j++)
            {
                v1.push_back(j);
            }
        }
        else if(x<a)
        {
            for(int j=a;j<=n;j++)
            {
                v1.push_back(j);
                if(j==n)
                {
                    for(int k=1;k<=x;k++)
                    {
                        v1.push_back(k);
                    }
                }
            }
        }
        if(y<b)
        {
            for(int j=b;j>=y;j--)
            {
                v2.push_back(j);
            }
        }
        else if(b<y)
        {
            for(int j=b;j>0;j--)
            {
                v2.push_back(j);
                if(j==1)
                {
                    for(int k=n;k>=x;k--)
                    {
                        v2.push_back(k);
                    }
                }
            }
        }

    for(int i=0;i<min(v1.size(),v2.size());i++)
    {
    //    cout<<v1[i]<<" "<<v2[i]<<endl;
        if(v1[i]==v2[i])
        {

            cout<<"YES";
            exit(0);
        }
    }
    cout<<"NO";
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int m,n;
int c[100009],a[100009],b[100009];
int x,y,w;
map<int,int>mp;
vector<pair<int,int> >v;
int main()
{
    cin>>m>>n;
    for(int i=0;i<n;i++)
    {
        cin>>a[i]>>b[i];
        if(mp[a[i]]==0)
        {
            w++;
            c[w]=a[i];
        }
        if(mp[b[i]]==0)
        {
            w++;
            c[w]=b[i];
        }
        mp[a[i]]++;
        mp[b[i]]++;
    }
    for(int i=0;i<w;i++)
    {
        v.push_back({mp[c[i]],c[i]});
    }
    sort(v.begin(),v.end());

}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int n,a,x,b,y;
vector<int>v1,v2;
int main()
{
    cin>>n>>a>>x>>b>>y;
        if(x>a)
        {
            for(int j=a;j<=x;j++)
            {
                v1.push_back(j);
            }
        }
        else if(x<a)
        {
            for(int j=a;j<=n;j++)
            {
                v1.push_back(j);
                if(j==n)
                {
                    for(int k=1;k<=x;k++)
                    {
                        v1.push_back(k);
                    }
                }
            }
        }
        if(y<b)
        {
            for(int j=b;j>=y;j--)
            {
                v2.push_back(j);
            }
        }
        else if(b<y)
        {
            for(int j=b;j>0;j--)
            {
                v2.push_back(j);
                if(j==1)
                {
                    for(int k=n;k>=x;k--)
                    {
                        v2.push_back(k);
                    }
                }
            }
        }

    for(int i=0;i<min(v1.size(),v2.size());i++)
    {
    //    cout<<v1[i]<<" "<<v2[i]<<endl;
        if(v1[i]==v2[i])
        {

            cout<<"YES";
            exit(0);
        }
    }
    cout<<"NO";
}
*/
/*
#include<bits/stdc++.h>
using namespace std;
int i1,k1,i2,k2,w;
int b[8][8]={0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0,0,1,0,1,0,1,0,1,1,0,1,0,1,0,1,0};
int main()
{
    cin>>i1>>k1>>i2>>k2;
    for(int i=0;i<3;i++)
    {
        if(i==0)
        {
            if(i1==i2||k1==k2)
            {
                cout<<1<<" ";
            }
            else cout<<2<<" ";
        }
        else if(i==1)
        {
            i1--,i2--,k1--,k2--;
            if(b[i1][k1]!=b[i2][k2])
            {
                cout<<0<<" ";
                w++;
            }
            else if(abs(i1-i2)==abs(k2-k1))
            {
                cout<<1<<" ";
                w++;
            }
                if(w==0)
                {
                    cout<<2<<" ";
                }
        }

        else if(i==2)
        {
            if(abs(i1-i2)==abs(k1-k2))
            {
                cout<<abs(i1-i2);
            }
            else if(i1==i2||k1==k2)
            {
                cout<<abs(i1-i2)+abs(k1-k2);
            }
            else
            {
                cout<<max( abs ( i1 - i2 ), abs ( k1 - k2 ) ) ;
            }
        }
    }
}
*/
/*
#include<bits/stdc++.h>
using namespace std;

int main()
{
    int n;
    cin>>n;
    int a=n*2;
    int b=0;
    int sum=1;
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<a; j++)
        {
            cout<<" ";
        }
        if(i!=0)
            cout<<0<<" ";
        else
            cout<<0;
        for(int j=0; j<b/2; j++)
        {
            cout<<sum<<" ";
            sum++;
        }
        sum--;
        for(int j=0; j<b/2-1; j++)
        {
            sum--;
            cout<<sum<<" ";
        }
        if (i!=0)
            cout<<0;
        cout<<endl;
        if(i==0)
        {
            a-=2;
            b+=2;
            sum=1;
        }
        else
        {
            a-=2;
            b+=2;
            sum=1;
        }
    }
    cout<<0<<" ";
    int w=1;
    for(int i=0; i<n; i++)
    {
        cout<<w<<" ";
        w++;
    }
    b=w*2-3;
    w--;
    for(int i=0; i<n-1; i++)
    {
        w--;
        cout<<w<<" ";
    }
    cout<<0<<endl;
    a=2;
    sum=1;
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<a; j++)
        {
            cout<<" ";
        }
        if(i!=n-1)
            cout<<0<<" ";
        else
            cout<<0;
        for(int j=0; j<b/2; j++)
        {
            cout<<sum<<" ";
            sum++;
        }
        sum--;
        for(int j=0; j<b/2-1; j++)
        {
            sum--;
            cout<<sum<<" ";
        }
        if (i!=n-1)
            cout<<0;
        cout<<endl;
        if(i<n-1)
        {
            a+=2;
            b-=2;
            sum=1;
        }
        else
        {
            a+=2;
            b--;
            sum=1;
        }
    }
}
*/
#include<bits/stdc++.h>
using namespace std;
vector<char>v;
string s;
int main()
{
    cin>>s;
    for(int i=0;i<s.size();i++)
    {
        if(s[i]!='+')v.push_back(s[i]);
    }
    sort(v.begin(),v.end());
    for(int i=0;i<v.size();i++)
    {
        if(s.size()==1)
        {
            cout<<v[i];
            exit(0);
        }
        if(i!=v.size()-1)cout<<v[i]<<'+';
        else cout<<v[i];
    }
}
/*
ID: amirnas1
PROG: cowtour
LANG: C++
*/

#include <iostream>
#include <fstream>
#include <string>
#include <cstdio>
#include <set>
#include <vector>
#include <algorithm>
#include <queue>
#include <stack>
#include <iomanip>
#include <math.h>
#include <bitset>
#include <sstream>
using namespace std;

/*
vector<string> prim;
string s;
vector<int> dp;

int main()
{

	ifstream cin;
	cin.open("prefix.in");
	ofstream cout;
	cout.open("prefix.out");
	
	string p;
	s = "";
	cin>>p;
	while (p!= ".")
	{
		prim.push_back(p);
		cin>>p;
	}
	cin.ignore();
	string l;
	while (getline(cin,l)) s += l;
	dp = vector<int> (s.size()+1, -1);
	for (int i = s.size(); i>= 0; i--)
	{
		if (i == s.size()) dp[i] = i;
		else
		{
		int m = i;
			for (int j = 0; j < prim.size(); j++)
			{
				if (i+prim[j].size() <= s.size()) if (s.substr(i,prim[j].size()) == prim[j]) m = max(m, dp[i+prim[j].size()]);
			}
			dp[i] = m;
		}
	}
	cout<<dp[0]<<endl;
}



long long dp[201][101][2];

long long mod(long long a, long long m)
{
	if (a>=0) return a%m;
	else
	{
		return (a+m)%m;
	}
}
long long solve(int n, int k, int f)
{
	if (n==0 && k==0) return 1;
	if (n == 0) return 1;
	if (k <= 0) return 0;
	if (n == 1) return 1;
	if (dp[n][k][f] != -1) return dp[n][k][f];
	int a = n-1;
	long long s = 0;
	long long r;
	for (int i = 1; i < a; i++)
	{
		r = solve(i,k-1, 0) * solve(a-i, k-1, 0);
		if (f) r -= (solve(i,k-2, 0) * solve(a-i, k-2,0));
		s += r;
		s = mod(s,9901);
	}
	return dp[n][k][f] = s;
}

int main()
{
	
	ifstream cin;
	cin.open("nocows.in");
	ofstream cout;
	cout.open("nocows.out");
	
	int n, k;
	cin>>n>>k;
	for (int i=0; i<201; i++)
	{
		for (int j = 0; j < 101; j++)
		{
			
			dp[i][j][0] = dp[i][j][1] = -1;
		}
	}
	cout<<solve(n,k,1)<<endl;
	//system("pause");
}


int main()
{
	int n, m;
	cin>>n>>m;
	vector<int> f(m);
	for (int i = 0; i < m; i++)
	{
		cin>>f[i];
	}
	sort(f.begin(), f.end());
	int r = 10000;
	for (int i = 0; i+n-1 < m; i++ )
	{
		if (f[i+n-1] - f[i] < r) r = f[i+n-1] - f[i];
	}
	cout<<r<<endl;
}


int gcd(int a, int b)
{
	if (b == 0) return a;
	else return gcd(b,a%b);
}

int main()
{
	int a,b,c,d;
	cin>>a>>b>>c>>d;
	int ab = gcd(a,b);
	int cd = gcd(c,d);
	a /=ab;
	b /= ab;
	c /= cd;
	d /= cd;
	if ((double)a/(double)c < (double)b/(double)d)
	{
		int ra = d*a;
		int rb = b*c;
		int gab = gcd(ra,rb);
		int resa = rb/gab - ra/gab;
		int resb = rb/gab;
		int gres = gcd(resa,resb);

		cout<<resa/gres<<"/"<<resb/gres<<endl;
	}
	else
	{
		int ra = d*a;
		int rb = b*c;
		int gab = gcd(ra,rb);
		int resa = ra/gab - rb/gab;
		int resb = ra/gab;
		int gres = gcd(resa,resb);
		cout<<resa/gres<<"/"<<resb/gres<<endl;
	}
}


long long pow2(long long n, long long mod)
{
	if (n == 0) return 1;
	if (n%2 ==0)
	{
		long long r = pow2(n/2,mod);
		return (r*r)%mod;
	}
	else
	{
		return (2*pow2(n-1,mod))%mod;
	}
}

long long mod(long long a, long long b)
{
	if (a  > 0)
	{
		return a%b;
	}
	else return (a+b)%b;
}

int main()
{
	long long n,m,k;
	cin>>n>>m>>k;
	if (n - (n-m)*k > 0)
	{
		long long r = pow2(((n - (n-m)*k)/k)+1,1000000009) - 2;
		r = (r*k)%1000000009;
		long long r2 = (n-m)*(k-1) + ((n - (n-m)*k)%k);
		cout<<mod((r+r2),1000000009)<<endl;
	}
	else
	{
		cout<<m<<endl;
	}
}


vector<int> st;
vector<int> req;
vector<long long> rem;
vector<long long> num;
vector<long long> res;

void pr(long long a, bool p)
{
	if (a ==1) return;
	if (a%2 == 0)
	{
		if (a != 2 || p) res.push_back(2);
		pr(a/2, true);
		return;
	}
	for (long long i = 3; i*i <= a; i+=2)
	{
		if (a%i==0)
		{
			res.push_back(i);
			pr(a/i,true);
			return;
		}
	}
	if (p)
		res.push_back(a);
}

int dfs(int i, bool add)
{
	if (i >= num.size()) return 0;
	res.clear();
	if (rem[i] == num[i])
		pr(rem[i],false);
	else
		pr(rem[i],true);
	int result = res.size()+1;
	int m;
	if (i == num.size()-1)
		m = 0;
	else if (add)
		m = dfs(i+1,true);
	else
		m = dfs(i+1,true) + 1;
	for (int j = i+1; j < num.size(); j++)
	{
		if (rem[j]%num[i] ==0)
		{
			rem[j] /=num[i];
			m = min(dfs(i+1,add),m);
			rem[j] *= num[i];
		}
	}
	return result+m;
}

int main()
{
	int n;
	cin>>n;
	st = vector<int> (n,0);
	req = vector<int> (n,1);
	rem = vector<long long> (n,1);
	num = vector<long long> (n);
	for (int i =0 ; i < n; i++)
	{
		cin>>num[i];
		rem[i] = num[i];
	}
	sort(num.begin(), num.end());
	sort(rem.begin(), rem.end());
	int result = 0;
	
	result = dfs(0,false);
	cout<<result<<endl;
}


vector<int> d1;
vector<pair<int,int> > d3;
vector<int> d2;
vector<vector<int> > g;
vector<bool> mark;
vector<bool> tk;
int dis1(int i,int p)
{
	tk[i] = true;
	int r = -1000000;
	
	int m1 = 0,m2 = -1000000;
	for (int j=0; j < g[i].size(); j++)
	{
		if (!tk[g[i][j]])
		if (r < dis1(g[i][j],i))
		{
			r = d1[(g[i][j])];
			m1 = g[i][j];
		}
	}
	int v = -1000000;
	for (int j=0; j < g[i].size(); j++)
	{
		if (v < d1[(g[i][j])] && (g[i][j]) != m1 && g[i][j] != p)
		{
			v = d1[(g[i][j])];
			m2 = g[i][j];
		}
	}
	d3[i].first = m1;
	d3[i].second = m2;
	if (r < 0)
	{
		if (mark[i]) return d1[i] = 0;
		else return d1[i] = r;
	}
	return d1[i] = r+1;
}

void dis2(int i,int p)
{
	tk[i] = true;
	if (p == -1)
	{
		if (mark[0])
		{
			d2[0] = 0;
		}
		else
			d2[0] = -10000000;
	}
	else
	{
		int r = d2[p]+1;
		if (d3[p].first == i)
		{
			if (d3[p].second >= 0)
				r = max(d1[d3[p].second]+2,r);
		}
		else
		{
			r = max(d1[d3[p].first]+2,r);
		}
		d2[i] = r;
		if (r < 0)
		{
			if (mark[i])
				d2[i] = 0;
			else
				d2[i] = r;
		}
	}
	for (int j=0; j < g[i].size(); j++)
	{
		if(!tk[g[i][j]])
			dis2(g[i][j],i);
	}
}



int bfs(int i, int d)
{
	int res = 0;
	queue<pair<int,int> > q;
	q.push(make_pair(i,0));
	vector<bool> tk(g.size(),false);
	while (!q.empty())
	{
		pair<int,int> c = q.front();
		q.pop();
		if (tk[c.first])
			continue;
		res++;
		tk[c.first] = true;
		if (c.second < d)
		{
			for (int j=0; j < g[c.first].size(); j++)
			{
				//cout<<t[c.first].second[j]<<"    ";
				q.push(make_pair(g[c.first][j],c.second+1));
			}
		}
	}
	return res;
}


void bTree(int c)
{
	if (tk[c]) return;
	tk[c] = true;
	for (int j = 0; j < g[c].size(); j++)
	{
		if (g[c][j] != t[c].first)
		{
			t[g[c][j]].first = c;
			t[c].second.push_back(g[c][j]);
			bTree(g[c][j]);
		}
	}
}


int main()
{
	int n,m,d;
	cin>>n>>m>>d;
	
	d1 = vector<int> (n,-1000000);
	d2 = vector<int> (n,-1000000);
	d3 = vector<pair<int,int> > (n, make_pair(-1000000,-1000000));
	mark = vector<bool> (n,false);
	tk = vector<bool> (n,false);
	g = vector<vector<int> > (n);
	int a;
	for (int i=0; i < m; i++)
	{
		cin>>a;
		mark[a-1] = true;
	}
	int b;
	for (int i = 0; i < n-1; i++)
	{
		cin>>a>>b;
		g[a-1].push_back(b-1);
		g[b-1].push_back(a-1);
	}
	if (m > 1)
	{
tk = vector<bool> (n,false);
	dis1(0,-1);
tk = vector<bool> (n,false);
	dis2(0,-1);
	}
	int res = 0;
	if (m == 1)
	{
	for (int i=0; i < n; i++)
	{
		if (mark[i])
		{
			res = bfs(i,d);
			break;
		}
	}
	}
	else
	{
	for (int i=0; i < n; i++)
	{
	//	cout<<d1[i]<<" "<<d2[i]<<"          ";
		if (d1[i] <= d && d2[i] <= d) res++;
	}
	}
	cout<<res<<endl;

	//	system("pause");
}


string op;
int n;
ifstream fin;
ofstream fout;
void solve(int i)
{

	if (i == n-1)
	{
//		cout<<op<<endl;
		int r = 0;
		vector<char> s1;
		vector<int> s2;
		int c = 1;
		for (int j =0 ; j < n-1; j++)
		{
			if (op[j] == ' ')
			{
				c *= 10;
				c += j+2;
			}
			else
			{
				s2.push_back(c);
				s1.push_back(op[j]);
				c= j+2;
			}
		}
		s2.push_back(c);
		int a,b;
		r = s2[0];
		for (int j = 0; j < s1.size(); j++)
		{
			if (s1[j] == '+')
			{
				r += s2[j+1];
			}
			else
				r -= s2[j+1];
		}
		if (r == 0)
		{
			fout<<1;
			for (int j = 0; j < n-1; j++)
			{
				fout<<op[j]<<j+2;
			}
			fout<<endl;
		}
	}
	else
	{
		op[i] = ' ';
		solve(i+1);
		op[i] = '+';
		solve(i+1);
		op[i] = '-';
		solve(i+1);
	}
}

int main()
{
	fin.open("zerosum.in");
	fout.open("zerosum.out");
	fin>>n;
	for (int i = 0; i < n-1; i++)
	{
		op += '.';
	}
	solve(0);

}


vector<int> c;
vector<vector<long long> > dp;
long long solve(int n,int i)
{
	if (n < 0) return 0;
	if (n == 0) return 1;
	if (i >= c.size()) return 0;
	if (dp[n][i] != -1) return dp[n][i];
	if (i == c.size()-1)
	{
		if (n%c[i] == 0) return dp[n][i] = 1;
		else return dp[n][i] = 0;
	}
	long long r = 0;
	for (int j = 0; j <= n/c[i]; j++)
	{
		r += solve(n - j*c[i], i+1);
	}
	return dp[n][i] = r;
}

int main()
{
	
	ifstream cin;
	cin.open("money.in");
	ofstream cout;
	cout.open("money.out");
	
	int v,n;
	cin>>v>>n;
	dp = vector<vector<long long> >(n+1,vector<long long>(v,-1));
	c = vector<int>(v);
	for (int i=0; i < v; i++)
	{
		cin>>c[i];
	}
	sort(c.begin(), c.end());
	reverse(c.begin(), c.end());
	long long r = solve(n,0);
	cout<<r<<endl;
	system("pause");
}


int main() {
    long long int N, V, v[26] = { 0 }, dp[10001] = { 0 }, i;
    freopen("money.in", "r", stdin), freopen("money.out", "w", stdout);
    scanf("%lld %lld", &V, &N);
    for (i = 0, dp[0] = 1; i < V; i++)
        scanf("%lld", v + i);
 
    for (int m = 0; m < V; m++)
        for (int n = 0; n <= N; n++)
            dp[n] += (n - v[m] >= 0 ? dp[n - v[m]] : 0);
 
    printf("%lld\n", dp[N]);
    return 0;
}


int g[100][100];

vector<int> res;

void solve(int i)
{
	bool ok = true;
	int s =0;
	vector<bool> tk(100,false);
	tk[i] = true;
	res.clear();
	while (ok)
	{
		ok = false;
		for (int j = 0; j < 100; j++)
		{
			if (tk[j]) continue;
			s = 0;
			s += g[i][j];
			for (int k = 0; k < res.size(); k++)
			{
				s += g[res[k]][j];
			}
			if (s > 50)
			{
				res.push_back(j);
				tk[j] = true;
				ok = true;
			}
		}
	}
}

int main()
{
		ifstream cin;
	cin.open("concom.in");
	ofstream cout;
	cout.open("concom.out");
	int n;
	cin>>n;
	int a,b,c;
	while (n--)
	{
		cin>>a>>b>>c;
		g[a-1][b-1] = c;
	}
	for (int i=0; i < 100; i++)
	{
		solve(i);
		sort(res.begin(),res.end());
		for (int j = 0; j < res.size(); j++)
		{
			cout<<i+1<<" "<<res[j]+1<<endl;
		}
	}
}


char pl[10][10];
int c1x,c1y,d1;
int c2x,c2y,d2;
bool valid(int a, int b)
{
	if (a < 0 || b < 0 || a >=10 || b >= 10) return false;
	if (pl[a][b] != '*') return true;
	return false;
}
void move()
{
	if (d1 == 1)
	{
		if (valid(c1x-1,c1y))
		{
			c1x--;
		}
		else
		{
			d1 = 2;
		}
	}
	else if (d1 == 2)
	{
		if (valid(c1x,c1y+1))
		{
			c1y++;
		}
		else
		{
			d1 = 3;
		}
	}
	else if (d1 == 3)
	{
		if (valid(c1x+1,c1y))
		{
			c1x++;
		}
		else
		{
			d1 = 4;
		}
	}
	else if (d1 == 4)
	{
		if (valid(c1x,c1y-1))
		{
			c1y--;
		}
		else
		{
			d1 = 1;
		}
	}

	if (d2 == 1)
	{
		if (valid(c2x-1,c2y))
		{
			c2x--;
		}
		else
		{
			d2 = 2;
		}
	}
	else if (d2 == 2)
	{
		if (valid(c2x,c2y+1))
		{
			c2y++;
		}
		else
		{
			d2 = 3;
		}
	}
	else if (d2 == 3)
	{
		if (valid(c2x+1,c2y))
		{
			c2x++;
		}
		else
		{
			d2 = 4;
		}
	}
	else if (d2 == 4)
	{
		if (valid(c2x,c2y-1))
		{
			c2y--;
		}
		else
		{
			d2 = 1;
		}
	}
}

int sol()
{
	d1 = d2 = 1;
	int r = 0;
	for (int i = 0; i < 10; i++)
	{
		for (int j = 0; j < 10; j++)
		{
			if (pl[i][j] == 'F')
			{
				c2x = i;
				c2y = j;
			}
			if (pl[i][j] == 'C')
			{
				c1x = i;
				c1y = j;
			}
		}
	}
	while (!(c1x == c2x && c1y == c2y))
	{
		move();
		r++;
		if (r == 10000) return 0;
	}
	return r;
}

int main()
{
			ifstream cin;
	cin.open("ttwo.in");
	ofstream cout;
	cout.open("ttwo.out");
	for (int i=0; i < 10; i++)
	{
		for (int j = 0; j < 10; j++)
		{
			cin>>pl[i][j];
		}
	}
	cout<<sol()<<endl;
}


vector<vector<int> > dis[2];
vector<string> mp;
pair<int,int> a[2];

bool valid(int i, int j)
{
	if (i < 0 || j < 0 || i>= mp.size() || j >= mp[0].size()) return false;
	if (mp[i][j] == '|' || mp[i][j] == '-') return false;
	return true;
}

int dr[4] = {0,1,0,-1};
int dc[4] = {1,0,-1,0};

void bfs(int i)
{
	pair<pair<int,int> , int> st;
	st.second = 1;
	st.first = a[i];

	queue<pair<pair<int,int> , int> > q;
	q.push(st);
	while (!q.empty())
	{
		st = q.front();
		q.pop();
		if (!valid(st.first.first,st.first.second)) continue;
		if (st.second >= dis[i][st.first.first][st.first.second]) continue;
		dis[i][st.first.first][st.first.second] = st.second;
		for (int j = 0; j < 4; j++)
		{
			if (valid(st.first.first+dr[j],st.first.second+dc[j]))
			{
				q.push(make_pair(make_pair(st.first.first+2*dr[j],st.first.second+2*dc[j]),st.second+1));
			}
		}
	}
}

int main()
{
	ifstream cin;
	cin.open("maze1.in");
	ofstream cout;
	cout.open("maze1.out");
	int r,c;
	cin>>r>>c;
	mp = vector<string>(2*c+1);
	dis[0] = vector<vector<int> >(2*c+1,vector<int>(2*r+1,10000000));
	dis[1] = vector<vector<int> >(2*c+1,vector<int>(2*r+1,10000000));
	cin.ignore();
	for (int i = 0; i < 2*c+1; i++)
	{
		getline(cin,mp[i]);
	}
	int d = 0;
	for (int j = 1; j < 2*r+1; j+=2) if (mp[0][j] == ' ')
	{
		a[d].first = 1;
		a[d].second = j;
		d++;
	}

	for (int j = 1; j < 2*r+1; j+=2) if (mp[2*c][j] == ' ')
	{
		a[d].first = 2*c-1;
		a[d].second = j;
		d++;
	}

	for (int j = 1; j < 2*c+1; j+=2) if (mp[j][0] == ' ')
	{
		a[d].first = j;
		a[d].second = 1;
		d++;
	}

	for (int j = 1; j < 2*c+1; j+=2) if (mp[j][2*r] == ' ')
	{
		a[d].first = j;
		a[d].second = 2*r-1;
		d++;
	}
	bfs(0);
	bfs(1);
	int res = 0;
	for (int i = 1; i < 2*c+1; i+=2)
	{
		for (int j = 1; j < 2*r+1; j+=2)
		{
			res = max(res,min(dis[0][i][j],dis[1][i][j]));
		}
	}
	cout<<res<<endl;

}


int main()
{
		ifstream cin;
	cin.open("cowtour.in");
	ofstream cout;
	cout.open("cowtour.out");
	int n;
	cin>>n;
	char a;
	vector<vector<double> >sp(n, vector<double>(n,10000000000));
	vector<pair<double,double> > p(n);
	for (int i = 0; i < n; i++)
	{
		cin>>p[i].first>>p[i].second;
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			cin>>a;
			if (a == '1')
			{
				sp[i][j] = sqrt((p[i].second-p[j].second)*(p[i].second-p[j].second) + (p[i].first-p[j].first)*(p[i].first-p[j].first));
			}
		}
	}

	for (int k = 0; k < n; k++) for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) if (i != j) sp[i][j] = min(sp[i][j],sp[i][k]+sp[k][j]);
	double res = 0;
	double r2 = 10000000000;
	for (int i =0; i < n; i++)
	{
		for (int j = 0; j < i; j++)
		{
			if (sp[i][j] < 10000000000) res = max(res,sp[i][j]);
			else
			{
				double di=0,dj=0;
				for (int k = 0; k < n; k++)
				{
					di = (sp[i][k] < 10000000000) ? max(di,sp[i][k]) : di;
					dj = (sp[j][k] < 10000000000) ? max(dj,sp[j][k]) : dj;
				}
				r2 = min(r2,di+dj+sqrt((p[i].second-p[j].second)*(p[i].second-p[j].second) + (p[i].first-p[j].first)*(p[i].first-p[j].first)));
			}
		}
	}
	cout<<fixed<<setprecision(6)<<max(r2,res)<<endl;
}
*/

int main()
{
	int a[3] = {0};
	string s;
	cin>>s;
	for (int i = 0; i < s.size(); i++)
	{
		if (s[i] == '1') a[0]++;
		else if (s[i] == '2') a[1]++;
		else if (s[i] == '3') a[2]++;
	}
	for (int i = 0; i < a[0]; i++)
	{
		cout<<1;
		if (i < a[0]-1) cout<<"+";
	}
	for (int i = 0; i < a[1]; i++)
	{
		if (i == 0 && a[0] > 0) cout<<"+";
		cout<<2;
		if (i < a[1]-1) cout<<"+";
	}
	for (int i = 0; i < a[2]; i++)
	{
		if (i == 0 && a[1]+a[0] > 0) cout<<"+";
		cout<<3;
		if (i < a[2]-1) cout<<"+";
	}
	cout<<endl;
}
