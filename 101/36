/--------------------------------------------------------They call him ARIF-----------------------------------------------------*/

#pragma GCC optimize ("Ofast")
#pragma GCC target("avx2,bmi,bmi2,lzcnt,popcnt")

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair<ll,ll> pll;
typedef vector<ll> vll;
typedef vector<pair<ll,ll>> vpll;
typedef map<pll,ll> mpll;
typedef map<ll,ll> mll;
typedef map<char,ll> mcll;
typedef map<pair<char,ll>,ll> mpcll;
typedef map<pair<char,char>,ll> mpccl;
typedef pair<char,char> pcc;
typedef pair<string,string> pss;
typedef map<string,ll> msll;
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define max4(a,b,c,d) max(d,max3(a,b,c))
#define min4(a,b,c,d) min(d,min3(a,b,c))
#define all(x) x.begin(),x.end()
#define endl "\n"
const ll M=1e9+7;
// tu hamesha ceil aur floor me 1.0* daalna bhulta hai
// ll x=max4(a,b,c,d); save value in some variables & dont 
// ll y=min4(a,b,c,d); print it directly it will give an error
// if(find(nums.begin()+fp+1,nums.begin()+ep,temp)!=nums.begin()+ep)

ll gcd(ll a,ll b)
{
    return b == 0 ? a : gcd(b, a % b);   
}

ll power(ll a,ll n)
{
  if(n==0) return 1;
  ll subprob=power(a,n/2);
  ll subprobq=subprob*subprob;
  if(n&1) return a*subprobq;
  return subprobq;
}

ll lcm3(ll x,ll y,ll z)
{
    ll ans=(x*y*z)*gcd(x,gcd(y,z));
    ans/=gcd(x,y);ans/=gcd(y,z);ans/=gcd(x,z);

    return ans;
}

mll primefact(ll n)
{
    mll f;
    while(n%2==0)
    {
        f[2]++;
        n/=2;
    }
    for(ll i=3;i*i<=n;i+=2)
    {
        while(n%i==0)
        {
            f[i]++;
            n/=i;
        }
    }
    if(n>2) f[n]++;

    return f;
}

void addk(vll &v,ll q=0)
{
    // in case of seg fault try to make n+1 size vect
    if(q==0) cin>>q;
    ll l,r,k;
    while(q--)
    {
        cin>>l>>r>>k;
        v[l]+=k;
        // may be seg fault due to r+1.
        // so make vect of n+1
        v[r+1]-=k;
    }
    for(int i=1;i<v.size();i++)//v.size()=n+1
    {
        v[i]+=v[i-1];
    }
}

ll sumofdigits(ll n)
{
    ll ans=0;
    while(n>0)
    {
        ans+=n%10;
        n/=10;
    }
    return ans;
}


void solve()
{ 
    ll n,m;cin>>n>>m;
    cout<<(n*m)/2<<endl;
}
int32_t main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);cout.tie(0);
    ll t;
    t=1;  
    //cin>>t;
    while(t--){
        solve();
    }
}
