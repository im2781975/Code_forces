
#include<bits/stdc++.h> 
using namespace std; 
typedef long long int ll;
ll nCr(ll n, ll k) 
{ 
    ll C[k+1]; 
    memset(C, 0, sizeof(C)); 
  
    C[0] = 1;  // nC0 is 1 
  
    for (ll i = 1; i <= n; i++) 
    { 
        // Compute next row of pascal triangle using 
        // the previous row 
        for (ll j = min(i, k); j > 0; j--) 
            C[j] = C[j] + C[j-1]; 
    } 
    return C[k]; 
} 
struct node
{
	int x;
	int r;
	int iq;
};
bool sorte(struct node a,struct node b)
{
	return a.x<b.x;
}
vector<ll> mark(ll p, vector<ll> a,  ll n)
{
    for(ll i=2;i*p<n;i++)
    {
        a[i*p]=1;
    }
    return a;
}
vector<ll> sieve(vector<ll> a, ll n)
{
	a[0]=1;
	a[1]=1;
    for(ll i=2;i<sqrt(n);i++)
    {
        if(a[i]==0)
        {
            a=mark(i,a,n);
        }
    }
    return a;
}
ll gcd(ll a, ll b) 
{ 
    if (a == 0) 
        return b; 
    return gcd(b % a, a); 
}
ll findGCD(vector<ll> a, ll n) //used to find gcd of array or gcd of array added by constant
{
    ll result = a[1]-a[0]; 
    for (ll i = 1; i+1 < n; i++) 
    {
    	if(a[i+1]-a[0]>result)
    	{
    		result = gcd(a[i+1]-a[0], result);
		}
		else
		{
			result = gcd(result ,a[i+1]-a[0]);
		}
    	
	}  
    return result; 
} 
ll ribbonCut(ll n, ll b, ll c, ll a)
{
	vector<ll> dp(n+1);
	dp[0]=0;
	for(ll i=1;i<=n;i++)
	{
		ll x,y,z;
		x=y=z=-1;
		if(i>=a)
		{
			x=dp[i-a];
		}
		if(i>=b)
		{
			y=dp[i-b];
		}
		if(i>=c)
		{
			z=dp[i-c];
		}
		if(x==-1 &&y==-1 && z==-1)
		{
			dp[i]=-1;
		}
		else
		{
			dp[i]=max(max(x,y),z)+1;
		}
	}
	return dp[n];
}
ll fact(ll n)
{
	ll p=1;
	for(ll i=2;i<=n;i++)
	{
		p=p*i;
	}
	return p;
}
ll modInverse(ll A,ll M)
{
    A=A%M;
    for(ll B=1;B<M;B++)
        if(((A*B)%M)==1)
            return B;
}
//cout<<fixed;
//cout<<setprecision(9);
//n8m vector: vector< vector<ll> > a(n, vector<ll>(m,0));
//while using ceil, use decimal in denominator
//to declare 32 bit int : int32_t n;
//fflush(stdin);
//ios::sync_with_stdio(0);
//    cin.tie(0);
//LCM INBUILT FUNCTION:
//#include<boost/math/common_factor.hpp>
//boost::math::lcm(10,20);
ll ifok(ll x)
{
	while(x % 2 == 0)
	{
		x /= 2;
	}
	while(x % 3 == 0)
	{
		x /= 3;
	}
	return x;
}

bool equal(stack<ll> a, vector<ll> b)
{
	if(a.size() != b.size())
	{
		return 0;
	}
	ll n = a.size();
	for(ll i = 0 ; i < n ; i++)
	{
		ll t = a.top();
		a.pop();
		if(t != b[i])
		{
			return 0;
		}
	}
	return 1;
}

void operate(stack<ll>& a, stack<ll>& b)
{
	ll ad = a.top();
	ll bd = b.top();
	a.pop();
	b.pop();
	stack<ll> temp;
	if(ad > bd)
	{
		while(!a.empty())
		{
			temp.push(a.top());
			a.pop();
		}
		a.push(ad);
		a.push(bd);
		while(!temp.empty())
		{
			a.push(temp.top());
			temp.pop();
		}
	}
	else //bd > ad
	{
		while(!b.empty())
		{
			temp.push(b.top());
			b.pop();
		}
		b.push(bd);
		b.push(ad);
		while(!temp.empty())
		{
			b.push(temp.top());
			temp.pop();
		}
	}
	return;
}
bool finf(ll p,vector<ll> a ,ll n)
{
	vector<ll> dp(n+1, 0);
	for(ll i = 0 ; i < n ; i++)
	{
		dp[a[i]]++;
	}
	bool ans = false;
	ll ansi = 0;
	ll maxi = p;
	for(ll i = 1 ; i <= n ; i++)
	{
		if(dp[i] >= p)
		{
			if(dp[i] >= maxi)
			{
				maxi = dp[i];
				ans = true;
				ansi = i;
			}
		}
	}
	if(ans == false)
	{
		return ans;
	}
	ll f = 0;
	ll pc = p;
	for(ll i = 1 ; i <= n ; i++)
	{
		if(p > 0)
		{
			if(i != ansi && dp[i] != 0 || dp[i] > pc)
			{
				p--;
			}
		}
		else
		{
			f = 1;
			break;
		}
	}
	if(f == 1 || p <= 0)
	{
		return true;
	}
	return false;
}

//16 8 17 7 8 21 13 5 1 25 12 14 12 6 4 24 6 9 18 3 22 19 3 24 7 7 2 23 11 6 14 17 4 21 24 23 6 14 6 15 26 22 19 18 20 11 10 16 18 5 16 7 7 24 18 16 14 18 22 25 19 20 13 23 3 25 19 25 25 3 17 16 5 22 9 11 5 6 6 13 26 14 9 13 11 11 1 19 22 23 19 18 5 14 26 11 25 3 24 6 24 20 12 19 7 25 16 19 6 1 4 16 15 15 5 6 24 26 2 3 15 5 10 21 22 16 22 1 2 15 25 7 16 15 5 25 12 6 16 2 14 16 12 10 22 18 22 9 16 25 1 13 25 5 8 23 17 14 17 18 17 16 13 24 21 10 10 12 15 15 22 1 15 23 21 24 23 8 13 19 14 3 2 24 3 15 11 19 6 26 11 22 1 20 24 4 11 14 12 25 10 25 8 6 9 24 10 19 23 14 11 11 21 6 14 21 24 24 26 18 26 2 13 14 13 7 17 15 15 11 5 20 12 25 8 14 11 15 1 21 7 26 17 18 3 4 4 9 21 20 5 9 15 10 23 1 25 25 26 16 22 19 3 13 16 19 1 10 12 6 22 7 21 2 6 1 1 15 22 12 26 25 12 14 20 18 11 4 3 16 23 19 18 20 5 19 10 23 8 4 9 26 3 15 2 26 3 14 6 23 12 17 9 10 20 22 4 23 22 24 8 18 3 2 12 4 22 7 25 12 23 7 2 21 19 2 13 2 15 18 24 20 12 8 3 19 13 16 24 15 8 7 13 7 14 11 5 21 6 4 24 15 20 15 7 2 7 24 16 5 25 1 14 6 5 20 3 21 11 5 16 26 19 8 11 12 10 21 7 7 7 5 11 10 4 17 26 10 5 14 16 5 22 17 7 24 9 5 16 10 19 18 4 26 10 1 26 21 10 12 12 3 8 8 2 6 17 13 11 9 13 23 26 15 2 9 23 25 2 24 4 21 21 14 6 19 11 19 18 19 18 20 5 11 13 17 4 3 25 26 10 5 5 21 8 13 19 18 17 3 15 26 9 10 9 16 6 9 15 14 5 5 4 4 16 19 26 18 14 1 22 25 13 13 20 1 20 2 4 26 17 19 15 5 13 21 22 14 16 16 16 19 21 1 3 2 1 26 21 24 13 8 5 3 20 8 12 5 7 18 16 21 14 11 4 13 2 16 16 23 5 17 20 7 10 15 16 1 18 13 15 23 26 4 17 25 15 24 25 20 10 2 2 8 1 23 4 25 4 3 16 18 10 2 24 16 8 15 15 8 16 11 23 17 25 21 8 18 17 26 8 14 2 14 6 21 22 17 14 17 17 12 18 26 10 16 24 9 15 7 22 12 9 5 24 4 26 21 26 15 19 18 11 18 21 19 22 15 10 2 18 26 13 23 26 16 15 23 11 10 9 12 5 6 18 1 1 13 4 9 7 16 14 16 21 21 8 7 24 16 17 14 10 23 10 13 23 1 24 24 13 14 19 14 8 8 12 17 17 18 26 21 4 12 20 6 26 15 20 3 10 20 14 26 24 21 7 12 19 4 19 13 26 3 14 15 3 11 22 6 1 10 6 18 13 24 15 20 8 15 23 11 2 10 26 23 21 3 23 12 10 6 18 9 13 16 13 25 8 3 8 26 18 9 23 11 2 1 18 24 2 7 6 3 2 3 5 25 8 10 21 7 9 24 23 20 2 22 20 18 5 8 2 2 3 16 24 9 6 2 24 22 6 2 3 7 11 3 6 17 3 11 3 15 20 26 7 11 21 2 13 10 18 13 2 19 26 20 19 19 8 6 18 15 5 6 23 19 10 18 24 10 8 7 21 26 25 21 16 26 23 23 5 9 17 21 18 16 9 24 9 17 6 12 4 21 21 22 5 15 15 23 17 3 21 4 8 14 5 6 14 10 8 1 9 13 21 3 26 6 19 11 21 9 4 21 2 21 18 9 19 23 20 2 18 5 3 21 25 11 1 2 6 3 22 11 4 26 5 26 20 15 9 4 21 11 21 8 10 26 5 6 3 26 26 26 2 6 11 17 4 16 17 26 9 11 6 15 2 21 3 4 8 20 8 24 4 10 7 11 10 5 12 18 12 16 1 24 1 13 3 5 18 15 19 23 9 20 4 16 20 16 3 3 12 9 6 11 5 12 10 25 20 9 8 18 3 17 1 25 2 14 5 6 24 14 24 22 7 26 5 4 25 25 8 14 7 25 3 4 18 21 4 13 16 8 13 5 3 11 15 20 18 23 15 19 16 15 6 7 8 6 15 26 17 22 12 17 6 24 23 23 11 13 6 24 4 25 25 7 13 4 3 1 19 26 19 7 15 22 19 15 4 11 10 7 8 3 23 13 2 13 24 18 13 8 21 25 6 25 17 7 1 10 17 11 3 11 12 26 14 1 25 24 17 11 17 15 25 26 23 13 25 21 2 26 1 26 3 16 11 8 11 20 11 25 4 26 9 22 3 21 25 16 21 18 6 13 2 9 19 7 5 11 25 18 7 26 22 24 4 8 16 15 1 13 22 1 6 25 18 1 18 24 19 22 11 8 20 17 4 9 8 5 18 19 9 7 2 8 26 10 26 21 10 24 13 13 25 19 16 14 1 18 1 5 23 11 5 7 10 3 3 22 8 8 18 10 22 2 10 20 19 17 4 10 15 15 20 7 16 11 14 6 16 6 25 3 7 6 9 5 15 23 17 18 23 23 23 16 26 19 17 13 5 20 15 7 5 16 19 16 24 14 22 10 9 21 16 1 12 25 25 14 13 11 13 14 21 22 11 12 8 19 5 3 4 23 18 1 3 7 6 13 26 11 7 9 16 4 6 15 4 11 10 13 10 17 23 9 17 16 21 15 17 8 9 13 22 6 22 21 26 23 25 22 9 10 7 6 21 12 12 11 10 4 21 8 19 10 1 6 2 20 12 11 13 6 17 18 13 25 10 6 10 14 8 8 19 19 17 3 20 25 4 20 5 1 13 4 3 10 2 16 18 8 20 14 5 7 25 9 23 24 7 3 10 23 12 7 18 19 13 5 1 5 1 18 23 20 22 10 19 10 2 1 15 9 15 10 12 23 8 25 16 14 22 18 21 9 8 15 19 23 11 9 6 25 7 20 25 4 8 1 3 23 25 8 19 7 5 23 26 13 20 7 15 14 26 12 20 10 8 7 1 21 8 14 9 8 18 5 17 7 10 6 23 11 10 19 13 20 16 10 8 1 5 6 17 26 1 1 21 12 4 18 3 8 10 3 3 4 25 18 6 22 22 18 9 22 21 25 5 5 7 6 9 22 4 18 3 25 7 21 18 17 4 18 5 4 1 11 21 2 14 6 7 21 16 18 15 17 25 12 15 2 3 23 17 24 11 26 13 1 21 19 10 7 13 8 3 13 8 7 4 14 13 16 8 14 17 11 1 13 8 21 18 11 20 18 6 6 1 3 12 22 7 18 26 11 11 12 4 1 3 12 12 20 5 15 10 15 13 15 14 24 18 17 25 10 26 7 9 14 18 14 14 26 23 1 3 24 24 1 5 4 18 23 21 4 24 26 18 6 21 19 5 23 10 20 2 15 24 22 25 14 6 8 11 19 20 3 5 14 1 21 13 14 4 4 24 6 4 13 22 26 3 1 21 20 4 3 3 11 24 1 1 25 4 26 19 24 20 20 15 2 2 7 17 14 7 22 22 16 10 7 15 10 15 7 12 13 11 24 7 2 6 3 16 25 16 3 11 17 3 8 2 4 4 26 23 18 24 2 26 13 17 18 12 24 22 15 2 20 23 8 24 7 9 14 6 7 6 18 3 3 12 13 26 14 13 10 21 7 23 23 2 19 17 6 3 9 8 21 2 19 10 15 12 12 13 19 17 19 7 8 13 3 16 8 5 12 19 15 20 6 12 2 7 19 6 14 16 3 21 26 19 18 21 16 3 8 25 14 22 26 8 3 16 17 21 7 18 9 23 14 9 17 24 4 6 10 16 23 16 24 6 2 12 11 16 14 16 5 5 12 6 10 13 20 11 21 17 16 26 15 13 23 14 12 13 2 21 16 13 11 20 12 16 20 14 4 13 16 4 19 25 4 19 7 22 6 16 5 14 5 13 23 2 15 18 9 6 19 21 17 8 3 5 19 11 13 11 8 19 19 13 22 14 15 14 23 1 6 24 23 8 7 2 9 2 1 2 22 17 15 16 17 6 15 22 9 21 19 19 17 6 17 23 5 8 20 24 4 26 21 10 20 12 14 20 24 13 18 10 24 24 23 20 12 7 7 11 25 20 2 9 15 12 25 4 14 9 12 17 1 4 15 10 19 11 11 22 6 24 1 8 8 10 13 2 15 3 12 10 1 18 9 14 20 4 23 3 12 4 22 4 24 18 15 16 2 25 10 26 23 25 25 15 10 21 15 20 8 23 13 12 22 18 7 12 6 26 4 26 4 2 20 21 2 24 21 15 6 6 22 14 3 18 19

vector<bool> dectobin(ll n)
{
	vector<bool> ans;
	while(n != 0)
	{
		ans.push_back(n % 2);
		n /= 2;
	}
	reverse(ans.begin(), ans.end());
	return ans;
}

ll bintodec(vector<bool> a)
{
	ll ans = 0;
	for(ll i = 0 ; i < a.size() ; i++)
	{
		ans = ans * 2 + (ll)a[i];	
	}
	return ans;
}

vector<bool> process(vector<bool> a, ll d)
{
	vector<bool> ans;
	if(d == 1)
	{
		for(ll i = 0 ; i < a.size() - 1 ; i += 2)
		{
			if(a[i] == 0 && a[i+1] == 0)
			{
				ans.push_back(0);
				ans.push_back(0);
			}
			else if(a[i] == 0 && a[i+1] == 1)
			{
				ans.push_back(1);
				ans.push_back(0);
			}
			else if(a[i] == 1 && a[i+1] == 0)
			{
				ans.push_back(1);
				ans.push_back(1);
			}
			else
			{
				ans.push_back(0);
				ans.push_back(1);
			}
		}
		return ans;
	}
	else if(d == 2)
	{
		for(ll i = 0 ; i < a.size() - 1 ; i += 2)
		{
			if(a[i] == 0 && a[i+1] == 0)
			{
				ans.push_back(0);
				ans.push_back(0);
			}
			else if(a[i] == 0 && a[i+1] == 1)
			{
				ans.push_back(1);
				ans.push_back(1);
			}
			else if(a[i] == 1 && a[i+1] == 0)
			{
				ans.push_back(0);
				ans.push_back(1);
			}
			else
			{
				ans.push_back(1);
				ans.push_back(0);
			}
		}
		return ans;
	}
	return a;
}

string str(ll a)
{
	string t;
	while(a != 0)
	{
		string e;
		if(a%2 == 0)
		{
			e = "0";
		}
		else
		{
			e = "1";
		}
		t = t + e;
		a /= 2;
	}
	return t;
}

ll possible(string a, string b)//a into b
{
	ll c = 0;
	for(ll i = 0 ; i < 7 ; i++)
	{
		if(a[i] == '1' && b[i] == '1')
		{
			return -1;
		}
		else if(a[i] == '0' && b[i] == '1')
		{
			c++;
		}
	}
	return c;
}


vector<vector<ll> > findpos(string a)
{
	vector<vector<ll> > p;
	for(ll i = 1 ; i <= 9 ; i++)
	{
		//if(possible(i, a) != -1)
		{
		//	p.push_back(make_pair(i, possible(a, str(i))));
		}
	}
	return p;
}

int main()
{
	ll n;
	cin>>n;
	ll c = 0;
	for(ll i = 0 ; i < n ; i++)
	{
		string a;
		cin>>a;
		ll f = 0;
		for(ll j = 0; j < a.size() ; j++)
		{
			if(a[j] == '+')
			{
				f = 1;
			}
		}
		if(f == 0)
		{
			c--;
		}
		else
		{
			c++;
		}
	}
	cout<<c;
	return 0;
}/*ll n;
	cin>>n;
	vector<ll> a(n);
	vector<ll> dp(n);
	for(ll i = 0 ; i < n ; i++)
	{
		cin>>a[i];
		if(i == 0)
		{
			dp[i] = a[i];
		}
		else
		{
			dp[i] = dp[i-1] + a[i];
		}
	}
	ll m;
	cin>>m;
	for(ll i = 0 ; i < m ; i++)
	{
		ll p;
		cin>>p;
		ll l = 0;
		ll h = n;
		ll m = (l + h) / 2;
		ll q = 0;
		ll f = 0;
		while(l < h)
		{
			if(p == dp[m])
			{
				q = m;
				f = 1;
				break;
			}
			else if(p < dp[m])
			{
				h = m;
			}
			else
			{
				l = m + 1;
			}
			m = (l + h)/2;
		}
		if(f == 0)
		{
			q = l;
		}
		cout<<q+1<<endl;
	}, m, a, b;
	cin>>n>>m>>a>>b;
	if( ((double)b) / ((double)m) < (double)a )
	{
		cout << (n/m) * b + min(b, a * (n % m));
	}
	else
	{
		cout<<n * a;
	} n, l;
	cin>>n>>l;
	vector<ll> a(n);
	for(ll i = 0 ; i < n ; i++)
	{
		cin>>a[i];
	}
	sort(a.begin(), a.end());
	long double maxa = (long double)max(a[0], l - a[n-1]);
	for(ll i = 0 ; i < n - 1 ; i++)
	{
		maxa = max(maxa, (long double)((a[i+1] - a[i])/2.0));
	}
	cout<<fixed;
	cout<<setprecision(9);
	cout<<maxa;	map<string, ll> m;
	for(ll i = 0 ; i < n ; i++)
	{
		string s;
		cin>>s;
		if(m[s] == 0)
		{
			m[s]++;
			cout<<"OK"<<endl;
		}
		else
		{
			cout<<s<<m[s]<<endl;
			m[s]++;
		}
	}ll n;
	cin>>n;
	vector<ll> a(n);
	for(ll i = 0 ; i < n; i++)
	{
		cin>>a[i];
	}
	ll on = a[0] % 2;
	ll tw = a[1] % 2;
	ll th = a[2] % 2;
	if(on == tw && tw == th)
	{
		for(ll i = 3; i < n ; i++)
		{
			if(a[i] % 2 == (1 - on))
			{
				cout<<i+1;
				break;
			}
		}
	}
	else
	{
		if(on == tw)
		{
			cout<<3;
		}
		else if(on == th)
		{
			cout<<2;
		}
		else
		{
			cout<<1;
		}
	}// TASK : Do checking for a maximum for a 2000 digit number - not ( * 10 + )
	ll n, k;
	cin>>n>>k;
	vector<string> a(n);
	for(ll i = 0 ; i < n ; i++)
	{
		cin>>a[i];
	}
	vector<vector<ll> > dp(n, vector<ll> (k+1));
	vector<pair<ll, ll> > t = findpos(a[0]);//val, k req
	for(ll j = 0 ; j <= k ; j++)
	{
		dp[0][j] = 0;
		for(ll m = 0 ; m < t.size() ; m++)
		{
			dp[0][j] = max(dp[0][j], t[m].ff);
		}
	}
	for(ll i = 1 ; i < n ; i++)
	{
		vector<pair<ll, ll> > t = findpos(a[i]);//val, k req
		for(ll j = 0 ; j <= k ; j++)
		{
			dp[i][j] = 0;
			for(ll m = 0 ; m < t.size() ; m++)
			{
				if(j - t[m].ss >= 0)
				{
					dp[i][j] = max(dp[i][j], dp[i-1][j - t[m].ss] * 10 + t[m].ff);			
				}
			}
		}
	}
	if(dp[n-1][k] < 1e2000-1)///invalid
	{
		cout<<0;
	}
	else
	{
		cout<<dp[n-1][k];		
	}t;
	cin>>t;
	for(int xyz = 0 ; xyz < t ; xyz ++)
	{
		ll n;
		cin>>n;
		vector<ll> a(n);
		for(ll i = 0 ; i < n ; i++)
		{
			cin>>a[i];
		}
		ll ne = 1;
		ll f = 0;
		for(ll i = n - 1 ; i >= 0 ; i-- )
		{
			if(a[i] == ne)
			{
				ne++;
			}
			else
			{
				ll net = a[i] + 1;
				while(i >= 1 && a[i] != ne)
				{
					if(a[i] != a[i-1] + 1)
					{
						f = 1;
						break;
					}
					i--;
				}
				ne = net;
			}
		}
		if(f == 0)
		{
			cout<<"Yes"<<endl;
		}
		else
		{
			cout<<"No"<<endl;
		}
	}queue<ll> peaks;
		ll p = 0;
		ll q = k - 1;
		for(ll i = p + 1 ; i <= q - 1 ; i++)
		{
			if(a[i] >= a[i-1] && a[i] >= a[i+1])
			{
				peaks.push(i);
			}
		}
		ll maxa = peaks.size();
		ll maxi = p;
		p++;
		q++;
		while(q < n)
		{
			if(!peaks.empty() && peaks.front() == p)
			{
				peaks.pop();
			}
			if(a[q-1] >= a[q-2] && a[q-1] >= a[q])
			{
				peaks.push(q-1);
			}
			if(!peaks.empty() && peaks.size() > maxa)
			{
				maxa = peaks.size();
				maxi = p;
			}
			p++;
			q++;
		}
		cout<<maxa+1<<" "<<maxi+1<<endl;if(n <= 3)
		{
			cout<<n<<endl;
			continue;
		}
		//cout<<"log2(n+1) "<<ceil(log2l(n+1))<<endl;
		ll b = ceil(log2l(n+1));
		if(b % 2 == 1)
		{
			b++;
		}
		ll nd = n - (ll)pow(4, (b-4)/2 + 1) + 1;
		ll d = (nd - 1) % 3;
		//cout<<"b "<<b<<endl;
		//cout<<"nd "<<nd<<endl;
		vector<bool> ans(b, 0);
		ans[1] = 1;
		vector<bool> rem;
		rem = dectobin((nd-1)/3); //MSB = 0 ; LSB = n - 1
		reverse(rem.begin(), rem.end());
		while(rem.size() < b - 2)
		{
			rem.push_back(0);
		}
		reverse(rem.begin(), rem.end());
		/*for(ll i = 0 ; i < rem.size() ; i++)
		{
			cout<<rem[i]<<" ";
		}
		cout<<endl;
		ll ansi = 2;
		for(ll i = 0 ; i < rem.size() ; i++)
		{
			ans[ansi] = rem[i];
			ansi ++;
		}
		ans = process(ans, d);
		ll ansn = bintodec(ans);
		cout<<ansn<<endl;int n;
		cin>>n;
		vector<int> a(n+1);
		for(int i = 1 ; i <= n ; i++)
		{
			cin>>a[i];
		}
		vector<vector<int> > dp(201, vector<int> (n+1));
		for(int p = 1 ; p <= 200 ; p++)
		{
			for(int i = 0 ; i <= n ; i++)
			{
				if(i == 0)
				{
					dp[p][i] = 0;
				}
				else
				{
					dp[p][i] = dp[p][i-1] + (a[i] == p ? 1 : 0);
				}
			}
		}
		vector<vector<int> > c(201);
		for(int i = 1 ; i <= n ; i++)
		{
			c[a[i]].push_back(i);
		}
		int ans = 1;
		for(int i = 1 ; i <= 200 ; i++)
		{
			int len = c[i].size();
			for(int j = 0 ; j < len / 2 ; j++)
			{
				int l = c[i][j];
				int r = c[i][len - j - 1] - 1;
				int maxi = 0;
				for(int k = 1 ; k <= 200 ; k++)
				{
					maxi = max(maxi, dp[k][r] - dp[k][l]);
				}
				ans = max(ans, 2 * (j + 1) + maxi);
			}
		}
		cout<<ans<<endl;fn = 9;
		for(ll i = 1 ; i <= n ; i++)
		{
			string a;
			cin>>a;
			for(ll j = 1 ; j <= n ; j++)
			{
				ll p;
				p = a[j-1] - '0';
				if(i == 1 && j == 1 || i == 2 && j == 4 || i == 3 && j == 7 || i == 4 && j == 2 || i == 5 && j == 5 || i == 6 && j == 8 || i == 7 && j == 3 || i == 8 && j == 6 || i == 9 && j == 9 )
				{
					p %= 9;
					p += 1;
				}
				cout<<p;
			}
			cout<<endl;
		}or(ll i = 0 ; i < n ;i++)
		{
			cin>>a[i];
		}
		if(n == 1)
		{
			cout<<0<<endl;
			continue;
		}
		ll l = 1;
		ll h = n - 1;
		while(l < h)
		{
			ll m = (l + h + 1) / 2;
			if(finf(m, a, n))
			{
				//cout<<"Yes"<<endl;
				l = m;
			}
			else
			{
				//cout<<"No"<<endl;
				h = m - 1;
			}
		}
		cout<<l<<endl;//	ll n=1000001;
//	vector<ll> a(n);
//	a=sieve(a,n);
	ll n;
	cin>>n;
	ll n1;
	cin>>n1;
	ll t;
	vector<ll> ad;
	for(ll i = 0; i < n1 ; i++)
	{
		cin>>t;
		ad.push_back(t);
	}
	ll n2;
	cin>>n2;
	vector<ll> bd;
	for(ll i = 0 ; i < n2 ; i++)
	{
		cin>>t;
		bd.push_back(t);
	}
	//
	stack<ll> a;
	for(ll i = ad.size()-1; i >= 0 ; i--)
	{
		a.push(ad[i]);
	}
	stack<ll> b;
	for(ll i = bd.size()-1; i >= 0 ; i--)
	{
		b.push(bd[i]);
	}
	//
	ll f = 0;
	ll c = 0;
	while(1)
	{
		operate(a, b);//d
		/
		stack<ll> temp;
		while(!a.empty())
		{
			temp.push(a.top());
			cout<<"a : "<<a.top()<<endl;
			a.pop();
		}
		while(!temp.empty())
		{
			a.push(temp.top());
			temp.pop();
		}
		
		while(!b.empty())
		{
			temp.push(b.top());
			cout<<"b : "<<b.top()<<endl;
			b.pop();
		}
		while(!temp.empty())
		{
			b.push(temp.top());
			temp.pop();
		}
		c++;
		//
		if(equal(a, ad) && equal(b, bd)  || equal(a, bd) && equal(b, ad) ||  c > 100000)
		{
			f = 2;
			break;
		}
		if(a.size() == 0 || b.size() == 0)
		{
			f = 1;
			break;
		}
	}
	if(f == 2)
	{
		cout<<-1;
	}
	else
	{
		cout<<c<<" "<<(a.size() == 0 ? 2 : 1);
	}
/*	ll n;
	cin>>n;
	vector<ll> a;
	vector<ll> ans;
	while(n != 0)
	{
		a.push_back(n % 10);
		n /= 10;
	}
	reverse(a.begin(), a.end());
	for(ll j = 0 ; j <= 9 ; j++)
	{
		ll t = 0;
		for(ll i = 0 ; i < a.size() ; i++)
		{
			if(a[i] > 0)
			{
				t = t * 10 + 1;
				a[i]--;
			}
			else
			{
				t = t * 10;
			}
		}
		if(t != 0)
		{
			ans.push_back(t);
		}
	}
	cout<<ans.size()<<endl;
	for(ll i = 0 ; i  <  ans.size() ; i++)
	{
		cout<<ans[i]<<" ";
	}
/*if(n <= 1)
	{
		cout<<"Yes";
		return 0;
	}
	sort(a.begin(), a.end());
	ll p;
	for(ll i = 0 ; i < n ; i++)
	{
		if(i == 0)
		{
			p = ifok(a[i]);
		}
		else
		{
			if(ifok(a[i]) != p)
			{
				cout<<"No";
				return 0;
			}
		}
		//cout<<"LCM : "<<lcm<<endl;
	}
	cout<<"Yes";*/

//#pragma GCC optimize("Ofast")
//#pragma GCC target("avx,avx2,fma")
//#pragma GCC optimization("unroll-loops")

#include <bits/stdc++.h>
#include <complex>
using namespace std;
const long double PI = 3.1415926535897932384626;
typedef long long ll;
typedef vector<ll> vli;
typedef pair<ll, ll> pii;
#define f first
//#define s second
#define pb push_back
#define mp make_pair
#define rep(i, a, b) for (long long int i = a; i < b; i++)
//#define fill(a, b) memset(a, b, sizeof(a))
#define mod 1000000007

#define FIO                       \
    ios_base::sync_with_stdio(0); \
    cin.tie(0);                   \
    cout.tie(0);


//void fuck()
//{
//    ios_base::sync_with_stdio(false);
//    cin.tie(nullptr);
//    cout.tie(nullptr);
//}

/*
------>do anything but don't stop..don't procastinate...
------>make test cases for n=1,n=0...baoundary cases..
*/

////bool get_ans(ll aux)
////{
////
////}
bool collinear(int x1, int y1, int x2, int y2, int x3, int y3)
{
    return (y1 - y2) * (x1 - x3) != (y1 - y3) * (x1 - x2);
}
bool isInt(double num)
{
    return (num == (int)num);
}
//returns the minimum of two numbers
//ll min(ll x, ll y)
//{
//    return y ^ ((x ^ y) & -(x < y));
//}
////returns the maximum of two numbers
//ll max(ll x, ll y)
//{
//    return x ^ ((x ^ y) & -(x < y));
//}
//addition of two integers
//int add(int a, int b)
//{
//    if (b == 0)
//        return a;
//    int sum = a ^ b;
//    int carry = (a & b) << 1;
//    return add(sum, carry);
//}
//iterative addition of two integers
//int Add(int a, int b)
//{
//    while (b != 0)
//    {
//        int sum = a ^ b;
//        int carry = (a & b) << 1;
//        a = sum;
//        b = carry;
//    }
//    return a;
//}
//recursive subtraction of two integers
//int subtract(int a, int b)
//{
//    if (b == 0)
//        return a;
//    return subtract((a ^ b), ((~a) & b) << 1);
//}
//iterative subtraction of two integers
//int Subtract(int x, int y)
//{
//    while (y != 0)
//    {
//        int borrow = (~x) & y;
//        x = x ^ y;
//        y = borrow << 1;
//    }
//    return x;
//}
// Russian Peasant using bitwise operator
//multiplication function without using "*"
//int multiply(int a, int b)
//{
//    int res = 0;
//    while (b)
//    {
//        if (b & 1)
//        {
//            res = res + a;
//        }
//        a = a << 1;
//        b = b >> 1;
//    }
//    return res;
//}
//divide
//int divide(int a, int b)
//{
//    int sign = ((a < 0) ^ (b < 0)) ? -1 : 1;
//    a = abs(a);
//    b = abs(b);
//    int q = 0, tmp = 0;
//    for (int i = 31; i >= 0; --i)
//    {
//        if (tmp + (b << i) <= a)
//        {
//            tmp += (b << i);
//            q |= (1LL << i);
//        }
//    }
//    return sign * q;
//}
//O(sqrt(n)) for below
//ll phi(ll n)
//{
//    ll res = n;
//    for (ll i = 2; i * i <= n; i++)
//    {
//        if (n % i == 0)
//        {
//            res = res / i;
//            res = res * (i - 1);
//        }
//        while (n % i == 0)
//        {
//            n = n / i;
//        }
//    }
//
//    if (n > 1)
//    {
//        res = res * (n - 1);
//        res = res / n;
//    }
//    return res;
//}

//o(nlog(logn)) for below
//ll phi[1000006];
//void PHI()
//{
//    rep(i, 0, 1000006)
//    {
//        phi[i] = i;
//    }
//    rep(i, 2, 1000006)
//    {
//        if (phi[i] == i)
//        {
//            for (int j = i; j < 1000006; j = j + i)
//            {
//                phi[j] = phi[j] * (i - 1);
//                phi[j] = phi[j] / i;
//            }
//        }
//    }
//}
// prefix function in better way
//vector<int> prefix_func(string s)
//{
//    ll n=s.length();
//    vector<int> prefix(n,0);
//    prefix[0]=0;
//    int j=0;
//    for(int i=1;i<n;i++)
//    {
//        j=prefix[i-1];
//        while(j>0 && s[i]!=s[j])
//        {
//            j--;
//        }
//        if(s[i]==s[j])
//        {
//            j++;
//        }
//        prefix[i]=j;
//    }
//
//return prefix;
//}
//int kmp(string s,string pat)
//{
//    //string s="abaaba";
//    vector<int> prefix=prefix_func(s);
//    //for(auto i:prefix)
//    //{
//    //    cout<<i<<"   ";
//    //}
//    //cout<<endl;
//    //string pat="aa";
//    ll n=s.size();
//    ll j=0;
//    ll pos=0;
//    for(int i=0;i<n;i++)
//    {
//        if(s[i]==pat[j])
//        {
//            i+=1;
//            j+=1;
//        }
//        else
//        {
//            if(j>0)
//            {
//                j=prefix[j-1];
//            }
//            else
//            {
//                i++;
//            }
//        }
//        if(j==pat.size())
//        {
//            //cout<<i<<endl;
//            pos=i-pat.size();
//            break;
//        }
//    }
//    //cout<<pos<<endl;
//    return pos;
//}
//vector<int> get_z(string s)
//{
//    /*
//    isme kya hota h ki z array k kisi v index pr jo value hoti h wo ye btati h ki
//    uss index se utne length(uss index ki value) ki prefix exist krti h string me...
//    example-
//            string str=" a b c d s j v j a b c h j"
//                     Z=                  3
//                     yha jo 3 h wo bta rha h ki abc 3 length ki as a prefix exist krti h...
//    */
///*
//        jo isme [l,r] hai wo ye bta rha h ki "l" to "r" ki jo substring hai prefix k
//        barabar ho chuki h...
//
//        */
//    int n=s.length();
//    //int z[n];
//    vector<int> z(n,0);
//    //for(int i=0;i<n;i++)
//    //{
//    //    cout<<z[i]<<"  ";
//    //}
//    //memset(z,0,n);
//    int l=0,r=0;
//    for(int i=0;i<n;i++)
//    {
//        if(i>r)
//        {
//            l=r=i;
//            while(r<n && s[r-l]==s[r])
//            {
//                r=r+1;
//            }
//            z[i]=r-l;
//            r--;
//        }
//        else
//        {
//            int idx=i-l;
//            if(z[idx]+i<=r)
//            {
//                z[i]=z[idx];
//            }
//            else
//            {
//                l=i;
//                while(r<n && s[r-l]==s[r])
//                {
//                    r++;
//                }
//                z[i]=r-l;
//                r--;
//            }
//        }
//    }
//    return z;
//}
//to get better results in decimal places..
//use double for better precision in decimal places
//cout<<fixed<<setprecision(10)<<ans<<endl;
//we get double/float as return in sqrt(blah_blah) function
// find euclidean distance
double euclid_dist(ll x1, ll y1, ll x2, ll y2)
{
    return sqrt(abs(x1 - x2) * abs(x1 - x2) * 1.000 + abs(y1 - y2) * abs(y1 - y2) * 1.000);
}

ll binpow(ll a, ll b)
{
    ll res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = res * a;
        a = a * a;
        b >>= 1;
    }
    return res;
}

ll binpow_mod(ll a, ll b, ll MOD)
{
    ll res = 1;
    while (b > 0)
    {
        if (b & 1)
        {
            res = ((res % MOD) * (a % MOD)) % MOD;
        }
        b = b >> 1;
        a = ((a % MOD) * (a % MOD)) % MOD;
    }
    return res;
}

//***function to check whether a str2 is a substring of str1 or not.....
//bool check_substring(string str1,string str2)
//{
//    ll pos=0;
//    for(ll i=0;i<str1.size();i++)
//    {
//        if(str1[i]==str2[pos])
//        {
//            pos++;
//        }
//        if(pos==str2.size())
//        {
//            break;
//        }
//    }
//    if(pos==str2.size())
//    {
//        return true;
//    }
//    return false;
//}
//function to count the occurence of a character in string
//ll count_occurence(string str,char search)
//{
//    ll ans=0;
//    for(int i=0;i<str.size();i++)
//    {
//        if(search==str[i])
//        {
//            ans=ans+1;
//        }
//    }
//    return ans;
//}
//vector<ll> get_factors(ll n)
//{
//    vector<ll> v;
//    for (int i = 1; i <= sqrt(n); i++)
//    {
//        if (n % i == 0)
//        {
//            if (n / i == i)
//            {
//                v.push_back(i);
//            }
//            else
//            {
//                v.push_back(i);
//                v.push_back((n / i));
//            }
//        }
//    }
//    return v;
//}
//----convert a number(as string) to any base
//int convert(string s,int base)
//{
//    int pw=1;
//    int n=0;
//    for(int i=n-1;i>=0;i--)
//    {
//        if(val(s[i])>base)
//        {
//            return INT_MAX;
//        }
//        n=n+(val[s[i]])*base;
//        pw=pw*base;
//    }
//    return n;
//}

//GRAPH DFS---------------GRAPH ALGOS BELOW THIS-------
//vector<int> graph[(int)102];
//bool visited[105];
//bool flag = false;
//void dfs(int start, int finish)
//{
//    visited[start] = true;
//    if (start == finish)
//    {
//        flag = true;
//        return;
//    }
//    for (auto i : graph[start])
//    {
//        if (!(visited[i]))
//        {
//            dfs(i, finish);
//        }
//    }
//}
//class DisjSet
//{
//    //complexity 4*alpha...most optimised version
//    int *rank, *parent, n;
//
//public:
//    DisjSet(int n)
//    {
//        size = new int[n];
//        parent = new int[n];
//        this->n = n;
//        makeSet();
//    }
//
//    void makeSet()
//    {
//        for (int i = 0; i < n; i++)
//        {
//            parent[i] = i;
//            size[i] = 1;
//        }
//    }
//
//    int find(int i)
//    {
//        if (i == parent[i])
//        {
//            return parent[i];
//        }
//        return parent[i] = find(parent[i])
//    }
//
//    void Union(int u, int v)
//    {
//        int paru = find(x);
//        int parv = find(y);
//
//        if (paru ^ parv)
//        {
//            if (size[parv] > size[paru])
//            {
//                //bade me chote ko add krenge
//                size[parv] += size[paru];
//                parent[paru] = parv;
//            }
//            else
//            {
//                size[paru] += size[parv];
//                parent[parv] = paru;
//            }
//        }
//    }
//};
//ll binary_search(vector<ll> &vec, ll val)
//{
//    ll left = 0, right = vec.size() - 1;
//    while (left <= right)
//    {
//        ll mid = (left + right) / 2;
//        if (vec[mid] == val)
//        {
//            return mid;
//        }
//        else if (vec[mid] < val)
//        {
//            left = mid + 1;
//        }
//        else
//        {
//            right = mid - 1;
//        }
//    }
//    return right; //this will return a number jus less than 'val'
//}

string convert_binary(ll n)
{
    string str = "";
    while (n)
    {
        if (n & 1)
        {
            str.push_back('1');
        }
        else
        {
            str.push_back('0');
        }
        n = n / 2;
    }
    reverse(str.begin(), str.end());
    return str;
}
//vector<ll> ans, bag(2, 0);

//2-d dfs waha tk chlana h jb tk feasible hp movement mtlb hm return tb hi honge jb out
// of bound ki condition aayegi
//int cnates[1000][2];
//bool visi[1000];
//vector<ll> adj[105];
//void dfs(ll src)
//{
//    visi[src] = true;
//    for (auto i : adj[src])
//    {
//        if (!visi[i])
//        {
//            dfs(i);
//        }
//    }
//}
//----------------------------------------------
//const int N = 1e6 + 3;
//bool prime[N];
//vector<ll> det(N, 0);
//void seive(int n)
//{
//    memset(prime, true, sizeof(prime));
//    prime[0] = false;
//    prime[1] = false;
//    for (int i = 2; i <= n; i++)
//    {
//        if (prime[i])
//        {
//            for (int j = 2 * i; j <= n; j += i)
//            {
//                prime[j] = false;
//            }
//        }
//    }
//    for (int i = 1; i < N; i++)
//    {
//        if (prime[i])
//        {
//            det[i] = det[i - 1];
//        }
//        else
//        {
//            det[i] = 1 + det[i - 1];
//        }
//    }
//}
/////////=-------------------------TARJAN's algorithm=-------------------O(V+E)////////
//vector<int> adj[100010];
//ll mini = INT_MAX;
//ll cnt, tot,ans;
//ll cst[100005];
//void dfs_for_tarjan(int u, vector<int> &disc, vector<int> &low, vector<bool> &instack, stack<int> &mystk)
//{
//    static int time = 0;
//    disc[u] = low[u] = time;
//   // cout<<time<<endl;
//    time = time + 1;
//    mystk.push(u);
//    instack[u] = true;
//    for (auto v : adj[u])
//    {
//        if (disc[v] == -1) //If nodes are not discovered yet
//        {
//            dfs_for_tarjan(v, disc, low, instack, mystk);
//            low[u] = min(low[u], low[v]);
//        }
//        else if (instack[v]) //it will be true when there will be a case of back edge
//        {
//            low[u] = min(low[u], disc[v]);
//        }
//    }
//    mini=INT_MAX;
//    if (disc[u] == low[u]) //IF u is head node of SCC
//    {
//        cnt=0;
//        //cout << "THE SCC IS:\n";
//        while (mystk.top() != u)
//        {
//            //  cout << mystk.top() << "  ";
//            if (cst[mystk.top()] < mini)
//            {
//                mini = cst[mystk.top()];
//                cnt = 0;
//            }
//            if (mini == cst[mystk.top()])
//            {
//                cnt = cnt + 1;
//            }
//            instack[mystk.top()] = false;
//            mystk.pop();
//        }
//        //cout << mystk.top() << "\n";
//        //cout<<ans<<" "<<tot<<endl;
//        if (cst[mystk.top()] < mini)
//        {
//            mini = cst[mystk.top()];
//            cnt = 0;
//        }
//        if (mini == cst[mystk.top()])
//        {
//            cnt = cnt + 1;
//        }
//        //cout<<cnt<<endl;
//        instack[mystk.top()] = false;
//        mystk.pop();
//        ans=ans+mini;
//        tot=((tot%mod)*(cnt%mod))%mod;
//        //cout<<ans<<" "<<tot<<endl;
//    }
//}
//void get_SCC_tarjan(int V)
//{
//    vector<int> disc(V+1, -1), low(V+1, -1);
//    vector<bool> instack(V+1, false);
//    stack<int> mystk;
//    for (int i = 1; i <= V; i++)
//    {
//        if (disc[i] == -1)
//        {
//            dfs_for_tarjan(i, disc, low, instack, mystk);
//        }
//    }
//}
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//-----------------------------DFS FOR TREE------------------------------------------
//-----------------------------------------------------------------------------------
//const int maxn = 100005;
//vector<ll> adj[maxn];
//vector<bool> visited(maxn, 0);
//ll dp[maxn];
//ll ok;  //
//ll ans; //
//ll a[maxn];
//void dfs(int curr, int par, int cnt)
//{
//    if (visited[curr])
//    {
//        return;
//    }
//    visited[curr] = true;
//
//    //if (par != -1)
//    //{
//    //    dp[curr] = dp[par] + 1;
//    //}
//    for (ll i = 0; i < adj[curr].size(); i++)
//    {
//        ll next = adj[curr][i];
//        if (par != next)
//        {
//            if (a[next] == 1 && a[curr] == 1)
//            {
//                dfs(next, curr, cnt + 1);
//            }
//            else
//            {
//                dfs(next, curr,a[next]);
//            }
//        }
//    }
//}
//----------------------------------------------------------------------------------
//------------------------------------BFS----------------------------------------------
//const int maxn = 20000;
//vector<ll> adj[maxn];
//ll ans[100000];
//vector<bool> visited(100000, 0);
//bool flag=false;
//void bfs(int i, int j)
//{
//    queue<ll> q;
//    q.push(i);
//    ans[i]=0;
//    while (!(q.empty()))
//    {
//        ll src = q.front();
//        q.pop();
//       //cout<<src<<" ";
//        for (auto ii : adj[src])
//        {
//            if (!(visited[ii]))
//            {
//                visited[ii]=true;
//                ans[ii]=ans[src]+1;
//                q.push(ii);
//                if (ii == j)
//                {
//                    flag = true;
//                    break;
//                }
//            }
//        }
//        if(flag)
//        {
//            break;
//        }
//    }
//    //cout<<"\n";
//    return;
//}
//-----------------------------------------------------------------------------------
//-----------------------------------------------------------------------------------
//--------------------------------LCS------------------------------------------------
//ll dp[5005][5005];
//ll lcs(string s1,string s2)
//{
//    for(int i=0;i<s1.size();i++)
//    {
//        dp[0][i]=0;
//    }
//    for(int i=0;i<s2.size();i++)
//    {
//        dp[i][0]=0;
//    }
//    for(int i=1;i<=s1.size();i++)
//    {
//        for(int j=1;j<=s2.size();j++)
//        {
//            if(s1[i-1]==s2[j-1])
//            {
//                dp[i][j]=dp[i-1][j-1]+1;
//            }
//            else
//            {
//                dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
//            }
//        }
//    }
//
//    //printing of lcs
//    string ans;
//    int i=s1.size();
//    int j=s2.size();
//    while(i>0 && j>0)
//    {
//        if(s1[i-1]==s2[j-1])
//        {
//            ans.push_back(s1[i-1]);
//            i--,j--;
//        }
//        else if(dp[i-1][j]>dp[i][j-1])
//        {
//            i--;
//        }
//        else
//        {
//            j--;
//        }
//    }
//    reverse(ans.begin(),ans.end());
//    cout<<ans<<"\n";
//    return dp[s1.size()][s2.size()];
//}
//vector<pair<int, int>> adj[100005];
//vector<int> v[100005];
//ll findshortest(int src, int n)
//{
//    ll dist[n + 1];
//    for (int i = 0; i <= n; i++)
//    {
//        dist[i] = INT_MAX;
//    }
//    dist[src] = 0;
//    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
//    pq.push({0, src});
//    while (!pq.empty())
//    {
//        auto node = pq.top().second;
//        auto dis = pq.top().first;
//        pq.pop();
//        //cout<<node<<"\n";
//        if(v[node].size())
//        {
//            while(binary_search(v[node].begin(),v[node].end(),dis))
//            {
//                dis++;
//            }
//        }
//        //cout<<"11\n";
//        for (auto it : adj[node])
//        {
//         //   cout<<it.first<<"  "<<it.second<<"\n";
//            if ((dis + it.second) < dist[it.first])
//            {
//                dist[it.first] = dis + it.second;
//                pq.push({dist[it.first], it.first});
//            }
//        }
//       // cout<<"123\n";
//    }
//    return dist[n];
//}
//vector<int> adj[200009];
//vector<int> height(200009, 0);
//vector<int> det_lev[200009];
//vector<int> out_degree(200009, -1);
//vector<int> parent(200009, 0);
//void dfs(int curr, int par, int level)
//{
//    parent[curr] = par;
//    height[curr] = level;
//    det_lev[level].push_back(curr);
//    out_degree[curr] = adj[curr].size() - 1;
//    for (auto it : adj[curr])
//    {
//        if (it != par)
//        {
//            dfs(it, curr, level + 1);
//        }
//    }
//    return;
//}
//bool mycomp(const pair<ll, ll> &a, const pair<ll, ll> &a)
//{
//    return a.first < b.second;
//}
//int reflec[10]={0,1,5,-1,-1,2,-1,-1,8,-1};//reflection of numbers in mirror
//const int INF = 1e9 + 7;
//const int maxn = 5e6 + 1;
//vector<int> prime_divisors_till(maxn, 0);
//void get_no_of_prime_divisors(vector<int> &prime_divisors_till, int maxn)
//{
//    vector<int> seive(maxn, 0);
//    vector<int> no_of_prime_divisors(maxn, 0);
//    for (int i = 2; i < maxn; i++)
//    {
//        if (seive[i] == 0)
//        {
//            for (int j = i; j < maxn; j = j + i)
//            {
//                seive[j] = i;
//            }
//        }
//        int p = seive[i];
//        no_of_prime_divisors[i] = 1 + no_of_prime_divisors[i / p];
//        prime_divisors_till[i] += no_of_prime_divisors[i] + prime_divisors_till[i - 1];
//    }
//}
//ll n;
//ll dp[2005][2005];
//bool fun(vector<ll> &subset,ll i,ll sum)
//{
//    if(i==0)
//    {
//        if(sum==0)
//        {
//            return true;
//        }
//        return false;
//    }
//    if(dp[i][sum]!=-1)
//    {
//        return dp[i][sum];
//    }
//    bool ans=false;
//    if(sum-subset[i-1]>=0)
//    {
//        ans|=fun(subset,i-1,sum-subset[i-1]);
//    }
//    ans|=fun(subset,i-1,sum);
//    return dp[i][sum]=ans;
//}
ll check(string str1, string str2)
{
    if (str2.find(str1) != string::npos)
    {
        return 1;
    }
    return 0;
}
ll findMex(vli arr, ll n)
{
    sort(arr.begin(), arr.end());
    if (arr[0] != 0)
        return 0;
    rep(i, 1, n - 1)
    {
        if (arr[i] - arr[i - 1] <= 1)
            continue;
        return arr[i - 1] + 1;
    }
    return arr[n - 1] + 1;
}
const int maxn = 2e5 + 5;

vector<int> convert_string(ll a)
{
    vector<int> ans;
    ll b = a;
    while (b)
    {
        ans.push_back(b % 10);
        b /= 10;
    }
    return ans;
}

//vector<int> level(200005, 0);
//ll parent[200005][22];
//ll n, q;
//void dfs(int curr, int par, int h)
//{
//    level[curr] = h;
//    if (par != -1)
//    {
//        parent[curr][0] = par;
//    }
//    for (auto it : adj[curr])
//    {
//        if (it != par)
//        {
//            dfs(it, curr, h + 1);
//        }
//    }
//}
//void preprocess_lca()
//{
//    dfs(1, -1, 1);
//
//    for (int j = 1; j <= 21; j++)
//    {
//        //cout<<parent[i][0]<<" ";
//        for (int i = 1; i <= n; i++)
//        {
//            parent[i][j] = parent[parent[i][j - 1]][j - 1];
//            //  cout<<parent[i][j]<<" ";
//        }
//        //cout<<"\n";
//    }
//}
//
//void query(ll x, ll k)
//{
//    int cnt = 0;
//    while (k)
//    {
//        if (k & 1)
//        {
//            x = parent[x][cnt];
//        }
//        cnt += 1;
//        k = k >> 1;
//    }
//    if (x != 0)
//    {
//        cout << x << "\n";
//    }
//    else
////    {
////        cout << "-1\n";
////    }
////    return;
////}
vector<bool> prime;
void seive(int n)
{
    prime[0] = false;
    prime[1] = false;
    prime[2] = true;
    for (int i = 2; i * i <= n; i++)
    {
        if (prime[i])
        {
            for (int j = 2 * i; j <= n; j += i)
            {
                prime[j] = false;
            }
        }
    }
}

//int diameter = 0;
//vector<int> adj[200005];
//vector<int> dp1(200005, 0); //stores the value of max of l,r
//vector<int> dp2(200005, 0); //stores the value of 1+l+r
//void dfs_for_diameter(int curr, int par)
//{
//    vector<int> fvalues;
//    bool leaf = true;
//    for (auto it : adj[curr])
//    {
//        if (it == par)
//        {
//            continue;
//        }
//        leaf = false;
//        dfs_for_diameter(it, curr);
//        fvalues.push_back(dp1[it]);
//    }
//    if (leaf)
//    {
//        dp1[curr] = 0;
//        return;
//    }
//    sort(fvalues.begin(), fvalues.end());
//    dp1[curr] = 1;
//    if (!fvalues.empty())
//    {
//        dp1[curr] += fvalues.back();
//    }
//    if (fvalues.size() >= 2)
//    {
//        dp2[curr] = 2 + fvalues.back() + fvalues[fvalues.size() - 2];
//    }
//    diameter = max(diameter, max(dp1[curr], dp2[curr]));
//}
/*
int freq[26] = {0};
ll n, k;
string str;
ll even, odd;
bool check_bsa(int mid)
{
    ll ev = even, od = odd;
    for (int i = 0; i < k; i++)
    {
        if ((mid % 2) == 1)
        {
            if (od > 0)
            {
                od--;
                ev -= (mid - 1);
            }
            else
            {
                ev -= (mid + 1);
                od++;
            }
        }
        else
        {
            ev -= mid;
        }
    }
    if (ev < 0)
    {
        return false;
    }
    return true;
}
vector<int> convert_to_vec(string str)
{
    vector<int> v;
    for (auto it : str)
    {
        v.push_back(it - '0');
    }
    return v;
}


int vis[100005];
int dist[100005];
vector<pair<int,int>> adj[100005];
struct node
{
    int zero;
    int one;
};
*/
//ll sm;
//ll n,m,k;
//ll recur(ll i,ll k_aux,vector<ll> &weight)
//{
//    if(k_aux==k)
//    {
//        if(i==m)
//        {
//            return 1;
//        }
//        return 0;
//    }
//    ll pick=0,unpick=0;
//    for(int idx=i+1;i<n;i++)
//    {
//        pick+=((weight[idx]/sum)%mod)*(recur(idx+1,k_aux+1,weight))%mod)%mod;
//    }
//    pick+=((weight[idx]/sum)%mod)*(recur(idx,k_aux+1,weight))%mod)%mod;
//}
ll n,m,k;
vector<vector<vector<ll>>> dp;
vector<vector<ll>> r,d;
ll recur(int i,int j,int k)
{
    if(k==0)
    {
        return 0;
    }

    if(dp[i][j][k]!=-1)
    {
        return dp[i][j][k];
    }
    ll ans=LLONG_MAX;

    if(i-1>=0)
    {
        ans=min(ans,d[i-1][j]+recur(i-1,j,k-1));
    }
    if(i+1<n)
    {
        ans=min(ans,d[i][j]+recur(i+1,j,k-1));
    }
    if(j-1>=0)
    {
        ans=min(ans,r[i][j-1]+recur(i,j-1,k-1));
    }
    if(j+1<m)
    {
        ans=min(ans,r[i][j]+recur(i,j+1,k-1));
    }

    return dp[i][j][k]=ans;
}

void update(vector<ll> &fenwick,ll i,ll val)
{
    while(i<(int)fenwick.size())
    {
        fenwick[i]+=val;
        i+=(i&(-i));
    }
}
ll sum(vector<ll> &fenwick,ll i)
{
    ll sm=0;
    while(i>0)
    {
        sm+=(fenwick[i]);
        i-=(i&(-i));
    }
    return sm;
}
void solve()
{  
    ll n;
    cin>>n;
    ll res=0;
    while(n--)
    {
        string str;
        cin>>str;
        if(str=="++X"||str=="X++")
        {
            res+=1;
        }
        else
        {
            res-=1;
        }
    }
    cout<<res<<"\n";
}


int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
  #endif
    //FIO
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    //get_no_of_prime_divisors(prime_divisors_till, maxn);
    //ios::sync_with_stdio(false);
    //cin.tie(NULL); // Remove in problems with online queries!
    ll t;
    //scanf("%lld", &t);
    t = 1;
    //cin >> t;
    //vector<ll> val((int)1e6+7,0);
    //prime.resize(1000005,true);
    //seive(1000005);
    
    for (int i = 1; i <= t; i++)
    {
        
        //cout << "Case #" << i << ": ";
        solve();
    }

    return 0;
}
//std::fill(vec.begin(),vec.end(),1)
//dp me chote se bda leke jana h..
//An array d is a subarray of an array c if d can be obtained from c by deletion of
//several (possibly, zero or all)
//elements from the beginning and several (possibly, zero or all) elements from the end.

#include <iostream>
#include<iomanip>
#include<vector>
#include<math.h>
#include<string>
#include<algorithm>
#include<iomanip>
#include<unordered_set>
#include<unordered_map>
#include<stack>
using namespace std;

#include <bits/stdc++.h>



/*
PROBLEM :- Given the time in numerals  convert it into words :
eg: - time/words :-
             5:00 --> five o' clock
             5:01 --> one minute past five 
             5:10 --> ten minute past five 
             5:15 --> quarter past five
             5:30 --> half past five 
             5:40 --> twenty minutes to six
             5:45 --> quarter to six
             5:47 --> thirteen minutes to six
             5:28 --> twenty eight minute past five
 */







// void f(int h,int m){
//     unordered_map<int,string> um;

//     // Creating a big map
//     if(true){
//     um[1] = "one";
//     um[2] = "two";
//     um[3] = "three";
//     um[4] = "four";
//     um[5] = "five";
//     um[6] = "six";
//     um[7] = "seven";
//     um[8] = "eight";
//     um[9] = "nine";
//     um[10] = "ten";
//     um[11] = "eleven";
//     um[12] = "twelve";
//     um[13] = "thirteen";
//     um[14] = "fourteen";
//     um[15] = "quarter";
//     um[16] = "sixteen";
//     um[17] = "seventeen";
//     um[18] = "eighteen";
//     um[19] = "nineteen";
//     um[20] = "twenty";
//     um[21] = "twenty one";
//     um[22] = "twenty two";
//     um[23] = "twenty three";
//     um[24] = "twenty four";
//     um[25] = "twenty five";
//     um[26] = "twenty six";
//     um[27] = "twenty seven";
//     um[28] = "twenty eight";
//     um[29] = "twenty nine";
//     um[30] = "half";
//     }

//     if (m==0){
//         string ans = um[h]+" o' clock";
//         cout<<ans;
//         return;
//     }

//     if (m>0 && m<=30){
//         if (m==15){
//             string ans = "quarter past "+um[h];
//         cout<<ans;
//         return;
//         }
//         else if (m==30){
//             string ans = "half past "+um[h];
//         cout<<ans;
//         return;
//         }
//         else{
//             string ans = um[m]+" minutes past "+um[h];
//         cout<<ans;
//         return;
//         }
//     }
//     else{
//         m=60-m;
//         if (m==15){
//             string ans = "quarter to "+um[h+1];
//         cout<<ans;
//         return;
//         }
//         else{
//             string ans = um[m]+" minutes to "+um[h+1];
//         cout<<ans;
//         return;
//         }
//     }

// }

// int main()
// {
//     int h=1;
//     int m=1;
//     f(h,m);
//     return 0;
// // }
// void f(int n){
//     int c=0;
//     for (int i=1;;i+=2){
//         if (c==n){
//             break;
//         }
//         if(c%2!=0){
//         cout<<i+1<<" ";
            
//         }
//         else{
//             cout<<i<<" ";
//         }
//         c++;
//     }
//     cout<<endl;
// }

// void workbook(int n,int k,int arr[]){
//     int page =1 ;
//     int sp=0;
//     for (int i=0;i<n;i++){
//         bool f = false;
//         for(int j=1;j<=arr[i];j++){
//             cout<<"Chapter : "<<i+1<<" , Problem "<<j<<" on page no. "<<page<<endl; 
//             if (page==j){
//                 sp++;
//                 cout<<"yeahhhh"<<endl;
//             }
//             //c++;
//            if (j%k==0){
//                page++;
//                if (j==arr[i]){
//                    f=true;
//                }
//            }
//         }
//         if (!f){page++;}
       
//         cout<<endl; 
//     }
//     cout<<sp;
// }

// int main() {
//     int n =5;
//     int k=3;
//     int arr[]={4,2,6,1,10};
//     workbook(n,k,arr);
//     return 0;
// }



// int lis(int arr[],int n){
//     cout<<"This is called for an array "<<endl;
//     int ans = INT16_MIN;
//     int c= 1;
//     for (int i=1;i<n;i++){
//         if (arr[i]>=arr[i-1]){
//             c++;
//             cout<<c<<endl;
//             ans  = max(ans,c);
//         }
//         else{
//             c=1;
//         }
//     }
//     return ans;
// }

// int main() {
// 	// your code goes here
// 	int t;
// 	cin>>t;
// 	while(t--){
// 	    int n,m;
// 	    cin>>n>>m;
// 	    int arr1[n],arr2[m];
//         cout<<"enter for array 1 "<<endl;
// 	    for (int i=0;i<n;i++){
// 	        cin>>arr1[i];
// 	    }
//         cout<<"enter for array 2 "<<endl;

// 	    for (int i=0;i<m;i++){
// 	        cin>>arr2[i];
// 	    }
// 	    // longest non-decreasing subsequence in both the arrays combined (elements order same)
// 	    cout<<lis(arr1,n)+lis(arr2,m)<<endl;
// 	}
// 	return 0;
// }


// void flatlandSpaceStations(int n, vector<int> c) {
//     unordered_set <int> s(c.begin(),c.end());
//     int m;
//     int ans = INT16_MIN;
//     for (int i=0;i<n;i++){
//         cout<<"for city "<<i;
//         if (s.find(i)!=s.end()){
//             m=0;
//              if (m>ans){
//             ans = m+1;
//         }
//         continue;
//         }
//         int l,r,j;
//         for ( j=i+1;j<n;j++){
//             if (s.find(j)!=s.end()){
//                 break;
//             }
//             //r++;
            
//         }
//         r = j-i;
        
//         cout<<" , right closest space station is at "<<r<<" distance";
//         for ( j=i-1;j>=0;j--){
//             if (s.find(j)!=s.end()){
//                 break;
//             }
//             //l++;
//         } 
//         l =  i-j;
//         cout<<" , left closest space station is at "<<l+1<<" distance";

//         if (r<l){
//             m=r;
//         }
//         else{
//             m=l;
//         }
//         cout<<"So nearest is at distance : "<<m<<endl;
//         if (m>ans){
//             ans = m+1;
//         }    
//     }
    
//     cout<<"final answer is --> "<<ans;

// }

// int maxvac_before_removing(char arr[],int n,int x){
//     int c=0;
//     int z=0;
//     for (int i=0;i<n;i++){
//         if (arr[i]=='0'){
//             z++;
//             if (z%x==0){
//                 c++;
//                 cout<<"abhi c is : "<<c<<endl;
//             }
//         }
//         else{
//             z=0;
//         }
//     }
//     return c;
// }

// // int main(){
// //     int t;
// //     cin>>t;
// //     while(t--){
// //         int ans = INT16_MIN;
// //         int n,x;
// //         cin>>n>>x;
// //         int arr[n];
// //         vector <int> ones;
// //         for (int i=0;i<n;i++){
// //             // 0 or 1 only
// //            cin>>arr[i];
// //            if (arr[i]==1){
// //                ones.push_back(i);
// //            }
// //         }
// //         // now removing ones one-by-one.
// //         for (auto x:ones){
// //             arr[x]=0;
// //             ans = max(ans,maxvac(arr,n,x));
// //             arr[x]=1;
// //         }
// //         cout<<"my answer is : ";
// //         cout<<ans;
// //         //cout<<x-1<<" "<<x<<" "<<x+1<<endl;
// //     }
// //     return 0;
// // }

// int main(){
//     string a;
//     int x;
//     cout<<"Enter the binary string : "<<endl;
//     cin>>a;
//     cout<<"Enter x : "<<endl;
//     cin>>x;  
//     char arr[a.size()];
//     for (int i=0;i<a.size();i++){
//         arr[i] = (a[i]);
//     }
//     int ans=0;
//     vector <string> st;
//     ans+=maxvac_before_removing(arr,a.size(),x);
//     cout<<"abhi answer is : "<<ans<<endl;

//     if ((a.size() - ans*x)>=x)
//     {
//     string s="";
//     for (int i=0;i<x;i++){
//         s+="0";
//     }
//     for(int i=0;i<s.size();i++){
//         s[i]='1';
//         st.push_back(s);
//         s[i]='0';
//     }
//     for (int i=0;i<st.size();i++){
//         if (a.find(st[i])){
//             cout<<"mila sala"<<endl;
//             ans++;
//             break;
//         }
//     }
//     }

// cout<<"final answer is  : "<<ans;
//     }

// vector <int> next_city(vector <int> ce,int n){
//     //int arr[n];
//     unordered_set <int> c(ce.begin(),ce.end());
//     vector <int> vec;
//     stack <int> s;
//     // I am doing some preprocessing for the first element i have in my hand
//     vec.push_back(-1);
//      if (c.find(n-1)!=c.end()){
//             s.push(n-1);
//         }

    
//     //s.push(-1);
//     for (int i=n-2;i>=0;i--){
//         if (s.empty()){
//             vec.push_back(-1);
//         }
//         else{
//             vec.push_back(s.top());
//         }
//         if (c.find(i)!=c.end()){
//             s.push(i);
//         }
//     }
//     // printing the answer vector 
//     reverse(vec.begin(),vec.end());
//    //return vec;
//   return vec;

// }
 
// vector <int> prev_city(vector <int> ce,int n){
//     //int arr[n];
//     unordered_set <int> c(ce.begin(),ce.end());
//     vector <int> vec;
// stack <int> s;
//     // I am doing some preprocessing for the first element i have in my hand
//     vec.push_back(-1);
//      if (c.find(0)!=c.end()){
//             s.push(0);
//         }

    
//     //s.push(-1);
//     for (int i=1;i<n;i++){
//         if (s.empty()){
//             vec.push_back(-1);
//         }
//         else{
//             vec.push_back(s.top());
//         }
//         if (c.find(i)!=c.end()){
//             s.push(i);
//         }
//     }
//     // printing the answer vector 
//    return vec;

// }



//  int f(vector <int> c,int n){
//      vector  <int> prevs = prev_city(c,n);
//      vector  <int> nexts = next_city(c,n);
//      unordered_set <int> s(c.begin(),c.end());
//      int ans = INT16_MIN;
//      for (int i=0;i<n;i++){
//         int p = ((prevs[i]==-1)?0:i-prevs[i]);
//         int q = ((nexts[i]==-1)?0:nexts[i]-i);
//         if (s.find(i)!=s.end()){
//             p=0;
//         }

//          ans = max(ans,min(p,q));
//          cout<<"answer is currently : "<<ans<<endl;
//     }
//     cout<<endl;
//     return ans;
//  }



// int main(){

//     // // taking inputs 
//     // int n;
//     // cin>>n;
//     // // how many cities have space stations
//     // int no_c;
//     // cin>>no_c;
//     // vector <int> c;
//     // for (int i=0;i<no_c;i++){
//     //     int x;
//     //     cin>>x;
//     //     c.push_back(x);
//     // }

//     // // calling the solution function 
//     // f(c,n);



//     vector <int> c;
//     c.push_back(1);
//     c.push_back(6);
//     c.push_back(10);
//     c.push_back(11);
//     c.push_back(13);
    


//     cout<<f(c,20);

//     return 0;
// }

// 6
// 3 5
// 380
// 3 9
// 380
// 4 2
// 0123
// 5 13
// 78712
// 6 10
// 051827
// 8 25
// 37159725


// void f(string s,int n,int k){
//     int arr[n];
//     for (int i=0;i<n;i++){
//        // int curr_num = stoi(s[i]);
//         char x = s[i];    
//         int curr_num = (int)x  - 48;    
//         int curr_diff = (10 - curr_num)%10;
//         arr[i] = curr_diff;
//     }

//     for (int i=0;i<n;i++){
//         cout<<arr[i]<<" ";
//     }
//     cout<<endl;
//     int max_z = 0;
//     // if (arr[0]>k){
//     //     cout<<0
//     // }
//     for (int i=0;i<n;i++){
//          k=k-arr[i];
//          cout<<"k is : "<<k<<endl;
//         if (k<0){
//              break;
//         }
//         else{
//            // k=k-arr[i];
//             //cout<<"k is "<<k<<endl;
//             max_z++;
//             //cout<<"max_z is  "<<max_z<<endl;
//         }
//     }
//     cout<<max_z<<endl;
    
// }


// int main() {
//     //  int t;
//     //  cin>>t;
//     //  while(t--){
//     //      int n,k;
//     //      cin>>n>>k;
//     //      string s;
//     //      cin>>s;
//     //      f(s,n,k);
//     //  }   


//     // string s="184601";
//     // char x = s[4];
//     // cout<<(int)s[3] - 48;



//     return 0;

// // }
// bool sortbysec(const pair<int,int> &a,
//               const pair<int,int> &b)
// {
//     return (a.second < b.second);
// }

//  void activitySelection(vector<int> start, vector<int> end, int n)
//     {
//         vector  <pair <int,int> > v;
//         for (int i=0;i<n;i++){
//             v.insert(make_pair(start[i],end[i]));
//         }
//         sort(v.begin(), v.end(), sortbysec);
//         int ans =1;
//         //start[i]>=end[i-1]
//         for (int i =1 ;i<n;i++){
//             if (v[i].first>=v[i-1].second){
//                 ans++;
//             }
//         }
//         cout<<ans;
//         // Your code here
//     }


// void ispar(string x)
//     {
//         stack <char> s;
//         for (int i=0;i<x.size();i++){
//             char c=x[i];
//             cout<<"abhi "<<c<<" pkda h :"<<endl;
//             if (c=='(' || c=='{' || c=='['){
//                 cout<<"adding "<<c<<" to the stack"<<endl;
//                 s.push(c);
//             }
//             else {
//                 cout<<"upar vala abhi "<<s.top()<<endl;
//                 if (c!=s.top()){
//                     cout<<"ni h bhai ";
//                     break;
//                 }
//                 else{
//                     s.pop();
//                 }
//             }
//         }
//         cout<<"Congrats";
//         // Your code here
//     }
//     int main(){
//     // string a ="adv";
//     // cout<<reverse(a.begin(),a.end());
//     string a = "{([])}";
//     ispar(a);
//         return 0;
//     }

// stack <int> aux;

// void _getMinAtPop(stack<int>s)
// {
//     while(!s.empty())
// {    if (s.top()==aux.top()){
//         int res = s.top();
//         //s.pop();
//         aux.pop();
//         cout<<res<<" ";
//     }
//     else{
//         cout<<aux.top()<<" ";
//         //s.pop();
//     }
//     s.pop();
// }
//     // your code here
// }

// int main(){
//     stack <int> s;
//     aux.push(1);
//     s.push(1);
//     s.push(2);
//     s.push(3);
//     s.push(4);
//     s.push(5);

//     _getMinAtPop(s);
//     return 0;
// // }

// bool f(int arr[],int k,int n,int H){
//     int hr=0;
//     for (int i=0;i<n;i++){
//        if (arr[i]<=k){
//             hr++;}
//             else{
//                 int x = arr[i]/k;
//                 int m = arr[i]%k;
//                 hr+=(x+m);
//             }
//     }
//     return hr<=H;
// }

// int main(){
//     int t;
//     while(t--){
//         int n,h;
//         cin>>n>>h;
//         for (int i=0;i<n;i++){
//             cin>>arr[i];
//         }
//         sort(arr,arr+n);
//         int l=1,h=1e9;
//         while(l<h){
//             int mid = (l+h)/2;
//             if (f(arr,mid,n,h)){
//                 h=mid;
//             }
//             else{
//                 l=mid+1;
//             }
//         }
//         // either my answer is h banana/hr or l banana/hr
//         if (f(h)){
//             cout<<h<<endl;
//         }
//         else{
//             cout<<l<<endl;
//         }
//     }
//     return 0;
// }






// BINARY SEARCH PROBLEM: 
//   int preced(char x){
//         if (x=='+'|| x=='-'){
//             return 1;
//         }
//         else if(x=='*' || x=='/'){
//             return 2;
//         }
//         else if (x=='^'){
//             return 3;
//         }
//         else if (x=='('){
//             return 0;
//         }
//     }
    
//     void infixToPostfix(string s)
//     {
//         stack <char> st;
//         string ans="";
//         for (auto c:s){
//             cout<<"Evaluating for "<<c<<" : "<<endl;
//             if (((int)c>=(int)'a' && (int)c<=(int)'z') || ((int)c>=(int)'A' && (int)c<=(int)'Z')){
//                 ans+=c;
//                 cout<<ans<<endl;
//             }
//             else{
//                 // operator found 
//                 if (st.empty()){
//                     cout<<"pushing "<<c<<" to the stack"<<endl;
//                     st.push(c);
//                    continue;
//                 }
                
//                 if (c=='('){
//                     cout<<"pushing "<<c<<" to the stack"<<endl;
//                     st.push(c);
//                     continue;
//                 }
//                 else if (c==')'){
//                     while(st.top()!='('){
//                         cout<<"ise nikalde" <<endl;
//                         ans+=st.top();
//                         cout<<"curr answer : "<<ans<<endl;
//                         st.pop();
//                     }
//                     st.pop();
//                     continue;
//                 }
                
//                 while( (st.empty()==false) && (preced(c)<=preced(st.top()))){
//                     ans+=st.top();
//                     cout<<"curr answer : "<<ans<<endl;
//                     st.pop();
//                 }

//                 cout<<"pushing "<<c<<" to the stack"<<endl;
//                 st.push(c);
//             }
//         }
//         while(!st.empty()){
//             ans+=st.top();
//             st.pop();
//         }
//         cout<<"final answer :"<<ans;
//         // Your code here
//     }


//     int main(){
//         // string a = "A*(B+C)/D";
//         // infixToPostfix(a);
//         int i =657;
//         cout<<static_cast<char>(i); 
//         return 0;
//     }








// int main(){
    
//     //cin>>x;
// int x=128;
//     // for (int x= 2;x<100000000;x++);
//     long long co=0;
//     long long a=0;
//     long long b=0;
//     long long c=0;

//     for (int i=0;i<29;i++){
//         long long j = pow(2,i);
//         if (x&j){
//             if (co==0){
//                 //cout<<"c is "<<co<<endl;
//             a+=j;
//             c+=j;
//             }
//             if (co==1){
//                 //cout<<"c is "<<co<<endl;
//             //a+=j;
//             b+=j;
//             c+=j;}
//             if (co==2){
//                 //cout<<"c is "<<co<<endl;

//             b+=j;
//             a+=j;
//             }
//         }
//         else{
//             if (co==2 && i<x && x<100){
//                 //cout<<"c is "<<co<<endl;
//             a+=j;
//             //c+=j;
//             }
//             if (co==1 && i<x && x<100){
//                 //cout<<"c is "<<co<<endl;
//             //a+=j;
//             b+=j;}
//            // c+=j;}
//             if (co==0&& i<x && x<100){
//                 //cout<<"c is "<<co<<endl;

//             c+=j;}
//            // a+=j;}
//         }
//         co=(co+1)%3;
//         }
    

//     cout<<" my answer is :"<<a<<" , "<<b<<" , "<<c<<endl;
//     cout<<"a|b|c : "<<(a|b|c)<<endl;
//     cout<<" proper answer : "<<((a|b)&(b|c)&(c|a))<<endl;
    
   

//  return 0;
//     }






//  static f(Item a,Item b){
//         return (a.weight/a.value) > = (b.weight/b.value)
//     }
//     double fractionalKnapsack(int W, Item arr[], int n)
//     {
//         sort(arr,arr+n,f);
//         // Your code here
//     }

// int main(){

//     int n = 5;
//     int sum= 12;
//     if (sum>9*n){
//             cout<< "-1";
//             return 0;
//         }
//         int arr[5];
//         for (int i=0;i<n;i++){
//             arr[i]=9;
//         }
//          for (int i=0;i<n;i++){
//             cout<<arr[i];
//         }
//         cout<<endl;
//         int hatane = (9*n - sum)/9;
//         cout<<"itne hatane h :"<<hatane<<endl;
//         int lim = n-hatane;
//         int i;
//         for (i=n-1;i>=lim;i--){
//             arr[i]=0;
//         }
//         cout<<" 0 bnane k bad "<<endl;
//         for (int i=0;i<n;i++){
//             cout<<arr[i];
//         }
//         cout<<endl;
//         cout<<"last change to i on : "<<i<<endl;
        
//         int diff = (9*lim - sum);
//         cout<<"diff is  : "<<diff<<endl;

//         arr[i] = 9-diff;
        
//         string ans="";
//         for (int i=0;i<n;i++)
//         {
//             ans+=to_string(arr[i]);
//             cout<<ans<<endl;
//         }
//             cout<<"final anser : "<<ans<<endl;

//     return 0;
// }




int main(){
    int n;
    cin>>n;
    vector <string> v(n);
    for (int i=0;i<n;i++){
        cin>>v[i];
    }
    int x=0;
    for (int i=0;i<n;i++){
        if (v[i][0]=='+' || v[i][1]=='+' || v[i][2]=='+'){
            x++;
        }
        else{
            x--;
        }
    }

    cout<<x;
    return 0;
}

#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define ld long double
#define __test ll _tc;cin>>_tc;while(_tc--)
#define an "\n"
#define nl cout<<an
#define yes cout<<"YES"<<an
#define no cout<<"NO"<<an
#define ms1 cout<<-1<<an
#define zr0 cout<<0<<an
#define FULL_THROTTLE ios::sync_with_stdio(0); cin.tie(0);cout.tie(0);
#define mod7 1000000007
#define modlu 998244353
#define pb push_back
#define srtf(x_) sort(x_.begin(),x_.end())
#define srtb(x_) sort(x_.begin(),x_.end(),greater<int>())
#define print(__v) for(int __i=0;__i<__v.size();++__i){ cout<<__v[__i]<<" ";}

const int mod=1e9+7;





int getDifferentNumber2(vector<int>&arr) {
      
    int n=arr.size();
    vector<int> b;
    for(int i=0;i<n;i++){
    	b.push_back(arr[i]);
	}
	sort(b.begin(),b.end());
    for (int i=0;i<n;i++) {
      if(b[i]!=i){
        return i;
      }
    }
    return n;
  }


bool is_prime(int num_){
    
     if (num_<=1){
        return false;
    }
    if(num_<=3){
        return true;
    }
    else if(num_%2==0||num_%3==0){
        return false;
    }
    else{
        for(int i=5;i*i<=num_;i+=6){
            if(num_%i==0||num_%(i+2)==0){
                return false;
            }
        }
    }
    return true;
}

bool palin(int arr[],int n){
   
    int flag = 0;
 
    for (int i = 0; i <= n / 2 && n != 0; i++) {
 
        
        if (arr[i] != arr[n - i - 1]) {
           return false;
        }
        return true;
}
}

bool ispow(int y, int x){
    
    int res1 = log(y) / log(x);
    double res2 = log(y) / log(x); 
    return (res1 == res2);
}

static bool srtb2(const pair<int,int> &a,const pair<int,int> &b)
{
    if (a.first < b.first)return false;
    else if (a.first > b.first)return true;
    return a.second < b.second;
}




ll fact(ll n)
{
      if(n==0)
      return 1;
    ll res = 1;
    for (ll i = 2; i <= n; i++)
        res = res * i;
    return res;
}

ll ncr(ll nn,ll mm){
        return (fact(nn)/(fact(nn-mm)*fact(mm)));
}

void prt(ll val,vector<ll>&mul)
{
    
    for (ll i=1; i<=sqrt(val); i++)
    {
        if (val%i == 0)
        {
        
            if (val/i == i)
                mul.push_back(i);
 
            else{
                   mul.push_back(i);
                   mul.push_back(val/i);
            } 
               
        }
    }
}


int cntsubstr(string& str, string& sub)
{
    if (sub.length() == 0) return 0;
    int count = 0;
    for (size_t offset = str.find(sub); offset != std::string::npos;
     offset = str.find(sub, offset + sub.length()))
    {
        ++count;
    }
    return count;
}
ll cntdiv(ll n)
{
   ll cnt = 0;
    for (ll i = 1; i <= sqrt(n); i++) {
        if (n % i == 0) {
            // If divisors are equal,
            // count only one
            if (n / i == i)
                cnt++;
 
            else // Otherwise count both
                cnt = cnt + 2;
        }
    }
    return cnt;
}


int rev(int x)
{
	int y=0;
	for(int i=0;i<8;i++)
		if((x>>i)&1)y^=(1<<(7-i));
	return y;
}
#define ull unsigned long long
 
ull facto(int N)
{
 
   
    ull f = 1; 
 
    
    for (ull i = 2; i <= N; i++)
        f = (1LL*f*i)%1000000007;
 
    return f;
}
bool cp(unsigned long long n)
{
    unsigned long long reverse = 0;
    unsigned long long temp = n;
    while (temp != 0) {
        reverse = (reverse * 10) + (temp % 10);
        temp = temp / 10;
    }
    return (reverse == n); 
}

bool cmp(const std::string& a, const std::string& b)
{
    return (a.size() > b.size()); 
}
ll mo(string num, ll aa)
{
    // Initialize result
    ll res = 0;
 
    // One by one process all digits of 'num'
    for (ll i = 0; i < num.length(); i++)
        res = (res * 10 + num[i] - '0') % aa;
 
    return res;
}

bool cmp2(const pair<ll,string>&a, const pair<ll,string>&b)
{
    if(a.first==b.first) return (b.second < a.second);
}
string addStrings(string x, string y) {
        string ans="";
        int flag=0;
        int i;
        string str1="";
        int j=0;
        while(x[j]=='0'){
            j++;
        }
        while(j<x.size()){
            str1+=x[j];
            j++;
        }
        string str2="";
        j=0;
        while(y[j]=='0'){
            j++;
        }
        while(j<y.size()){
            str2+=y[j];
            j++;
        }
        i=str1.size()-1,j=str2.size()-1;
        if(str1.size()==0 and str2.size()==0){
            return "0";
        }
        while(i>=0 or j>=0){
            if(i>=0 and j>=0){
                int r=(str1[i]-'0')+(str2[j]-'0');
                r+=flag;
                flag=r/10;
                string res=to_string(r%10);
                ans+=res;
                i--;
                j--;
            }
            else if(j>=0){
                int r=(str2[j]-'0')+flag;
                flag=r/10;
                ans+=to_string(r%10);
                j--;
            }
            else if(i>=0){
                int r=(str1[i]-'0')+flag;
                flag=r/10;
                ans+=to_string(r%10);
                i--;
            }
        }
        if(flag>0){
            ans+=to_string(flag);
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }

bool is_sbsq(string child,string parent,int m,int n)
{
 
    if (m == 0)
        return true;
    if (n == 0)
        return false;
 
  
    if (child[m - 1] == parent[n - 1])
        return is_sbsq(child, parent, m - 1, n - 1);
 
    
    return is_sbsq(child, parent, m, n - 1);
}

ll f(string &s,char ch){
	if(s.size()==1){
		if(s[0]!=ch) return 1;
		return 0;
	}
	ll mid=s.size()/2;
	string str1=s.substr(0,mid);
	string str2=s.substr(mid);
	ll cnt1=f(str1,ch+1)+(mid-count(s.begin()+mid,s.end(),ch));
	ll cnt2=f(str2,ch+1)+(mid-count(s.begin(),s.begin()+mid,ch));
	return min(cnt1,cnt2);
}

bool isValid(string s) {
       stack<char>st;
        for(int i=0;i<s.size();++i){
            if(s[i]=='('||s[i]=='{'||s[i]=='[')
                st.push(s[i]);
            
            else
            {
                if(st.empty())
                   return 0;
                    char x=st.top();
                    st.pop();
                    if(s[i]==')'&& x=='('||s[i]=='}' && x=='{' || s[i]==']' && x=='['){
                       continue;
                }
                else
                    return 0;        
            
        }
            }
        
        if(st.empty())
            return true;
        
        else return 0;
        
    }
    
bool palin(string arr){
   
    int n = arr.size();
    int flag = 0;
 
    for (int i = 0; i <= n / 2 && n != 0; i++) {
 
        
        if (arr[i] != arr[n - i - 1]) {
           return false;
        }
        return true;
}
}

void mr_kamran(){
    
ll n;
cin>>n;
ll x = 0;
for(int i = 0;i<n;++i)
{
    string s;
    cin>>s;
    if(s[0]=='+'||s[s.size()-1]=='+') x++;
    else x--;
}
cout<<x<<an;

}
int main(){
    
FULL_THROTTLE
//freopen("input.txt", "r", stdin);
//freopen("output.txt", "w", stdout);

//__test{
   
  mr_kamran();   
//}

	return 0;
}

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<ll> v;
#define loop(i,n) for(int i =0;i<n;i++);
typedef deque<int> de;

void mediumNum(int num[]){
    for(int i=0;i<3;i++){
        int max=*max_element(num,num+3);
        int min=*min_element(num,num+3);
        if (max!=num[i]&& min!=num[i]){
            cout<<num[i]<<endl;

        }
    }
}

void atilla () {
    char letters[] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',
                      't', 'u', 'v', 'w', 'x', 'y', 'z'};
    int si=sizeof (letters)/sizeof (letters[0]);


        int size;
        cin >> size;
        int const s = size;
        string word;
        cin >> word;
        int j;
        int i;
        int temp;
        int arr[s];
        int t;

        for ( i = 0; i < s; i++) {
            for ( j = 0; j < si; j++) {
                if (word[i] == letters[j] ) {
                    temp = j;
                }
            }
            t=temp + 1 ;
        }

        for(int k=0;k<s;k++) {
            arr[k] = t;
        }
        int max = *max_element(arr, arr + s);
        cout<<max<<endl;
    }

void atilla2(string word){
    int max1 = INT64_MIN;
    for(char x : word)
    {
        int temp = x - 96;
        max1 = max(max1, temp);
    }
    cout << max1 << endl;
}

void watermelon(int w) {

    if(w%2==0 && w!=2){
        cout<<"YES";
    }
    else{
        cout<<"NO";
    }

}

void VanyaAndFence(int const n,int h,const int friends[]){
    int const w=2; //width of the road
    int const v=1;
    int x=0;
    int y=0;
    int r=0;
    for(int i=0; i<n;i++){
        if(friends[i]>h){
            x+= w;
        }
        else if (friends[i]<=h){
          y+=  v;
        }

         r= x+y;

    }
    cout<<r;



}

void beautifulMatrix(int matrix[5][5]){
    int I;
    int J;
    int r;
    //searching for the 1 in the matrix
    for (int i = 0; i <5; i++) {
        for(int j=0;j<5;j++) {
            if (matrix[i][j]==1){
                I=abs(2-i);
                J=abs(2-j);
                r=I+J;
            }
        }
    }
    cout<<r;
}

void gravitySwitch(int box[],int n){
    for(int i=0;i<n;i++){
        for(int j=i+1;j<n;j++){
            if(box[i]>box[j]){
                swap(box[i],box[j]);
            }
        }
    }
}

void printing(int v[], int size) {
    for (int i = 0; i < size; i++) { //printing the array
        cout << v[i] << " ";

    }
}  //important

void bitIncrement( string x,int n ){
    //it has to be in the main in the same for loop of the cin>>string
    int X=0;
for(int i=0;i<n;i++){
    if (x == "X++" || x == "++X") {
        X++;
    } else {
        X--;
    }
}
cout<<X;

}

void boyOrGirl(string username) {
    unordered_set<char>s;
    for (int i = 0; i < username.size(); i++) {
        s.insert(username[i]);
    }
    int size = s.size();
        if (size % 2 == 0 ) {
            cout << "CHAT WITH HER!";

        } else {
            cout << "IGNORE HIM!";
        }
    }

void assignments(){
     int n;
     cin>> n;
     string level;
     int count=0;
     for(int i=0;i<n;i++) {
         cin >> level;
         if (level[1]=='1'){
             count+=1;
         }
         else if (level[1]=='2'){
             count+=2;
         }
         else if(level[1]=='3'){
             count+=3;
         }

     }
     cout<<count;
}

void sushi(){
    int harsha[10];
    int hiba[10];
    int alain[10];
    int sizeHarsha= sizeof(harsha)/sizeof(harsha[0]);
    int sizeHiba= sizeof(hiba)/sizeof(hiba[0]);
    int sizeAlain= sizeof(alain)/sizeof(alain[0]);
    for(int i=0;i<sizeHarsha;i++) {
        cin >> harsha[i];
    }
    for(int i=0;i<sizeHiba;i++){
        cin>>hiba[i];
    }
    for(int i=0;i<sizeAlain;i++){
        cin>>alain[i];
    }
    int i;
    int j;
    int k;

    for(i=0; i<sizeHarsha;i++){
    for(j=0; j<sizeHiba;j++) {
        for (k = 0; k < sizeAlain; k++) {
            if (harsha[i] == hiba[j] == alain[k]) {
                cout << harsha[i];
            } else {
                cout << "Nothing in common";
            }
        }
    }}


}

void weight(){
    int test;
    cin>>test;

    int weight;
    int height;
    while(test--) {
        cin >> weight;
        cin >> height;

        double heightm = (double) height / 100;
        double BMI = weight / (heightm * heightm);
        if (BMI < 18.5) {
            cout << "Underweight" << endl;
        }  if (18.5 <= BMI <= 24.9) {
            cout << "Healthy Weight" << endl;
        }  if (25 <= BMI <= 29.9) {
            cout << "Overweight" << endl;
        }  if (BMI >= 30) {
            cout << "Obese" << endl;
        }
    }

}

int GCD(int x,int y){   //important
    int result= min(x,y);
    for(int i=result;i>0;i--){
        if(x%result == 0 && y%result==0){
            break;
        }
    }
    return result;
} //important

void bestie(vector <int> a, int n) {

    int test;
    cin >> test;

    while (test--) {
        //code here
        //5 10 15 20
        //1  2  3  4
        int n;
        cin >> n;

        vector <int> a(n);
        int gcd = 0;

        for (int i = 0; i < n; i++) {
            cin >> a[i];
            gcd = __gcd(gcd, a[i]);

        }
        if (gcd == 1) {
            cout << 0 << endl;
        } else {
            int count1;
            int gcd2;
            for (int i = n - 1; i >= 0; i--) {
                gcd2 = __gcd(a[i], i + 1);
                if (__gcd(gcd, gcd2) == 1) {
                    count1 = n - i;
                    break;
                }
            }


            //150 90 180 120 60 30
            int count = 0;
            int gcd3 = gcd;
            for (int i = n - 1; i >= 0; i--) {
                a[i] = __gcd(a[i], i + 1);
                gcd3 = __gcd(gcd3, a[i]);
                count += n - i;
                if (gcd3 == 1) {
                    break;
                }
            }
            cout << min(count, count1) << endl;

        }
    }

}

void expo(){
    int test;
    cin>>test;
    while(test--){
        int x,y;
        cin>>x>>y;
        int income = pow(2,y);
        while(x--){
            income/=2;

        }
        cout<<income<<endl;

    }
}

void makeAP(){
    int test;
    cin>>test;
    while(test--){
        int x,y;
        cin>>x>>y;
        bool a=false;
        for(int i=x;i<=y;i++){
            if(i-x==y-i){
                a=true;
                cout<<i<<endl;

            }

        }
        for(int i=x;i<=y;i++){
            if(i-x!=y-1 && !a){
                cout<<"-1"<<endl;
                break;
            }
        }

    }
}

void third(){
    int test;
    cin>>test;
    while(test--){
        int n,x,c;
        cin>>n>>x>>c;
        int* a=new int[n];
        for(int i=0;i<n;i++){
            cin>>a[i];

        }
        int count = 0;
        int sum=0;
        for(int i=0;i<n;i++) {
            int avg = x - a[i];
            if (avg > c) {
                sum= sum+ x;
                count++;
            }
            else{
                sum+=a[i];
            }
        }

        cout<<sum-(c*count)<<endl;
    }

}

void ReachFast(){
    int test;
    cin>>test;
    while(test--) {
        int x, y, z;
        cin >> x >> y >> z;
        int diff = max(x, y) - min(x, y);
    int n = (diff / z);
    int m = diff % z;
    if(diff<z &&diff!=0){
        cout<<1<<endl;
    }
    else {
        cout << n<<m  << endl;
    }
}
}

 int deleteElement(int arr[], int n, int x){ //important
// Search x in array
    int i;
    for (i=0; i<n; i++)
        if (arr[i] == x)
            break;

// If x found in array
    if (i < n)
    {
        // reduce size of array and move all
        // elements on space ahead
        n = n - 1;
        for (int j=i; j<n; j++)
            arr[j] = arr[j+1];
    }

    return n;
} //important

void hossamCombination(){
    ll n;
    cin>>n;
    auto* a= new ll[n];
    for(ll i=0;i<n;i++){
        cin>>a[i];
    }

    ll count = 0;
    ll count2=0;
    ll max = *max_element(a, a+n);
    ll min = *min_element(a, a+n);

    for(ll i=0;i<n;i++){
        if(max==a[i]){
            count =count+1;
        }
        if(min==a[i]){
            count2=count2+1;
        }
    }


    if(max==min){
        ll x= n*(n-1);
        cout<<(ll)x<<endl;
    }

    else{
        cout<<(ll)count2*count*2<<endl;
    }


}

int check (int x){
    int count=1;
    while(((x/2)&1)==(x&1)){
        count++;
        x/=2;
    }
    return count;
} //important

void devideconquer(){
    int sum=0;
    int count;
    int ans= 2e9;
//    for(int i =1;i<=n;i++){
//        cin>>a[i];
//        sum+=a[i];
//    }
//    if(sum&1){
//        for(int i =1;i<=n;i++){
//            ans=min(ans,check(a[i]));
//        }
//        cout<<ans<<endl;
//
//    }
//    else {
//        puts("0");
//    }
}

void incinerate(){
    int n,k;
    cin >> n>>k;
    vector <pair<int,int>> ms (n);
    int h;
    int p;

    for(int i=0;i<n;i++){
        cin>>ms[i].second;
    }

    for(int i=0;i<n;i++){
        cin>>ms[i].first;}

    sort(ms.begin(),ms.end());
    int dmg =k;

    for (int i = 0; i < n && k > 0; i++) {
        h= ms[i].second;
        p=ms[i].first;
        while(k>0 && h>dmg){
            k-=p;
            dmg+=k;
        }
    }
    if(k<=0){
        cout <<"NO"<<endl;
    }
    else{
        cout<<"YES"<<endl;
    }
}

void absmaxi(){
    int n;
    cin>>n;
    vector <int> dic(n);
    for(int i=0;i<n;i++){
        cin>>dic[i];

    }
    int max = dic[0];
    int min = dic[0];
    for(int i=0;i<n;i++) {
        max|= dic[i];
        min&=dic[i];
    }
    int tl = max-min;

    cout<<tl<<endl;


}

bool isPrime(int n)
{
    // Corner case
    if (n <= 1)
        return false;

    // Check from 2 to n-1
    for (int i = 2; i < n; i++)
        if (n % i == 0)
            return false;

    return true;
}

void strangerThings(){
    ll n;
    cin>>n;
    const ll x = n;
    const ll y = n;
    ll a [x][y];
    ll ans;
    ll result=0;
    ll temp [x][y];
    for(int i=0;i<=x;i++){
        for(int j=0;j<=x;j++){
            ans = i*j;
            a[i][j]=ans;

            if(a[i][j+1]>a[i+1][j]){
                result+=a[i][j+1];
            }
            else{
                result+=a[i+1][j];
            }
            cout<<(result)<<endl;
        }
    }
}

void AddMinusSign(int n, int x){
}


    int main() {
    //freopen("Weightbonus.in","r",stdin);
//int t;
//cin>>t;
//while(t--){
int n;
cin>>n;
string x;
    int X=0;
    for(int i=0;i<n;i++) {
cin>>x;
        if (x[1] == '+') {
            X ++;
        } else
            X --;

    }
    cout<<X;


  return 0;
    }

#include <iostream>
#include <string>
#include <cmath>
#include <stdio.h>
using namespace std;
void row(int x[][10],int m,int n,int size)
{

	for(int i=0;i<size;i++)
	{	int t=x[m-1][i];
	    x[m-1][i]=x[n-1][i];
	    x[n-1][i]=t;
	 }

}
void col(int x[][10],int m,int n,int size)
{

	for(int i=0;i<size;i++)
	{int t=x[i][m-1];
	    x[i][m-1]=x[i][n-1];
	    x[i][n-1]=t;

	}

}
void inc(int x[][10], int size) {

	for (int i = 0; i < size; i++) {
		for (int k = 0; k < size; k++) {
			x[i][k] = (x[i][k] + 1) % 10;
		}
	}

}
void dec(int x[][10], int size) {
	for (int i = 0; i < size; i++) {
		for (int k = 0; k < size; k++) {
			x[i][k] = x[i][k] - 1;
			if (x[i][k] == -1)
				x[i][k] = 9;
		}
	}
}
void tra(int x[][10], int size) {
	int y[10][10];
	for (int i = 0; i < size; i++) {
		for (int k = 0; k < size; k++) {
			y[i][k] = x[i][k];
		}
	}
	for (int i = 0; i < size; i++) {
		for (int k = 0; k < size; k++) {
			x[k][i] = y[i][k];
		}
	}
}
void clock(long long y[][35],long long n,long long t)
{
	long long z[35][35],zz[35][35],zzz[35][35],i,k,j;
	for(i=0,j=t-1;i<t,j>=0;i++,j--)
		  for(k=0;k<t;k++)
			  z[k][j]=y[i][k];
	for(i=0,j=t-1;i<t,j>=0;i++,j--)
			  for(k=0;k<t;k++)
				  zz[k][j]=z[i][k];
	for(i=0,j=t-1;i<t,j>=0;i++,j--)
			  for(k=0;k<t;k++)
				  zzz[k][j]=zz[i][k];
	if(n==1){
		for(i=0;i<t;i++)
				{	for(k=0;k<t;k++)
							{cout<<z[i][k];
							if(k!=t-1) cout<<" ";
							}
				cout<<endl;}
	}
	if(n==2){
			for(i=0;i<t;i++)
					{	for(k=0;k<t;k++)
								{cout<<zz[i][k];
								if(k!=t-1) cout<<" ";
								}
					cout<<endl;}
		}
	if(n==3){
			for(i=0;i<t;i++)
					{	for(k=0;k<t;k++)
								{cout<<zzz[i][k];
								if(k!=t-1) cout<<" ";
								}
					cout<<endl;}
		}

}
void nonclock(long long y[][35],long long n,long long t)
{
	long long z[35][35],zz[35][35],zzz[35][35],i,k,j;
	for(i=0;i<t;i++)
		  for(k=0,j=t-1;k<t,j>=0;k++,j--)
			  z[j][i]=y[i][k];
	for(i=0;i<t;i++)
			  for(k=0,j=t-1;k<t,j>=0;k++,j--)
				  zz[j][i]=z[i][k];
	for(i=0;i<t;i++)
			  for(k=0,j=t-1;k<t,j>=0;k++,j--)
				  zzz[j][i]=zz[i][k];
	if(n==1){
		for(i=0;i<t;i++)
				{	for(k=0;k<t;k++)
							{cout<<z[i][k];
							if(k!=t-1) cout<<" ";
							}
				cout<<endl;}
	}
	if(n==2){
			for(i=0;i<t;i++)
					{	for(k=0;k<t;k++)
								{cout<<zz[i][k];
								if(k!=t-1) cout<<" ";
								}
					cout<<endl;}
		}
	if(n==3){
			for(i=0;i<t;i++)
					{	for(k=0;k<t;k++)
								{cout<<zzz[i][k];
								if(k!=t-1) cout<<" ";
								}
					cout<<endl;}
		}

}
int main()

    //----------------------------------------------
    /*int x,z,c=0,f=0;
    cin>>x;
    int *y=new int [x];
    z=x;
    while(z-->0) cin>>y[f++];
    z=x;
    f=0;
    while(z-->1)
    {
        if(y[f]<y[f+++1]) continue;
        else {c=-1; break;}
    }
    if(c==0) cout<<"Ordered\n0\n";
    else{
        c=0;
        for(int i=0;i<x-1;i++)
            for(int j=0;j<(x-1)-i;j++)
                if(y[j]>y[j+1]){swap(y[j+1],y[j]); c++;}
        f=1;
        cout<<y[0];
        while(x-->1) cout<<" "<<y[f++];
        cout<<endl<<c<<endl;
    }*/
    //--------------------------------------------
    /*int x=0,z=0,m=0,c=0;
    cin>>x;
    z=x;
    char *y=new char[x];
    while(z-->0&&++m)
    {
        int f=0,s=x;
        while(s-->0) {cin>>y[f++]; if(y[f-1]=='#') {cout<<m<<" "<<f<<endl; c++;}}
    }
    if(c==0) cout<<"No hiding places"<<endl;
    else cout<<c<<endl;*/
    //-----------------------------------------------
    /*unsigned long long z,x,y,c,m,s;
    cin>>x;
    while(x-->0)
    {
        cin>>y;
        c=0;
        m=1;
        s=y;
        while(y-->0)
        {
            cin>>z;
            if(z%2==0&&m%2==0) c++;
            if(z%2!=0&&m%2!=0) c++;
            m++;
        }
        if(c==s) cout<<"YES\n";
        else cout<<"NO\n";
    }*/
    //------------------------------------------
    /*int n,m,z,c,f,po;
    while(cin>>n>>m&&n>0&&m>0)
    {
        c=0,f=0;
        while(n-->0)
        {
            cin>>z;
            if(z==m)
            {
                if(c==0) po=f;
                c++;
            }
            f++;
        }
        if(c==0) cout<<"-1"<<endl;
        else cout<<c<<" "<<po<<endl;
        //----------------------------------------------------
    }*/
     
//-------------------------------------------------------------
//------------------------------------------------------------
      /* int x,z,f,c=0,h=100001;
       cin>>x;
       int y[h];
       z=0;
       while(z++<h) y[z-1]=-1;
       z=0;
       while(z++<x)
       {
    	   cin>>f;
    	   y[f]=f;
       }
       z=0;
              while(z++<h)
              {
           	   if(y[z-1]==-1) continue;
           	   else{
           		   c++;
           	   }
              }
       z=0;
       cout<<c<<endl;
       while(z++<h)
       {
    	   if(y[z-1]==-1) continue;
    	   else{
    		   cout<<y[z-1];
    		   f=z-1;
    		   break;
    	   }
       }
       z=0;
       while(z++<h)
       {
    	   if(y[z-1]==-1||z-1==f) continue;
    	   else cout<<" "<<y[z-1];
       }
       cout<<endl;*/
//---------------------------------------------------
    /*  int x,y,z;
      cin>>x;
      while(x-->0){
          cin>>y>>z;
          int *a=new int [z];
          int f=0,s=0,c=0;
          while(s++<z) cin>>a[s-1];
          for(int j=0;j<z;j++)
                    {
                        int min=j;
                        for(int i=j+1;i<z;i++)
                            if(a[i]<a[min]) min=i;
                        swap(a[min],a[j]);
                    }
         // cout<<a[0]<<" "<<a[z-1]<<endl;
          s=0;
          while(s++<z)
          {
              if(f+a[s-1]<=y)
              {
                  f+=a[s-1];
                  c++;
              }
              else break;
          }
          cout<<c<<" "<<f<<endl;
      }
//------------------------------------------------------------------
    /* int n=0,x=0,c=0,s=0;
     char y[3];
     cin>>n;
     while(c++<n)
     {
    	 cin>>y;
    	 s=0;
    	 while(s++<2)
    	 {
    		 if(y[s-1]=='+'){
    			 x++;
    			 break;
    		 }
    		 if(y[s-1]=='-'||y[s-1]=='�'){
    		     			 x--;
    		     			 break;
    		     		 }
    	 }
     }
     cout<<x<<endl;
//--------------------------------------------------------------
/* long long n,y,max=1,c=0;
    cin>>n>>y;
    long long x=n;
    while(x<=y)
    {
    	n=x;
    	c=1;
    	 while(n>1)
    	    {

    	    	if(n%2!=0) n=3*n+1;
    	    	else n=n/2;
    	    	c++;
    	    }
    	 if(c>max) max=c;
    	 x++;
    }
    cout<<max;*/
//----------------------------------------------------------------
   /* int x,z=1,h=0,l=0,y,f;
    cin>>x;
    cin>>y;
    while(z++<x)
    {
    	cin>>f;
    	if(f>y) h++;
    	if(f<y) l++;
    	y=f;
    }
    cout<<h<<" "<<l;*/
//-------------------------------------------------------------------
     /*float y=0,z[3],sum=0;
     int x=0;
     while(x++<4)
     {
    	 cin>>y;
    	 sum=sum+y;
     }
     int min=0;
     x=0;
     while(x++<3)
     {
    	 cin>>z[x-1];
    	 if(z[min]>z[x-1]) min=x-1;
     }
     x=0;
     float f=0;
     while(x++<3)
     {
    	 if(x-1==min) continue;
    	 f+=z[x-1];
     }
     sum+=f/2;
     if(sum>=90) {cout<<"A"; return 0;}
     if(sum>=80&&y<90) {cout<<"B"; return 0;}
     if(sum>=70&&y<80) {cout<<"C"; return 0;}
     if(sum>=60&&y<70) {cout<<"D"; return 0;}
     if(sum<60) {cout<<"F"; return 0;}*/
//-------------------------------------------------------------------------
    /*int x;
while( cin>>x){

     int l[x],r[x];
     int z=0,c=0;
     while(z++<x) cin>>l[z-1];
     z=0;
     while(z++<x) cin>>r[z-1];
     for(z=0;z<x;z++)
     {
    	 int m=0;
    	 for(int f=0;f<x;f++)
    	 {
    		 if(l[z]==r[f])
    		 {
    			 r[f]=0;
    			 m++;
    			 break;
    		 }
    	 }
    	 if(m==0) c++;
     }
     cout<<c;}*/
//---------------------------------------------------------------------------------------
     /*int n,b;
     cin>>n>>b;
     int res=n/b;
     int x[3]={abs(res-1)*b,res*b,(res+1)*b};
     int y[3]={abs(n-(abs(res-1)*b)),abs(n-(res*b)),((res+1)*b)-n};
     int z=0,min=0;
     while(z++<2)
     {
    	 if(y[z]<y[min]) min=z;
    	 if(y[z]==y[min])
    	 {
    		 if(x[z]>x[min]) min=z;
    	 }
     }
     cout<<x[min];*/
//---------------------------------------------------------------------------------------------
     /*int n,v,x,m;
     cin>>n>>v;
     int yy[n],d=0;
     while(d++<n) yy[d-1]=1;
     for(int i=0;i<n;i++)
     {
    	 cin>>x;
    	 for(int j=0;j<x;j++)
    	 {
    		 cin>>m;
    		 if(v>m) yy[i]=0;
    	 }
     }

     int z=0,c=0,r=-1;
     while(z++<n)
     {
    	 if(yy[z-1]==0) c++;
    	 if(c==1&&r==-1) r=z-1;
     }
     cout<<c<<endl;
     if(c>0) cout<<r+1;
     z=0;
     while(z++<n)
     {
    	 if(z-1==r) continue;
    	 if(yy[z-1]==0) cout<<" "<<z;
     }*/
//------------------------------------------------------------------------------------------------------------
    /* int t,k,n,z=0;
     cin>>n>>k>>t;
     while(z++<n)
     {
    	 if(t>=k)
    	 {
    		 if(z==n) {cout<<k;
    		 t=t-k;}
    		 else{cout<<k<<" ";
    		 t=t-k;
    		 }
    	 }
    	 else{
    		 if(t>0)
    		 {
    			 if(z==n) {cout<<t;
    			     		 t=t-t;}
    			     		 else{cout<<t<<" ";
    			     		 t=t-t;
    			     		 }
    		 }
    		 else{
    			 if(z==n) {cout<<"0";
    			     		}
    			     		 else{cout<<"0"<<" ";

    			     		 }
    		 }
    	 }
     }*/
//--------------------------------------------------------------
   /*  int x,y,z,g,f=0;
     char c;
     cin>>x;
     while(f++<x)
     {
    	 cin>>y>>c>>z;
    	 if(y%z==0) { if(f==x) cout<<y/z;
		 else cout<<y/z<<endl;}
    	 else{
    	 if(z==1)
    	 {
    		 if(f==x) cout<<y;
    		 else cout<<y<<endl;
    	 }
    	 else{
    		 if(y==1)
    		 {
        		 if(f==x) cout<<y<<c<<z;
        		 else cout<<y<<c<<z<<endl;
    		 }
    		 else{
    			 if(y<z)  g=gcd(z,y);
    			 else g=gcd(y,z);
        		 if(f==x) cout<<y/g<<c<<z/g;
        		 else cout<<y/g<<c<<z/g<<endl;
    		 }
    	 }
     }}*/
//-----------------------------------
     /* long long n,p=0,z=0,f=0,k=0;
     cin>>n;
     char *c=new char[n];
     cin>>c;
     while(z++<n)
    	 if(c[z-1]!='*') p++;
     z=0,f=1,k=20-p;
     while(z++<n-p) f=f*k--;
     cout<<f;*/
//----------------
     /*unsigned long long m,n,x;
     cin>>n>>m;
     x=m%n;
     if(x==0) cout<<"Yes";
     else cout<<"No";*/
//------------------------
    /* int x,y;
     cin>>x>>y;
     cout<<x+y;*/
//------------
    /* unsigned long long x,y;
     cin>>x;
     y=x*x;
     cout<<y;*/
//------------
/* int x,z=0,y;
  cin>>x;
  while(z++<x)
  {
      cin>>y;
      if(check(y)==1)
      {
          if(z==x) cout<<"Intelligent";
          else cout<<"Intelligent"<<endl;
      }
      else{
          if(z==x) cout<<"Stupid";
           else cout<<"Stupid"<<endl;
      }
  }*/
  //--------------------------------------
 /* long long z,f=0;
sd: while( cin>>z)
{
  for(long long  y=2;y<35;y++)
  {
   f=0;
   for(long long  x=2;x<=y&&f<z;x++)
   {
       f=pow(x,y)+pow(y,x);
       if(f==z){
           cout<<"YES"<<endl<<x<<" "<<y<<endl;
          goto sd;
       }
   }
  }
  cout<<"NO"<<endl;}*/
  //----------------------------------------
  /* int x;
   cin>>x;
   int z[x];
   int d=0,f=0,m=0,n=0,first=0,last=0,i=0,sum=0;
   while(d++<x) cin>>z[d-1];
   cin>>f;
   d=0;
   while(d++<f)
   {
	   sum=0;
	   cin>>m>>n;
	   if(m>n) swap(&m,&n);
	   first=m-1,last=n-1;
	   int max=first,min=first;
	   for(i=first;i<=last;i++)
	   {
		   sum=sum+z[i];
		   if(z[i]>z[max]) max=i;
		   if(z[i]<z[min]) min=i;
	   }
	   if(d==f) cout<<z[max]<<" "<<z[min]<<" "<<sum;
	   else cout<<z[max]<<" "<<z[min]<<" "<<sum<<endl;
   }*/
//--------------------------------------------
      /* int x,y;
       cin>>x>>y;
       if(x>y) cout<<lcm(y,x);
       else cout<<lcm(x,y);*/
//-----------------------------------
     /* int x,i=0,sum=0;
      cin>>x;
      while(x>0)
      {
    	  sum+=((x%10)*pow(2,i++));
    	  x/=10;
      }
      cout<<sum;*/
//--------------------------------
   /* int x;
    cin>>x;
    if(luck(x)==1) cout<<"YES";
    else cout<<"NO";*/
//----------------------------
    /* int x=0;
     cin>>x;
     cout<<binary(x)<<" "<<hex(x);*/
//-----------------------------------
     /*int x;
     cin>>x;
     char y[x];
     cin>>y;
     int z=0,f=x-1,c=0;
     while(z++<x/2)
     {
    	 if(y[z-1]==y[f]);
    	 else{
    		 c++;
    		 if(y[z-1]<y[f]) y[f]=y[z-1];
    		 else y[z-1]=y[f];
    	 }
    	 f--;
     }
     cout<<c<<endl<<y;*/
//-------------------------------------
     /*int n,m,x,y;
     cin>>n>>m;
     char z[n+1][m+1],f;
     for(x=0;x<n;x++)
    	 for(y=0;y<m;y++)
    	 {
    		 cin>>f;
    		 if(f=='.') z[x][y]='0';
    		 else z[x][y]=f;
    	 }
     for(x=0;x<n;x++)
        	 for(y=0;y<m;y++)
        	 {if(z[x][y]=='*')
        	 {
        		 if(z[x+1][y]!='*'&&x+1>-1&&y>-1) z[x+1][y]++;
        		 if(z[x+1][y+1]!='*'&&x+1>-1&&y+1>-1) z[x+1][y+1]++;
        		 if(z[x+1][y-1]!='*'&&x+1>-1&&y-1>-1) z[x+1][y-1]++;
        		 if(z[x-1][y]!='*'&&x-1>-1&&y>-1) z[x-1][y]++;
        		 if(z[x-1][y-1]!='*'&&x-1>-1&&y-1>-1) z[x-1][y-1]++;
        		 if(z[x-1][y+1]!='*'&&x-1>-1&&y+1>-1) z[x-1][y+1]++;
        		 if(z[x][y-1]!='*'&&x>-1&&y-1>-1) z[x][y-1]++;
        		 if(z[x][y+1]!='*'&&x>-1&&y+1>-1) z[x][y+1]++;
        	 }
        	 }
     for(x=0;x<n;x++)
     { for(y=0;y<m;y++)
         	 {
         		 cout<<z[x][y];
         	 }
     if(x!=n-1) cout<<endl;
     }*/
//-------------------------------------------
     /*int a,b,n;
     cin>>a>>b>>n;
     while(true)
     {
    	 if(a>n) n-=gcd(a,n);
    	 else n-=gcd(n,a);
    	 if(n==0){
    		 cout<<"0";
    		 break;
    	 }
    	 if(n<0){
    		 cout<<"1";
    		    		 break;
    	 }
    	 if(b>n) n-=gcd(b,n);
    	    	 else n-=gcd(n,b);
    	 if(n==0){
    	     		 cout<<"1";
    	     		 break;
    	     	 }
    	     	 if(n<0){
    	     		 cout<<"0";
    	     		    		 break;
    	     	 }
     }*/
//---------------------------------------------------------
     /*unsigned long long x;
     cin>>x;
     x=pow(x,2)+x+41;
     cout<<x;*/
//--------------------------------------------------------
	/*int x;
		cout<<"enter no. of programs\n";
		cin>>x;
		float *arr=new float [x];
		float *bur=new float [x];
		int z=0;
		while(z++<x)
		{
			cout<<"enter the arrival time of p"<<z<<endl;
			cin>>arr[z-1];
			cout<<"and its burst time\n";
			cin>>bur[z-1];
		}
		cout<<"Enter 1 for FCFS or 2 for SJF-non primitive\n";
		int ff=0;
		cin>>ff;
		if(ff==1){
		float j=0,t=0,w=0;
		z=0;
		float suma=0,sumw=0;
		while(z++<x)
		{
			j+=bur[z-1];
			t=j-arr[z-1];
			w=t-bur[z-1];
			cout<<"the T(a) of p"<<z<<" = "<<t<<endl<<"and its T(w) = "<<w<<endl;
			suma+=t;
			sumw+=w;
		}
			cout<<"Average T(a) = "<<suma/x<<"\n and average T(w) = "<<sumw/x<<endl;
	    }
	    if(ff==2){
	    int c=0,s=0,min=0;
	    float *fin=new float [x];
	    z=0;
	    while(z++<x)
	    {
	    	s=0,min=0;
	    	while(s++<x)
	    	if(arr[s-1]<=c&&arr[s-1]>=0&&bur[s-1]<bur[min])   	min=s-1;
	    	arr[min]*=-1;
	    	c+=bur[min];
	    	fin[min]=c;
	    }
	    z=0;
	    while(z++<x) cout<<fin[z-1]<<endl;
	    z=0;
	    float suma=0,sumw=0;
	    while(z++<x)
		{
			float t=fin[z-1]-(arr[z-1]*-1);
			float w=t-bur[z-1];
			cout<<"the T(a) of p"<<z<<" = "<<t<<endl<<"and its T(w) = "<<w<<endl;
			suma+=t;
			sumw+=w;
		}
		cout<<"Average T(a) = "<<suma/x<<"\n and average T(w) = "<<sumw/x<<endl;
	    }*/
	    //--------------------------------------------------------------------
       /*int x;
		cout<<"enter no. of programs\n";
		cin>>x;
		float *arr=new float [x];
		float *bur=new float [x];
		float *bur2=new float [x];
		float *prr=new float [x];
		float *end=new float [x];
		int z=0,prrr=0;
		while(z++<x)
		{
			cout<<"enter the arrival time of p"<<z<<endl;
			cin>>arr[z-1];
			cout<<"and its burst time\n";
			cin>>bur[z-1];
			bur2[z-1]=bur[z-1];
						prrr+=bur[z-1];
			cout<<"and its priority\n";
			cin>>prr[z-1];
		}
arr[x]=1000000;
	int c=0,s=0,min=0,miny=0;
	    float *fin=new float [x];
	    z=0;
	    int max=0;
	    while(s++<x)
	    {
	    	end[s-1]=0;
	    }
	    s=0;
	    while(c<prrr)
	    {
	    	s=0,min=0;
	    	while(s++<x)
	    	if(arr[s-1]<=c&&end[s-1]==0&&prr[s-1]<prr[min]&&bur[s-1]>0)   	min=s-1;
	    	s=0;
	    //	if(c>=arr[max]) miny=arr[x];
	    //	else miny=min+1;
	    //	while(s++<x)
	    //	if(arr[miny]>=arr[s-1]&&arr[s-1]>=0&&s-1!=min) miny=s-1;

	    	bur[min]--;
	    		c++;

	    	if(bur[min]==0) {
	    	end[min]=1;
	    	fin[min]=c;
	    	prr[min]=100000;
			}
	    }
	    z=0;
	    while(z++<x) cout<<fin[z-1]<<endl;
	    z=0;
	    float suma=0,sumw=0;
	    while(z++<x)
		{
			float t=fin[z-1]-arr[z-1];
			float w=t-bur2[z-1];
			cout<<"the T(a) of p"<<z<<" = "<<t<<endl<<"and its T(w) = "<<w<<endl;
			suma+=t;
			sumw+=w;
		}
		cout<<"Average T(a) = "<<suma/x<<"\n and average T(w) = "<<sumw/x<<endl;
	//-----------------------------------------------------------------------------------
		/*int x;
		cout<<"enter no of process";
		cin>>x;
		int all[x][3],max[x][3],ava[1][3];
		int i,j;
		for(i=0;i<x;i++)
		{
			cout<<"enter the allocation of P"<<i+1<<" sperated each digit with a space\n";
			for(j=0;j<3;j++)
			cin>>all[i][j];
		}
		for(i=0;i<x;i++)
		{
			cout<<"enter the max. of P"<<i+1<<" sperated each digit with a space\n";
			for(j=0;j<3;j++)
			cin>>max[i][j];
		}
		cout<<"enter the available sperated each digit with a space\n";
		cin>>ava[0][0]>>ava[0][1]>>ava[0][2];
		for(i=0;i<x;i++){
		for(j=0;j<3;j++)
		max[i][j]-=all[i][j];}
		int z=0,c=0,min=0;
		while(z++<x)
		{
			for(i=0;i<x;i++)
			{
				c=0;
				for(j=0;j<3;j++)
				{
					if(max[i][j]<=ava[0][j]&&max[i][0]!=-1)
					c++;
					if(c==3)
					{
						min=i;
						goto dd;
					}
				}
			}
		dd:	if(c<3)
			{
				cout<<"The system is not in safe-state\n";
				return 0;
			}
			for(i=0;i<3;i++)
			ava[0][i]+=all[min][i];
			max[min][0]=-1;
			cout<<"P"<<min+1<<" &new work="<<ava[0][0]<<" "<<ava[0][1]<<" "<<ava[0][2];
			if(z!=x) cout<<" --->";
		}
		cout<<"\nThe system is in safe-state";*/
//-----------------------------------------------------------
       /*string s;
       int x;
       cin>>s;
       cin>>x;
       int z=0;
       string k="Final";
       while(z++<x)
       {
    	   if(z==1){
    		   cout<<s<<endl;
    		  s+='-';
    		   continue;
    	   }
    	   s+=k;
    	   if(z==x){
    		   s+="Wallahy";
    	      	   }
    	  if(z==x) cout<<s;
    	  else cout<<s<<endl;*/
//-------------------------------------------
       /* string x;
        string v="vaporeon",j="jolteon",f="flareon",e="espeon",u="umbreon",l="leafeon",g="glaceon",s="sylveon";
       cin>>x;
       int z=0,count[8]={0,0,0,0,0,0,0,0};
       while(z++<8)
       {
    	   if(x[0]!='.')
    	   {
    		                if(x[0]==v[0]) count[0]++;
    		                if(x[0]==j[0]) count[1]++;
    		                if(x[0]==f[0]) count[2]++;
    		                if(x[0]==e[0]) count[3]++;
    		                if(x[0]==u[0]) count[4]++;
    		                if(x[0]==l[0]) count[5]++;
    		                if(x[0]==g[0]) count[6]++;
    		                if(x[0]==s[0]) count[7]++;
    		                break;
    	   }
    	   if(x[z-1]!='.')
    	   {
    		   if(x[z-1]==v[z-1]) count[0]++;
    		   if(x[z-1]==j[z-1]) count[1]++;
    		   if(x[z-1]==f[z-1]) count[2]++;
    		   if(x[z-1]==e[z-1]) count[3]++;
    		   if(x[z-1]==u[z-1]) count[4]++;
    		   if(x[z-1]==l[z-1]) count[5]++;
    		   if(x[z-1]==g[z-1]) count[6]++;
    		   if(x[z-1]==s[z-1]) count[7]++;

    	   }
       }
       z=0;
       int max=0;
       while(z++<8)
    	   if(count[z-1]>count[max]) max=z-1;
       switch(max){
       case(0): {cout<<"vaporeon"; break;}
       case(1): {cout<<"jolteon"; break;}
       case(2): {cout<<"flareon"; break;}
       case(3): {cout<<"espeon"; break;}
       case(4): {cout<<"umbreon"; break;}
       case(5): {cout<<"leafeon"; break;}
       case(6): {cout<<"glaceon"; break;}
       case(7): {cout<<"sylveon"; break;}
       }*/
//----------------------------------------------------
     /* int x,z=0;
      cin>>x;
      string y[x];
      while(z++<x) cin>>y[z-1];
      int f,m;
      cin>>f;
      string name[f],d;
      int scr[f];
      z=0;
      while(z++<f) scr[z-1]=0;
      z=0;
      while(z++<f)
      {
    	  cin>>name[z-1];
    	  cin>>m;
    	  int dd=0;
    	  while(dd++<m)
    	  {
    		  cin>>d;
    		  int r=0;
    		  while(r++<x)
    			  if(d==y[r-1])
    				  scr[z-1]++;
    	  }
      }
      int max=0;
      z=1;
      while(z++<f)
      {
    	  if(scr[z-1]>scr[max]) max=z-1;
    	  if(scr[z-1]==scr[max])
    		  if(name[z-1]<name[max])
    			  max=z-1;
      }
      cout<<name[max];*/
//-----------------------------------------------
    /* int m,n,d=0;
     cin>>m>>n;
     string x,y,z,s,res[m*n];
     while(d++<m*n)
     {
    	 cin>>x>>y>>z;
    	 if(y=="0000000000"&&z=="0000000000") {
    		 if(d==1) cout<<x;
    		 else cout<<endl<<x;
    	 }
    	 else {if(z==s) cout<<x;
    	 if(z=="0000000000") cout<<endl<<x;
    	 }
    	 s=x;
     }*/
//--------------------------------------------------
     /*string s;
     getline(cin,s);
     unsigned int i;
     for(i=0;i<s.size();i++)
        	 s[i]=tolower(s[i]);
     for(i=0;i<s.size();i++)
     {
    	 if(s[i]<97||s[i]>122)
    	 {
    		 s.erase(i,1);
    		 i--;
    	 }
     }
     unsigned int z=0,c=0,f=s.size()-1;
     z=0;
     while(z++<s.size()/2)
     {
    	 if(s[z-1]!=s[f--])
    	 {
    		 c++;
    		 break;
    	 }
     }
     if(c==0) cout<<"I'll make the saddle";
     else cout<<"Alas, Jon, You failed my test";*/
//--------------------------------------------------------
     /*int x;
     string s;
     cin>>x>>s;

     if(s.size()<=x) cout<<s;
     else{
    	 cout<<s[0];
    	 if(s[0]==s[s.size()-1]&&s.size()-1>0)
    	 {
    		 cout<<s.size()-1;
    		 return 0;
    	 }
    	 else{
    		 if(s.size()-2>0) cout<<s.size()-2<<s[s.size()-1];
    		 else cout<<s[s.size()-1];
    	 }
     }*/
//------------------------------------------------------------
    /*string s;
    cin>>s;
    unsigned long long sum=0,sumn=0,z=0;
    while(z++<s.size())
    	sum+=(s[z-1]-48);
    while(true){
    	if(sum<10) break;
    	else{
    		sumn=0;
    		while(sum>0)
    		{
    			sumn+=sum%10;
    			sum/=10;
    		}
    		sum=sumn;
    	}
    }
    cout<<sum;*/
//---------------------------------------------------------
     /*string x,y;
     cin>>x>>y;
     int z=0,c=0;
     while(z++<x.size())
    	 if(x[z-1]!=y[z-1])
    		 c++;
     cout<<c;*/
//-----------------------------------------------------
    /* string s;
     int c=0,d=0,z=0;
     cin>>s;
    while(true)
    {
    	if(s[z]==s[++z]) c++;
    	else break;
    }
    while(z<s.size())
    {
    	d=0;
    	while(z<s.size())
    	{
    		if(s[z]==s[++z]) d++;
    		else break;
    	}
    	if(c!=d) {
    		cout<<"NO";
    		return 0;
    	}
    }
    cout<<"YES";*/
//------------------------------------------
     /*int x,z=0,maxl=0,maxch=0,maxchi=0;
     cin>>x;
     string s[x];
     while(z++<x)
    	 cin>>s[z-1];
     z=0;
     while(z++<x)
     {
    	 if(s[z-1].size()>=s[maxl].size()) maxl=z-1;
    	 int y=0;
    	 long long sum=0;
    	 while(y++<s[z-1].size())
    		 sum+=(s[z-1][y-1]-64);
    	 if(sum>=maxch)
    	 {
    		 maxch=sum;
    		 maxchi=z-1;
    	 }
     }
     cout<<s[maxchi]<<endl<<s[maxl];*/
//-------------------------------------------------
      /*string s,d;
      cin>>s;
      for(int i=0;i<s.size();i++)
    	  s[i]=tolower(s[i]);
      int z=0,f=0;

      while(z++<s.size())
      {
    	  if(s[z-1]!='a'&&s[z-1]!='u'&&s[z-1]!='o'&&s[z-1]!='i'&&s[z-1]!='e'&&s[z-1]!='y')
    	  {
    		  d[f]='.';
    		  d[f+1]=s[z-1];
    		  f+=2;
    	  }
      }
      z=0;
      while(z++<f) cout<<d[z-1];*/
//-----------------------------------------------------
      /*int a,b,c,x=0,y=0,d,z=0;
      double f=0;
      cin>>a>>b;
      c=a+b;
      while(a>0)
      {
    	  if(a%10!=0) x+=((a%10)*pow(10,f++));
    	  a/=10;
      }
      f=0;
      while(b>0)
            {
          	  if(b%10!=0) y+=((b%10)*pow(10,f++));
          	  b/=10;
            }
      f=0;
           while(c>0)
                 {
               	  if(c%10!=0) z+=((c%10)*pow(10,f++));
               	  c/=10;
                 }
      d=x+y;
      if(z==d) cout<<"YES";
      else cout<<"NO";*/
//----------------------------------------------------------
     /* int y[102],z[102],i,j,f=0,d=0;
      while(cin>>y[d++]);
      d--;
      if(d==1) {cout<<-1; return 0;}
      for(i=0;i<d;i++)
    	  for(j=i+1;j<d;j++)
    		  z[f++]=gcd(y[i],y[j]);
      i=0,j=0;
      while(i++<f)
    	  if(z[i-1]>j) j=z[i-1];
      cout<<j;*/
//----------------------------------------------------------------
     /*string s,y;
     int i=0;
     char c=' ';
     cin>>s;
     int d=0;
     while(i<s.size())
     {
    	 if(s[i]=='W'&&s[i+1]=='U'&&s[i+2]=='B')
    	 { i+=3; d++;}
    	 else {
    		 if(y.size()!=0&&d!=0){
    		 y+=c;
    		 y+=s[i];}
    		 else y+=s[i];
    		 i++;
    		 d=0;
    	 }
     }
     cout<<y;*/
//--------------------------------------------------------------------
     /*int n;
     cin>>n;
     string s;
     cin>>s;
     char cc;
     int i=0,f=s.size()-1;
     int b=0,e=s.size()-1;
     for(int j=0;j<n;j++)
                         {
                             int min=j;
                             for(int i=j+1;i<n;i++)
                                 if(s[i]<s[min]) min=i;
                             cc=s[min];
                             s[min]=s[j];
                             s[j]=cc;
                         }
     for(int j=n;j<s.size();j++)
                              {
                                  int min=j;
                                  for(int i=j+1;i<s.size();i++)
                                      if(s[i]<s[min]) min=i;
                                  cc=s[min];
                                  s[min]=s[j];
                                  s[j]=cc;
                              }
     i=0;
      if(s[b]>s[e])
     {
    	 while(i<s.size()/2)
    	 {
    		 if(s[i++]<=s[f--])
    		 {
    			goto x;
    		 }
    	 }
    	 cout<<"YES";
    	 return 0;
     }
      else{
    	 while(i<s.size()/2)
    	     	 {
    	     		 if(s[i++]>=s[f--])
    	     		 {
    	     			goto x;
    	     		 }
    	     	 }
    	     	 cout<<"YES";
    	     	return 0;
     }
   //  if(s[b]==s[e]){
   // 		 goto x;
   //  }
     x: i=0,b=0,e=n,f=n;
     if(s[b]>s[e])
     {
    	 while(i<s.size()/2)
    	 {
    		 if(s[i++]<=s[f++])
    		 {
    			 cout<<"NO";
    			     	 return 0;
    		 }
    	 }
    	 cout<<"YES";
    	 return 0;
     }
     else{
    	 while(i<s.size()/2)
    	     	 {
    	     		 if(s[i++]>=s[f++])
    	     		 {
    	     			 cout<<"NO";
    	     	     	 return 0;
    	     		 }
    	     	 }
    	     	 cout<<"YES";
    	     	return 0;
     }
    // if(s[b]==s[e]){
    	//	 cout<<"NO";
    	//	 return 0;}

//---------------------------------------------------------------------
     /*string s,s2;
     cin>>s;
     int i=0,f=s.size()-1,c=0,count=0;
     char d;
     while(true)
     {
    	 c=0,f=s.size()-1,i=0;
    	 while(i<s.size()/2)
    		 if(s[i++]!=s[f--])
    		 {
    			 c++;
    			 break;
    		 }
    	 if(c==0) break;
    	 s2=s;
    	 i=0,f=s.size()-1;
    	 while(i<s.size()/2)
    	 {
    		 d=s[i];
    		 s[i]=s[f];
    		 s[f]=d;
    	 }
    	 i=0;
    	 while(i<s.size()){
    		 d=(s[i]-48)+(s2[i++]-48);
    		 s[i]=d;

    	 }

    	 count++;
     }
     cout<<count<<" "<<s;*/
//--------------------------------------------------------------------------
// 4A
    /* int x;
     cin>>x;
     for(int i=2;i<x;i+=2)
    	 if((x-i)%2==0)
    	 {
    		 cout<<"YES";
    		 return 0;
    	 }
     cout<<"NO";*/
//-------------------------------------------------------------------------
    //231A
    /*int x=0,c=0,i=0,d=0,y=0,z=0;
    cin>>x;
    while(z++<x)
    {
    	i=0,c=0;
    	while(i++<3)
    	{
    		cin>>y;
    		if(y==1) c++;
    	}
    	if(c>1) d++;
    }
    cout<<d;*/
//---------------------------------------------------------------------------
   /*char y[3][3];
   int i,j,x=0,o=0,no=0;
   for(i=0;i<3;i++)
	   for(j=0;j<3;j++)
	   {
		   cin>>y[i][j];
		   if(y[i][j]=='X') x++;
		   if(y[i][j]=='O') o++;
		   if(y[i][j]=='.') no++;
	   }
   if((x==o||x-1==o))
   {
	   for(i=0;i<3;i++)
	   {

		   if(y[i][0]==y[i][1]&&y[i][0]==y[i][2])
			   {if(y[i][0]=='X')
			   {
				   if(x-1==o){
				   cout<<"the first player won";
				   return 0;}
				   goto ff;
			   }
			   if(y[i][0]=='O')
			  			   {
				               if(x==o){
			  				   cout<<"the second player won";
			  				   return 0;}
				               goto ff;
			  			   }}
		   if(y[0][i]==y[1][i]&&y[0][i]==y[2][i]){
			   if(y[0][i]=='X')
			   			   {
				   if(x-1==o){
				  				   cout<<"the first player won";
				  				   return 0;}
				  				   goto ff;
			   			   }
			   			   if(y[0][i]=='O')
			   			  			   {
			   				 if(x==o){
			   							  				   cout<<"the second player won";
			   							  				   return 0;}
			   								               goto ff;
			   			  			   }}
			   }
       if((y[0][0]==y[1][1]&&y[0][0]==y[2][2])||(y[0][2]==y[1][1]&&y[0][2]==y[2][0]))
       {if(y[1][1]=='X')
       			   { if(x-1==o){
	  				   cout<<"the first player won";
	  				   return 0;}
	  				   goto ff;
       			   }
       			   if(y[1][1]=='O')
       			  			   {
       				 if(x==o){
       							  				   cout<<"the second player won";
       							  				   return 0;}
       								               goto ff;
       			  			   }}
	   if(no==0)
	   {
		   cout<<"draw";
		   return 0;
	   }
	   if(x==o)
	   {
		   cout<<"first";
		   return 0;
	   }
	   if(x-1==o)
	   	   {
	   		   cout<<"second";
	   		   return 0;
	   	   }
   }
   ff:cout<<"illegal";*/
//--------------------------------------------------------------------------
   //69A
   /*int x,z=0,i=0,a=0,b=0,c=0,suma=0,sumb=0,sumc=0;
   cin>>x;
   while(z++<x)
	   {
	    cin>>a>>b>>c;
	    suma+=a;
	    sumb+=b;
	    sumc+=c;
	   }
   if(suma==0&&sumb==0&&sumc==0) cout<<"YES";
   else cout<<"NO";*/
//-----------------------------------------------------------------------
   /*long long x,y,z,x2,y2,z2,c;
   cin>>x>>y>>z;
   x2=x/z,y2=y/z,c=x2*y2;
   if(x%z) c+=y2;
   if(y%z) c+=x2;
   if(x%z&&y%z) c++;
   cout<<c;*/
//------------------------------------------------------------------------
  /* int x;
   cin>>x;
   int y[x][x];
   for(int i=0;i<x;i++)
   {
	   int f=i,d=1;
	   for(int k=0;k<=i;k++)
	   {
		   y[f][x-d]=i+1;
		   if(i+1!=x) y[x-d][f]=i+1;
		   d++,f--;
	   }
   }
   for(int i=0;i<x;i++)
   { for(int k=0;k<x;k++)
   {  cout<<y[i][k];
      if(k!=x-1) cout<<" ";
   }
   if(i!=x-1) cout<<endl;}*/
//------------------------------------------------------------
   /*string x,y="heavy",z="metal";
   cin>>x;
   long long h=-5,m,c=0;
   for(int i=0;;i++)
   {
	   h=x.find(y,h+5);
	   if(h>-1)
	   {
		   m=x.length();
		   for(int j=0;;j++)
		   {
			   m=x.rfind(z,m-1);
			   if(m>-1&&m>h+4) c++;
			   else break;
		   }
	   }
	   else break;
   }
   cout<<c;*/
   //------------------------------------------------------------------
    /*string s;
	cin>>s;
	int z=0,c=0;
	while(z++<s.size())
	{
		if(s[z-1]=='h'&&c==0)
		{
			c++;
			continue;
		}
		if(s[z-1]=='e'&&c==1)
		{
			c++;
			continue;
		}
		if(s[z-1]=='l'&&c==2)
		{
			c++;
			continue;
		}
		if(s[z-1]=='l'&&c==3)
		{
			c++;
			continue;
		}
		if(s[z-1]=='o'&&c==4)
		{
			c++;
			break;
		}
	}
	if(c==5) cout<<"YES";
	else cout<<"NO";*/
//---------------------------------------------------------------
    /*string s,d,r;
    int z=0;
    cin>>s>>d;
    while(z++<s.size())
    {
    	if(s[z-1]==d[z-1]) r+='0';
    	else r+='1';
    }
    cout<<r;*/
//------------------------------------------------------------
   /*int x,z=0;
   cin>>x;
   int y[x];
   while(cin>>y[z++]);
   int l=0,k=x;
   for(int i=0;i<x;i++)
   {
	   if(y[i]){
		   int m=0;
		   for(int j=i+1;j<x;j++)
		   {
			   if(y[i]==y[j])
			   {
				   m++;
				   y[j]=0;
			   }
		   }
		   if(m>0) k-=m;
		   if(m>l) l=m;
	   }
   }
   cout<<l+1<<" "<<k;*/
//---------------------------------------------------------------
    /*int x,z=0,even=0,odd=0,eve=0,od=0;
    cin>>x;
    int y[x];
    while(z<x) cin>>y[z++];
    z=0;
    while(z++<x)
    {
    	if(y[z-1]%2==0) {even++; eve=z-1;}
    	else {odd++; od=z-1;}
    }
    if(even==1) cout<<eve+1;
    else cout<<od+1;*/
//---------------------------------------------------------
    /*string s;
    int z=0,c=0;
    cin>>s;
    while(z<s.size())
    {
    	if(s[z]==s[z+1]) c++;
    	else c=0;
    	if(c>=6){
    		cout<<"YES";
    		return 0;
    	}
    	z++;
    }
    cout<<"NO";*/
    //----------------------------------------------------------
   /* int z=1;
    string s;
   cin>>s;
   if(s[0]>=97&&s[0]<=122)
   {
	   while(z++<s.size())
		   if(s[z-1]>=97&&s[z-1]<=122)
		   {
			   cout<<s;
			   return 0;
		   }
	   s=caps(s);
   }
   else{
	   while(z++<s.size())
		   if(s[z-1]>=97&&s[z-1]<=122)
		   {
			   cout<<s;
			   return 0;
		   }
	   s=caps(s);
   }
   cout<<s;*/
//---------------------------------------------------------------
   /*int n,k,z=0,c=0;
   cin>>n>>k;
   int y[n];
   while(cin>>y[z++]);
   z=0;
   while(z++<n)
   {
	   if(y[z-1]>=y[k-1])
		   {if(y[z-1]>0)
			   c++;}
	   else break;
   }
   cout<<c;*/
//-------------------------------------------------------------
   /*int x,k,y,f,z=0,i=0,c=0;
   cin>>x>>k;
   int s[x];
   while(z++<x)
   {
	   cin>>y;
	   int d=0,m=0;
	   while(d++<y)
	   {
		   cin>>f;
		   if(k>f&&m==0)
		   {
			   c++;
			   m++;
			   s[i++]=z;
		   }
	   }
   }
   z=1;
   if(c==0) cout<<c;
   else{
	   cout<<c<<endl<<s[0];
	   while(z++<i) cout<<" "<<s[z-1];
   }*/
//------------------------------------------------------------
   /*int a,b,c,d,m,v;
   cin>>a>>b>>c>>d;
   m=(3*a)/10;
   if(a-((a*c)/250)>m) m=a-((a*c)/250);
   v=(3*b)/10;
   if(b-((b*d)/250)>v) v=b-((b*d)/250);
   if(m>v) cout<<"Misha";
   if(v>m) cout<<"Vasya";
   if(v==m) cout<<"Tie";*/
//------------------------------------------------------------
   /*int z=0,c=0,y[26];
   string s;
   cin>>s;
   while(z++<s.size()) y[s[z-1]-97]=1;
   z=0;
   while(z++<26) if(y[z-1]==1) c++;
   if(c%2) cout<<"IGNORE HIM!";
   else cout<<"CHAT WITH HER!";*/
//--------------------------------------------------------------
   /*long x;
   int z=0,c=0,y[4]={0,0,0,0},i=0;
   while(z++<4)
   {
	   cin>>x;
	   if(y[0]!=x&&y[1]!=x&&y[2]!=x&&y[3]!=x) {y[i++]=x; c++;}
   }
   cout<<4-c;*/
//------------------------------------------------------------
   /*long long x;
   cin>>x;
   if(x%2) cout<<-1*((x+1)/2);
   else cout<<x/2;*/
//-------------------------------------------------------
   /*string s;
   cin>>s;
   int z=0;
   while(z++<s.size()) if(s[z-1]=='H'||s[z-1]=='Q'||s[z-1]=='9') {cout<<"YES"; return 0;}
   cout<<"NO";*/
//----------------------------------------------------------
   /*int x,a,b,in=0,max=0,z=0;
   cin>>x;
   while(z++<x)
   {
	   cin>>a>>b;
	   in=(in-a)+b;
	   if(in>max) max=in;
   }
   cout<<max;*/
//-------------------------------------------------------------
   /*int x=0,y,n=0;
   cin>>y;
   while(++n)
   {
	   x+=(n*(n+1))/2;
	   if(x>y)
	   {
		   cout<<n-1;
		   return 0;
	   }
   }*/
//------------------------------------------------------------
  /*int m,n,c=0;
  cin>>n>>m;
  for(;n*m>0;n--,m--,c++);
  if(c%2) cout<<"Akshat";
  else cout<<"Malvika";*/
//---------------------------------------------------
  /*int x,z=0,y,c=0,d[5]={0,0,0,0,0};
  cin>>x;
  while(z++<x)
  {
	  cin>>y;
	  d[y]++;
  }
  c=c+d[4]+d[3]+(d[2]/2);
  d[1]-=d[3];
  if(d[2]%2) {c++; d[1]-=2;}
  if(d[1]>0) c+=(d[1]/4);
  if(d[1]%4&&d[1]>0) c++;
  cout<<c;*/
//-------------------------------------------------------
  /*int n,i=0;
  cin>>n;
  int x[n];
  while(i++<n) cin>>x[i-1];
  for(i=1;i<=n;i++)
	  for(int j=0;j<n;j++)
		  if(x[j]==i)
		  {
			  if(i==1) cout<<j+1;
			  else cout<<" "<<j+1;
		  }*/
//---------------------------------------------------------
  /*int n,z=1,y=1,m=2;
  cin>>n;
  int x[n]={1,1};
  n--;
  for(int i=2;i<=n;i+=2)
  {
	  x[i]=z+y;
	  x[i+1]=y;
	  z=y;
	  y=x[m++];
  }
  cout<<x[n];*/
//-----------------------------------------------------------------
  /*int x;
  cin>>x;
  int y[x];
  int z=0;
  while(z++<x) cin>>y[z-1];
  for(int i=0;i<x;i++)
  {
	  int max=i;
	  for(int k=i+1;k<x;k++)
		  if(y[k]>y[max])
			  max=k;
	  swap(y[i],y[max]);
  }
  int sum=0,sumarr=0,c=0;
  for(int i=0;i<x;i++)
  {
	  sumarr=0;
	  sum+=y[i];
	  c++;
	  for(int k=i+1;k<x;k++)
		  sumarr+=y[k];
	  if(sum>sumarr) break;
  }
  cout<<c;*/
  //----------------------------------------------------------------
   /*string s;
   cin>>s;
   int x=(s.size()+1)/2;
   int y[x],z=0,f=0,min=0;
   while(z<s.size())
	   {y[f++]=s[z];
	   z+=2;
	   }
   for(int i=0;i<x;i++)
   {
	   min=i;
	   for(int k=i+1;k<x;k++)
		   if(y[k]<y[min])
			   min=k;
	   swap(y[min],y[i]);
   }
   z=0,f=0;
   while(z<s.size())
	   {
	   s[z]=y[f++];
	   z+=2;
	   }
   cout<<s;*/
//---------------------------------------------------------------------
   /*string x,y;
   cin>>x;
   cin>>y;
   x+=y;
   cin>>y;
   if(x.size()!=y.size()) {cout<<"NO"; return 0;}
   for(int i=0;i<x.size();i++)
   {
	   int c=1;
	   for(int k=0;k<y.size();k++)
		   if(x[i]==y[k])
		   {
			   c=0;
			   y[k]='0';
			   break;
		   }
	   if(c) {cout<<"NO"; return 0;}
   }
   cout<<"YES";*/
//------------------------------------------------------------------------
   /*int x[3],f=0,res=0;
   while(f++<3) cin>>x[f-1];
   res=x[0]+x[1]+x[2];
   if(((x[0]+x[1])*x[2])>res) res=(x[0]+x[1])*x[2];
   if((x[0]*x[1]*x[2])>res) res=x[0]*x[1]*x[2];
   if(x[0]+(x[1]*x[2])>res) res=x[0]+(x[1]*x[2]);
   if(x[0]*(x[1]+x[2])>res) res=x[0]*(x[1]+x[2]);
   cout<<res;*/
//-------------------------------------------------------------------------

/*int n,x[10][10],size,z=0;
long long m;
   string s;
   cin>>n;
   while(z++<n)
   {
	   cin>>size;
	   for(int i=0;i<size;i++)
	   {
		   cin>>m;
		   for(int k=size-1;k>=0;k--)
		   {
			   x[i][k]=(m%10);
			   m/=10;
		   }
	   }
	   int f=0,ff,dd;
	   cin>>m;
	   while(f++<m)
	   {
		   cin>>s;
		   char r=s[0];
		   switch(r)
		   {
		   case('r') :{cin>>dd>>ff; row(x,dd,ff,size); break;}
		   case('c') :{cin>>dd>>ff; col(x,dd,ff,size); break;}
		   case('i') :{inc(x,size); break;}
		   case('d') :{dec(x,size); break;}
		   case('t') :{tra(x,size); break;}
		   }
	   }
	   cout<<"Case #"<<z<<endl;

	      for(int i=0;i<size;i++)
	      	   {
	      		   for(int k=0;k<size;k++)
	      		   {
	      			   cout<<x[i][k];
	      		   }
	      		   cout<<endl;
	      	   }
	      if(z!=n) cout<<endl;
   }*/
//----------------------------------------------------------------------
 /* int n;
  cin>>n;
  int sum=n;
  for(int i=0;i<n;i++)
  {
	  sum+=i*(n-i);
  }
  cout<<sum;*/
//---------------------------------------------------------------------
  /*int n;
  cin>>n;
  int d=2*n+1,f=-1,c=0,m=0,s=-1;
  for(int i=1;i<=2*n+1;i++)
  {
	  if(i<=((2*n+1)/2)+1){
		  f+=2;
		  s+=2;
		  for(int k=s;k<=2*n;k++) cout<<" ";
		  c=0;
		  for(int k=1;k<=f;k++)
		  {
			  if(k!=f) cout<<c<<" ";
			  else cout<<c;
			  if(k>=(f/2)+1) c--;
			  else c++;
		  }
		  m=f-2;
	  }
	  else{
		  for(int k=(d-=2);k<2*n+1;k++) cout<<" ";
		  c=0;
		  for(int k=m;k>0;k--)
		  {
			  if(k!=1) cout<<c<<" ";
			  else cout<<c;
 			  if(k<=(m/2)+1) c--;
 			  else c++;
		  }
		  m-=2;
	  }
	  cout<<endl;
  }*/
//-------------------------------------------------------------------------
 /*  int n,d,m=0,c=0;
   cin>>n;
   int x[n],z[n],y[3]={0,0,0};
   for(int i=0;i<n;i++) cin>>x[i];
   for(int i=0;i<n;i++)
   {
	   if(x[i]){
		   y[0]=i,y[1]=0,y[2]=0,d=1;
		   for(int k=i+1;k<n;k++)
			   if(x[k]!=x[y[0]]&&x[k]!=x[y[1]]&&x[k]!=x[y[2]])
			     y[d++]=k;
		   if(d!=3) break;
		   for(int k=0;k<3;k++)
		   {
			   z[m+k]=y[k];
			   x[y[k]]=0;
		   }
		   m+=3,c++;
	   }
   }
   cout<<c<<endl;
   if(c){
	   for(int k=0;k<3*c;k++)
	   {
		   if(k%3==0&&k) cout<<endl;
		   if((k+1)%3==0) cout<<z[k]+1;
		   else cout<<z[k]+1<<" ";
	   }
   }*/
//--------------------------------------------------------------------------
   /*string s,d=" ";
   int c=0;
   cin>>s;
   for(int i=0;i<s.size();i++)
    {if(s[i]=='W'&&s[i+1]=='U'&&s[i+2]=='B')
	   {
		   s.erase(i,1);
		   s.erase(i,1);
		   s.erase(i,1);
		   if(c&&s[i-1]!=' '&&i<s.size()) s.insert(i,d);
		   i--;
	   }
    else{
    	c++;
    }
    }
 cout<<s;*/
//----------------------------------------------------------------------------
  /*string s,d[10],f[8];
  cin>>s;
  int z=0;
  while(z++<10){
	  cin>>d[z-1];
	 if(z<9) f[z-1].insert(0,s,(z-1)*10,10);
  }
  s.erase(0,s.size());
  for(z=0;z<8;z++)
	  for(int k=0;k<10;k++)
		  if(f[z]==d[k])
			  s+=(k+48);
  cout<<s;*/
//-----------------------------------------------------------------------------
  /*int x[4],d=0,z=0,i;
  while(z++<4) cin>>x[z-1];
  cin>>d;
  int y[d+1];
  z=0;
  while(z++<d+1) y[z-1]=0;
  z=0;
  while(z++<4)
	  for(i=0;i<d+1;i+=x[z-1]) y[i]++;
  z=1,i=0;
  while(z++<d+1)
	  if(y[z-1]) i++;
  cout<<i;*/
//-----------------------------------------------------------
 /* string s,u,l;
  int z=0,n;
  cin>>n;
  while(z++<n)
  {
	  s.erase(0,s.size());
	  u.erase(0,u.size());
	  l.erase(0,l.size());
	  cin>>s;
	  for(int i=0;i<s.size();i++)
	  {
		  if(s[i]>=97&&s[i]<=122) l+=s[i];
		  else u+=s[i];
	  }
	  cout<<l<<" "<<u<<endl;
  }*/
//------------------------------------------
 /*long long n,x,f,d,z=0,y;
 cin>>n;
 while(z++<n)
 {
	 cin>>x>>y;
	 d=x;
	 f=d%10+((d/10)%10)*10;
	 if(f<y) x-=f;
	 else x+=(100-f);
	 cout<<x<<endl;
 }*/
//----------------------------------------------
 /* long long x,z=0,m,n,k,l;
  cin>>x;
  while(z++<x)
  {
	  cin>>m>>n>>k>>l;
	  cout<<(m*n)-(k*l)<<endl;
  }*/

//---------------------------------------------------------
/*long long n,x[10000],y[10000],size,z=0,d=0;
   cin>>n;
   while(z++<n)
   {
       d=0;
       cin>>size;
       while(d++<size) cin>>x[d-1];
       d=0;
       while(d++<size) cin>>y[d-1];
       d=y[0];
       for(int i=1;i<size;i++)
           d=d*x[i]+y[i];
       cout<<d<<endl;
   }*/
//---------------------------------------------------------
/*long long t,x[100001],z=0;
 cin>>t;
 while(z++<t)
 {
	  long long max=0,d=0,n,sum=0,pos=0,i=0;
	  cin>>n;
	  while(d++<n){
		  cin>>x[d-1];
		  if(x[d-1]>x[max]) max=d-1;
		  if(x[d-1]>0) pos++;
	  }
	  if(pos==0)
	  {
		  cout<<x[max]<<endl;
		  continue;
	  }
	  d=0;
	  for( i=0;i<n;i++)
	  {
		 if(x[i]+sum>0) sum+=x[i];
		 else sum=0;
		 if(sum>d) d=sum;
	  }
	  cout<<d<<endl;
 }*/
//----------------------------------------------------
  /*int n,z=0;
  string s;
  cin>>n;
  while(n--)
  {
	s.erase(0,s.size());
	cin>>s;
	long long c=0;
	for(int i=0;i<s.size();i++)
		if(s[i]=='*') c++;
	long long d=20-(s.size()-c),res=1;
	for(int i=0;i<c;i++)
		res*=d--;

	cout<<"Case #"<<++z<<": "<<res;
	if(n>0) cout<<endl;
  }*/
//-----------------------------------------------------------------
  /*long long x,d=0;
  cin>>x;
  char y[x][x];
  for(int i=0;i<x;i++)
	  for(int k=0;k<x;k++)
		  cin>>y[i][k];
  for(int i=0;i<x;i++)
	  for(int k=0;k<x;k++)
	  {
		  long long c=0;
		  if(y[i-1][k]=='O'&&i-1>-1) c++;
		  if(y[i+1][k]=='O'&&i+1<x) c++;
		  if(y[i][k-1]=='O'&&k-1>-1) c++;
		  if(y[i][k+1]=='O'&&k+1<x) c++;
		  if(c%2==0&&c){cout<<i+1<<" "<<k+1<<endl; d++;}
	  }
  if(d) cout<<d;
  else cout<<"No target";*/
//-----------------------------------------------------------------------
   /*long long x,z=0,n;
  cin>>x;
  while(z++<x)
  {
	  cin>>n;
	  if(n%2==0) cout<<"OFF"<<endl;
	  else cout<<"ON"<<endl;
  }*/
//--------------------------------------------
 /* long long x,z=0,d;
  cin>>x;
  while(z++<x)
  {
	  cin>>d;
	  d=6-d;
	  if(d==0){
		  cout<<d<<endl;
		  continue;
	  }
	  switch(d){
	  case(1): {cout<<"1/6"<<endl; continue;}
	  case(2) :{cout<<"1/3"<<endl; continue;}
	  case(3) :{cout<<"1/2"<<endl; continue;}
	  case(4) :{cout<<"2/3"<<endl; continue;}
	  case(5) :{cout<<"5/6"<<endl; continue;}
	  }

  }*/
//----------------------------------------------------
  /*long long x,z=0,f,d,n,m,y[22][22];
  cin>>x;
  while(z++<x)
  {
	  cin>>n>>m;
	  for(int i=0;i<n;i++)
		  for(int k=0;k<m;k++)
		  {
			  cin>>f;
			  if(f>127) y[i][k]=1;
			  else y[i][k]=0;
		  }
	  for(int i=0;i<n;i++)
	  {  cout<<y[i][0];
	  		  for(int k=1;k<m;k++)
	  		  {
	  			 if(k!=m) cout<<" "<<y[i][k];
	  			 else cout<<y[i][k];
	  		  }
	  		  cout<<endl;
	  }
  }*/
//----------------------------------------------------
 /* long long z=0,x,y[100002],r[100002][2],n,m,sum,a,b,i,k;
  cin>>x;
  while(z++<x)
  {
	  cin>>n>>m;
	  for(i=0;i<n;i++)
		  cin>>y[i];
	  for(i=0;i<m;i++)
	  {
		  for(k=0;k<2;k)
	  }

		  for(k=a;k<=b;k++)
			  sum+=y[k];
		  cout<<sum<<endl;
  }*/
//------------------------------------------
  /*long long x,z=0,i,k,c=0,w=0,min=0,d;
  string s,y[55],m[55],t,dd,qqq;
  getline(cin,qqq);
  if(qqq.size()==1) x=qqq[0]-48;
  if(qqq.size()==2) x=(qqq[0]-48)*10+(qqq[1]-48);
  if(qqq.size()==3) x=(qqq[0]-48)*100+(qqq[1]-48)*10+(qqq[0]-48);
  while(z++<x)
  {
  	d=0;
  //	cin.ignore(1,'\n');
	  getline(cin,dd);
	  if(dd[1]==' ') {
	  d=dd[0]-48;
	  dd.erase(0,2);
}
	  else {
	  d=(dd[0]-48)*10+(dd[1]-48);
	  dd.erase(0,3);}
	  s=dd;
	 // cin.ignore(1,'\n');
	  for(i=0;i<d;i++) getline(cin,y[i]);
	 // y[d]="%%%%%";
	  w=0,min=0;

	  for(i=0;i<d;i++)
	  {
		  c=0;
		  for(k=0;k<s.size();k++)
		  {
			  if(y[i][k]==s[k]) c++;
			  else break;
		  }
		  if(c==s.size()) m[w++]=y[i];
	  }
	  if(w){
		  for(i=0;i<w;i++)
		  {
			  min=i;
			  for(k=i+1;k<w;k++)
				  if(m[k].compare(m[min])<0)
					  min=k;
			  t=m[i];
			  m[i]=m[min];
			  m[min]=t;
		  }
		  cout<<w<<endl;
		  for(i=0;i<w;i++) cout<<m[i]<<endl;
	  }
	  else cout<<"Conan's assumption is wrong!"<<endl;
	 // cin.ignore(1,'\n');
  }*/
//-----------------------------------------------
/*int m=3,z[3][3],y[3][3],t;
cin>>t;
for(int i=0;i<m;i++)
	for(int k=0;k<m;k++)
		cin>>y[i][k];
while(t--){
for(int i=0;i<m;i++)
	  for(int k=0,j=m-1;k<m,j>=0;k++,j--)
		  z[j][i]=y[i][k];
}
while(t--){
for(int i=0,j=m-1;i<m,j>=0;i++,j--)
	  for(int k=0;k<m;k++)
		  z[k][j]=y[i][k];
}
for(int i=0;i<m;i++)
	{for(int k=0;k<m;k++)
		cout<<z[i][k]<<" ";
cout<<endl;}*/
//------------------------------------------------------
/*long long x,z=0,t,n,a,i,y[35][35],k;
cin>>x;
while(z++<x)
{
	cin>>t;
	for(i=0;i<t;i++)
		for(k=0;k<t;k++)
			cin>>y[i][k];
	cin>>a>>n;
	n=n%4;
	if(n==0)
	{
		for(i=0;i<t;i++)
		{	for(k=0;k<t;k++)
					{cout<<y[i][k];
					if(k!=t-1) cout<<" ";
					}
		cout<<endl;}
		continue;
	}
	if(a==1){
		clock(y,n,t);
	}
	else nonclock(y,n,t);

}*/
//-----------------------------------------------------
 /* string s;
  cin>>s;
  int z=0;
  while(z++<s.size()) s[z-1]=tolower(s[z-1]);
  z=0;
  while(z++<s.size()){
	  if(s[z-1]=='a'||s[z-1]=='i'||s[z-1]=='e'||s[z-1]=='u'||s[z-1]=='o'||s[z-1]=='y')
	  {
		  s.erase(z-1,1);
		  z--;
	  }
	  else {s.insert(z-1,1,'.');
	  z++;
	  }
  }
  cout<<s;*/
//---------------------------------------------------------------
  /* long long x,d=0;
   string s;
   cin>>x;
   while(x--)
   {
	   cin>>s;
	   if(s[0]=='+'||s[1]=='+'||s[2]=='+') d++;
	   else d--;
   }
   cout<<d;*/
//--------------------------------------------------
  /*long long x,c=0,z=0;
  string s;
  cin>>x>>s;
  while(z++<s.size())
	  if(s[z-1]==s[z])
	  {
		  s.erase(z--,1);
		  c++;
	  }
  cout<<c;*/
//----------------------------------------------------
  /*string s,d;
  cin>>s>>d;
  for(int i=0;i<s.size();i++)
  {
	  s[i]=tolower(s[i]);
	  d[i]=tolower(d[i]);
  }
  cout<<s.compare(d);*/
//-------------------------------------------------------
  /*string s;
  cin>>s;
  s[0]=toupper(s[0]);
  cout<<s;*/
//----------------------------------------------
  int x,y;
  cin>>x>>y;
  cout<<(x*y)/2;
  return 0;
}
#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long
#define ull unsigned long long
#define f(i,a,n) for(ll i=a;i<n;i++)
#define vec vector<ll>
#define mxh priority_queue<pair<int,int>>
#define mh priority_queue<int,vector<int>,greater<int>>
#define omap map<ll,ll>
#define umap unordered_map<ll,ll>
#define vpair vector<pair<ll,ll> >
#define pb push_back
#define mp make_pair
#define sor(v) sort(v.begin(),v.end())
#define fi  first
#define se second
#define emp empty

using namespace std;
ll ipow(ll base, ll exp)
{
    ll result = 1;
    for (;;)
    {
        if (exp & 1)
            result= (result*base)%mod;;
        exp >>= 1;
        if (!exp)
            break;
        base= (base*base)%mod;
    }

    return result;
}
bool sortinrev(const pair<int,int> &a,
               const pair<int,int> &b)
{
       return (a.first > b.first);
}
ll fact(ll n)
{
    if (n >= mod)
        return 0;

    ll result = 1;
    for (int i = 1; i <= n; i++)
        result = (result * i) % mod;

    return result;
}
ll fact1(ll n)
{   ll x=1;
    while(n>1)
    {
        x*=n;
        n--;
    }
    return x;
}
bool is_prime(ll n) {
    if (n == 1) {
        return false;
    }
    ll i = 2;
    while (i*i <= n) {
        if (n % i == 0) {
            return false;
        }
        i += 1;
    }
    return true;
}
bool areRotations(string str1, string str2)
{
   /* Check if sizes of two strings are same */
   if (str1.length() != str2.length())
        return false;

   string temp = str1 + str1;
  return (temp.find(str2) != string::npos);
}
bool pow2 (ll x)
{
    return x && (!(x&(x-1)));
}
ll maxXorSum(ll n, ll k)
{
    if (k == 1)
        return n;
    ll res = 1;
    while (res <= n)
        res <<= 1;

    // Return res - 1 which denotes
    // a number with all bits set to 1
    return res - 1;
}
ll mcost(ll a[], ll n)
{

    ll y;
    if (n % 2 == 1)
        y = a[n / 2];
    else
        y = (a[n / 2] + a[(n - 2) / 2]) / 2;

    ll s = 0;
    for(ll i = 0; i < n; i++)
        s += abs(a[i] - y);

    return s;
}
ll largest_subarray(ll a[], ll n)
{
    unordered_map<ll, ll> index;
    ll ans = 0;
    for (ll i = 0, j = 0; i < n; i++) {

        j = max(index[a[i]], j);
        ans = max(ans, i - j + 1);
        index[a[i]] = i + 1;
    }
    return ans;
}
ll b[101],sz;
pair<ll,ll> adj[101];

void dfs(int s)
{
    b[s]=1;
    for(int i=1;i<=sz;i++)
    {    if(!b[i] && (adj[s].first==adj[i].first || adj[s].second==adj[i].second))
            dfs(i);
    }
}
void display(int a[], int n)
{
    for (int i = 0; i < n; i++) {
        cout << a[i] << "  ";
    }
    cout << endl;
}
void per(int a[], int n)
{  ll d=0;
    sort(a, a + n);
  //  cout << "Possible permutations are:\n";
    do { ll s=0,x=1;
        f(i,0,n)
        {
            s+=a[i];
            if(s==0)
            {
                x=-1;
            }
        }
        if(x==1)
        {    cout<<"YES"<<endl;
        d=1;
            f(i,0,n)
           {
             cout<<a[i]<<" ";
           }cout<<endl;
          break;
        }
    } while (next_permutation(a, a + n));
    if(d==0)
    {
        cout<<"NO"<<endl;
    }
}
int gcd(int a, int b)
{
    if (b == 0)
        return a;

    else
        return gcd(b, a % b);
}

bool leftRotate(int a[], int d, int n)
{

    d = d % n;
    int g_c_d = gcd(d, n);
    for (int i = 0; i < g_c_d; i++) {
        int temp = a[i];
        int j = i;

        while (1) {
            int k = j + d;
            if (k >= n)
                k = k - n;

            if (k == i)
                break;

            a[j] = a[k];
            j = k;
        }
        a[j] = temp;
    }
    ll s=0,x=1;
    f(i,0,n)
    {
        s+=a[i];
        if(s==0)
        {
            x=0;
        }
    }
    if(x==1)
    {   cout<<"YES"<<endl;
        f(i,0,n)
        {
            cout<<a[i]<<" ";
        }
        cout<<endl;
      return true;
    }
    return false;

}
ll rec(ll n,ll k)
{
    if(n==1)
    {
        return 1;
    }
    if (k==1)
    {
        return n;
    }
    return ((n+rec(n-1,k-1))%mod);
}

bool isPerfectSquare(ll x)
{
  if(sqrt(x)*sqrt(x)==x)
  {
      return true;
  }
  return false;
}
bool isSubSequence(string str1,string str2, int m, int n)
{
   int j = 0,x=0,d=0;
    if(str1[0]==str2[0])
    {
        for (int i=0; i<n&&j<m; i++)
       {
           if (str1[j] == str2[i])
            {
              j++;

            }
           else
            {   d=i;
                break;
            }
       }
       if(j==m)
       {
           return true;
       }
       ll p=9,v=0;
       for(int i=n-1;i>=d;i--)
        {  //  cout<<"l";
            if(v==10-j)
            {
                break;
            }
            if(str1[p]==str2[i])
            {
                p--;
                v++;
            }

            else
            {
                break;
            }
        }
       //cout<<j<<" "<<v<<" "<<d<<endl;
        if(v+j==10)
        {
            return true;
        }
        else
        {
            return false;
        }


    }
    else{
         size_t found = str2.find(str1);
        if (found != string::npos && str1[9]==str2[n-1])
         {
             return true;
         }
         else
         {
             return false;
         }
    }

}
ll countBits(ll n)
{
   ll count = 0;
   while (n)
   {
        count++;
        n >>= 1;
    }
    return count;
}

bool sov(ll a[500][500],ll n,ll m)
{
	map<ll,vector<ll> > mp;
	f(i,0,n)
       {
         f(j,0,m)
         {
			mp[j-i].push_back(a[i][j]);
		}
	}
	for(auto i : mp)
	{
		f(j,1,i.second.size())
		{
			if(i.second[j]!=i.second[0])
			return false;
		}
	}
	return true;
}
bool findPartiion(ll arr[], ll n)
{
    int sum = 0;
    int i, j;

    for (i = 0; i < n; i++)
        sum += arr[i];

    if (sum % 2 != 0)
        return false;

    bool part[sum / 2 + 1][n + 1];
    for (i = 0; i <= n; i++)
        part[0][i] = true;

    for (i = 1; i <= sum / 2; i++)
        part[i][0] = false;

    for (i = 1; i <= sum / 2; i++) {
        for (j = 1; j <= n; j++) {
            part[i][j] = part[i][j - 1];
            if (i >= arr[j - 1])
                part[i][j] = part[i][j]
                             || part[i - arr[j - 1]][j - 1];
        }
    }

    return part[sum / 2][n];
}
ll CountPairs(ll arr[], ll n)
{
    sort(arr, arr + n);
    ll count = 0;
    ll l = 0, r = n - 1;

    while (l < r) {

        if (arr[l] + arr[r] > 0) {

            count += (r - l);
            r--;
        }
        else {
            l++;
        }
    }
    return count;
}
ll lcm(ll a, ll b)
   {

return a / __gcd(a, b) * b;
   }
ll rec2(ll n)
{
    if(n<=1)
    {
        return 1;
    }
    ll s=0;
    f(i,0,n)
    {
        s+=rec2(i)+rec2(n-i-1);
    }
    return s;

}
bool exist(ll n)
{
    for (int i=3; i<=sqrt(n); i+=2)
    {
        if (n%i == 0)
        {

            if (n/i == i)
                {
                    if(i%2==1)
                    {
                        return true;
                    }
                }

            else // Otherwise print both
                {
                    if(i%2==1 || (n/i)%2==1)
                    {
                        return true;
                    }
                }
        }
    }
    return false;
}
bool isPowerOfTwo(ll n)
{
   if(n==0)
   return false;

   return (ceil(log2(n)) == floor(log2(n)));
}
ll factorial(ll n)
{

    return (n == 1 || n ==(ll) 0) ? (ll)1 : n * factorial(n - 1);
}
void leftRotate(ll arr[], ll d, ll n)
{
    /* To handle if d >= n */
    d = d % n;
    ll g_c_d = gcd(d, n);
    for (ll i = 0; i < g_c_d; i++) {
        /* move i-th values of blocks */
        ll temp = arr[i];
        ll j = i;

        while (1) {
            ll k = j + d;
            if (k >= n)
                k = k - n;

            if (k == i)
                break;

            arr[j] = arr[k];
            j = k;
        }
        arr[j] = temp;
    }
}
struct node
{
   int minimum;
   int maximum;
};
int getMid(int s, int e) {  return s + (e -s)/2;  }
struct node MaxMinUntill(struct node *st, int ss, int se, int qs,
                         int qe, int index)
{   struct node tmp,left,right;
    if (qs <= ss && qe >= se)
        return st[index];
    if (se < qs || ss > qe)
    {
       tmp.minimum = INT_MAX;
       tmp.maximum = INT_MIN;
       return tmp;
     }
    int mid = getMid(ss, se);
    left = MaxMinUntill(st, ss, mid, qs, qe, 2*index+1);
    right = MaxMinUntill(st, mid+1, se, qs, qe, 2*index+2);
    tmp.minimum = min(left.minimum, right.minimum);
    tmp.maximum = max(left.maximum, right.maximum);
    return tmp;
}
struct node MaxMin(struct node *st, int n, int qs, int qe)
{
    struct node tmp;
    if (qs < 0 || qe > n-1 || qs > qe)
    {
        printf("Invalid Input");
        tmp.minimum = INT_MIN;
        tmp.minimum = INT_MAX;
        return tmp;
    }

    return MaxMinUntill(st, 0, n-1, qs, qe, 0);
}

void constructSTUtil(int arr[], int ss, int se, struct node *st,
                     int si)
{
    if (ss == se)
    {
        st[si].minimum = arr[ss];
        st[si].maximum = arr[ss];
        return ;
    }
    int mid = getMid(ss, se);
    constructSTUtil(arr, ss, mid, st, si*2+1);
    constructSTUtil(arr, mid+1, se, st, si*2+2);

    st[si].minimum = min(st[si*2+1].minimum, st[si*2+2].minimum);
    st[si].maximum = max(st[si*2+1].maximum, st[si*2+2].maximum);
}
struct node *constructST(int arr[], int n)
{
    int x = (int)(ceil(log2(n)));
    int max_size = 2*(int)pow(2, x) - 1;
    struct node *st = new struct node[max_size];
    constructSTUtil(arr, 0, n-1, st, 0);
    return st;
}
bool ckck(char c)
{
    if(c=='a'||c=='e'||c=='i'||c=='o'
       || c=='u')
    {
        return true;
    }
    else
    {
        return false;
    }
}
map<ll, bool> isPowerAdded;
bool canBeFormed (ll ele, ll K) {
   //trace1(ele)
   map<ll, bool> isPowerAdded;
   while (ele) {
    ll num = 1;
    while((num*K) <= ele) {
        num *= K;
    }
    if (!isPowerAdded[num]) {
       ele -= num;
       isPowerAdded[num] = 1;
    } else {
       return 0;
    }
   }

   return 1;
}
ll maxSubArraySum(ll a[], ll size)
{
    ll max_so_far = INT_MIN, max_ending_here = 0;

    for (ll i = 0; i < size; i++)
    {
        max_ending_here = max_ending_here + a[i];
        if (max_so_far < max_ending_here)
            max_so_far = max_ending_here;

        if (max_ending_here < 0)
            max_ending_here = 0;
    }
    return max_so_far;
}
ll slv1(string X,string Y, ll m, ll n)
{
    int ar[m + 1][n + 1];
    int p = 0;
    f(i,0,m+1)
    {
        f(j,0,n+1)
        {
            if (i == 0 || j == 0)
                ar[i][j] = 0;

            else if (X[i - 1] == Y[j - 1]) {
                ar[i][j] = ar[i - 1][j - 1] + 1;
                p = max(p, ar[i][j]);
            }
            else
                ar[i][j] = 0;
        }
    }
    return p;
}
ll fun123(ll n)
{
    for(ll i=2;i*i<=n;i++)
    {
        if(n%i==0)return i;
    }
    return n;
}

bool isPalindrome(string s,ll n)
{
    ll l = 0;
    ll h =n-1;
    while (h > l)
    {
        if (s[l++] != s[h--])
        {

            return false;
        }
    }return true;
}
ll calculatePow(ll a,ll b)
{
   if(b==0)
   {
       return a;
   }
   else
   {
       return calculatePow( b,a % b);
   }
}

// Code Starts

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t=1;
    //cin>>t;
    while(t--)
     {
       ll n,x,y,z,c=0;
       cin>>x>>y;

       cout<<(x*y)/2;
     }
  return 0;
}
 
